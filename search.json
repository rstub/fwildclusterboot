[{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/Different-Variants-of-the-Wild-Cluster-Bootstrap.html","id":"literature","dir":"Articles","previous_headings":"","what":"Literature","title":"Different Variants of the Wild Cluster Bootstrap","text":"MacKinnon, Nielsen Webb(2022)- Fast Reliable Bootstrap Jacknife Inference (2023)","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"the-boottest-function","dir":"Articles","previous_headings":"","what":"The boottest() function","title":"fwildclusterboot","text":"fwildclusterboot package consists one key function, boottest(). implements fast wild bootstrap works regression objects type lm, felm fixest base R lfe fixest packages. start, create random data set two cluster variables (group_id1 & group_id2), two fixed effects set covariates. icc_ arguments control cluster variable’s intra-cluster correlation. boottest() function 4 required several optional arguments. required objects object: regression object type lm, fixest felm clustid: character vector defines clustering variables param: character vector length one - model parameter tested B: number bootstrap iterations tests interaction, important use coefficient names internally created modeling function. boottest() allows multivariable tests. Suppose ’re interested testing null hypothesis \\(0.6*treatment + 0.2*ideology1 = 0.02\\). test hypothesis, one specify hypothesis via param, R r arguments: access estimation results, boottest() comes summary(), tidy() glance() methods. tidy() method returns estimation results data.frame. summary() returns additional information top test statistics reported tidy(). Theglance() method enables use output formatting tools modelsummary package. plot() visualizes bootstrapped p-values function hypothesized effect size \\(r\\).","code":"# set seed via dqset.seed for engine = \"R\" & Rademacher, Webb & Normal weights dqrng::dqset.seed(2352342) # set 'familiar' seed for all other algorithms and weight types  set.seed(23325)  # load data set voters included in fwildclusterboot data(voters)  # estimate the regression model via lm lm_fit <- lm(   proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration ,    data = voters )  # model with interaction lm_fit_interact <- lm(   proposition_vote ~ treatment + ideology1 + log_income:Q1_immigration ,    data = voters ) # boottest on an object of type lm boot_lm <- boottest(   lm_fit,    clustid = \"group_id1\",   param = \"treatment\",   B = 9999 ) #names(coef(lm_fit_interact)) boot_lm_interact <- boottest(   lm_fit_interact,   clustid = \"group_id1\",   param = \"log_income:Q1_immigration1\",   B = 9999 ) boot_multi <- boottest(   lm_fit,    clustid = \"group_id1\",   param = c(\"treatment\", \"ideology1\"),   R = c(0.6, 0.2),    r = 0.02,    B = 9999 ) # fwildclusterboot's internal summary() method summary(boot_lm) #> boottest.lm(object = lm_fit, param = \"treatment\", B = 9999, clustid = \"group_id1\") #>   #>  Hypothesis: 1*treatment = 0 #>  Observations: 300 #>   Bootstr. Type: rademacher #>  Clustering: 1-way #>  Confidence Sets: 95% #>  Number of Clusters: 40 #>  #>              term estimate statistic p.value conf.low conf.high #> 1 1*treatment = 0    0.073     3.709   0.001    0.033     0.113 summary(boot_multi) #> boottest.lm(object = lm_fit, param = c(\"treatment\", \"ideology1\"),  #>     B = 9999, clustid = \"group_id1\", R = c(0.6, 0.2), r = 0.02) #>   #>  Hypothesis: 0.6*treatment+0.2*ideology1 = 0.02 #>  Observations: 300 #>   Bootstr. Type: rademacher #>  Clustering: 1-way #>  Confidence Sets: 95% #>  Number of Clusters: 40 #>  #>                                 term estimate statistic p.value conf.low #> 1 0.6*treatment+0.2*ideology1 = 0.02    0.048     2.346   0.025    0.024 #>   conf.high #> 1     0.072  if(requireNamespace(\"modelsummary\")){   # summary via the modelsummary package   library(modelsummary)   msummary(list(boot_lm, boot_lm_interact),              estimate = \"{estimate} ({p.value})\",             statistic = \"[{conf.low}, {conf.high}]\")   } #> Loading required namespace: modelsummary plot(boot_lm)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"multiway-clustering","dir":"Articles","previous_headings":"The boottest() function","what":"Multiway Clustering","title":"fwildclusterboot","text":"boottest() function supports clustering dimension. E.g. two-way clustering, one simply needs specify names cluster variables character vector.","code":"boot_lm <- boottest(   lm_fit,   clustid = c(\"group_id1\", \"group_id2\"),    param = \"treatment\",   B = 9999 ) summary(boot_lm) #> boottest.lm(object = lm_fit, param = \"treatment\", B = 9999, clustid = c(\"group_id1\",  #>     \"group_id2\")) #>   #>  Hypothesis: 1*treatment = 0 #>  Observations: 300 #>   Bootstr. Type: rademacher #>  Clustering: 2-way #>  Confidence Sets: 95% #>  Number of Clusters: 40 20 253 #>  #>              term estimate statistic p.value conf.low conf.high #> 1 1*treatment = 0    0.073     3.842   0.004    0.031     0.115"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"the-heteroskedastic-bootstrap","dir":"Articles","previous_headings":"The boottest() function","what":"The Heteroskedastic Bootstrap","title":"fwildclusterboot","text":"drop clustid argument, boottest() run heteroskedasticity robust wild bootstrap via ‘R-lean’ algorithm. moment, null hypothesis always imposed, Rademacher Webb weights supported, confidence intervals computed. , regression weights supported. algorithms fwildclusterboot, p-values calculated based pivotal t-statistics.","code":"boot_lm <- boottest(   lm_fit,   param = \"treatment\",   B = 9999 ) summary(boot_lm) #> boottest.lm(object = lm_fit, param = \"treatment\", B = 9999) #>   #>  Hypothesis: 1*treatment = 0 #>  Observations: 300 #>   Bootstr. Type: rademacher #>  Clustering: 0-way #>  Confidence Sets: 95% #>  #>              term estimate statistic p.value conf.low conf.high #> 1 1*treatment = 0    0.073     3.096   0.002       NA        NA boot_lm$engine #> [1] \"R-lean\""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"choice-of-bootstrap-weights","dir":"Articles","previous_headings":"The boottest() function","what":"Choice of Bootstrap Weights","title":"fwildclusterboot","text":"Furthermore, can choose among four different weighting distribution via type argument: Rademacher, Mammen, Normal Webb. default, boottest() uses Rademacher distribution.","code":"boot_lm_rade <- boottest(   lm_fit,    clustid = c(\"group_id1\", \"group_id2\"),    param = \"treatment\",    B = 999,   type = \"rademacher\") boot_lm_webb <- boottest(   lm_fit,    clustid = c(\"group_id1\", \"group_id2\"),    param = \"treatment\",    B = 999,   type = \"webb\" )  if(requireNamespace(\"modelsummary\")){   library(modelsummary)   msummary(list(boot_lm_rade, boot_lm_webb),            estimate = \"{estimate} ({p.value})\",           statistic = \"[{conf.low}, {conf.high}]\") }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"other-function-arguments","dir":"Articles","previous_headings":"The boottest() function","what":"Other function arguments","title":"fwildclusterboot","text":"Via function argument sign_level, can control significance level test. default value sign_level = 0.05, corresponds 95% confindence interval. case multiway clustering, one might want specify bootstrap clustering level. default, boottest chooses clustering level highest number clusters bootcluster = \"max\". choices minimum cluster, independent clustering variables.","code":"boot_lm_5 <- boottest(   lm_fit,    clustid = c(\"group_id1\"),   param = \"treatment\", B = 9999,    sign_level = 0.05 ) boot_lm_10 <- boottest(   lm_fit,    clustid = c(\"group_id1\"),   param = \"treatment\", B = 9999,    sign_level = 0.10 )  if(requireNamespace(\"modelsummary\")){   library(modelsummary)   msummary(list(boot_lm_5, boot_lm_10),            estimate = \"{estimate} ({p.value})\",           statistic = \"[{conf.low}, {conf.high}]\") } boot_lm1 <- boottest(   lm_fit,    clustid = c(\"group_id1\", \"group_id2\"),    param = \"treatment\",   B = 9999,    bootcluster = \"min\" )  boot_lm2 <- boottest(   lm_fit,    clustid = c(\"group_id1\", \"group_id2\"),    param = \"treatment\",   B = 9999,    bootcluster = \"group_id1\" )  if(requireNamespace(\"modelsummary\")){   library(modelsummary)   msummary(list(boot_lm1, boot_lm2),            estimate = \"{estimate} ({p.value})\",           statistic = \"[{conf.low}, {conf.high}]\") }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"fixed-effects","dir":"Articles","previous_headings":"The boottest() function","what":"Fixed Effects","title":"fwildclusterboot","text":"Last, boottest() supports -projection fixed effects estimation stage via lfe::felm() fixest::feols(). Within bootstrap, possible project one fixed effect, can set via fe function argument. fixed effects specified either felm() feols() treated sets binary regressors. Note boottest.fixest() currently know properly handle advanced fixest syntax fixed effects, e.g. varying slopes.","code":"if(requireNamespace(\"fixest\")){   # estimate the regression model via feols   library(fixest)   feols_fit <- feols(     proposition_vote ~ treatment + ideology1 + log_income |        Q1_immigration ,      data = voters   )   boot_feols <- boottest(     feols_fit,      clustid = \"group_id1\",      param = \"treatment\",      B = 9999,      fe = \"Q1_immigration\"   ) } #> Loading required namespace: fixest #> Too guarantee reproducibility, don't forget to set a global random seed #> **both** via `set.seed()` and `dqrng::dqset.seed()`. #> This message is displayed once every 8 hours."},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"the-subcluster-bootstrap","dir":"Articles","previous_headings":"The boottest() function","what":"The Subcluster Bootstrap","title":"fwildclusterboot","text":"case treated clusters, MacKinnon Webb (2018) suggest use subclusters form bootstrap distribution. boottest() allows specify subclusters via bootcluster argument.","code":"boot_min <- boottest(   lm_fit,   clustid = c(\"group_id1\", \"group_id2\"),    param = \"treatment\",    B = 9999,    bootcluster = \"min\" ) boot_var <- boottest(   lm_fit,   clustid = c(\"group_id1\", \"group_id2\"),    param = \"treatment\",    B = 9999,    bootcluster = \"group_id1\" ) boot_2var <- boottest(   lm_fit,   clustid = c(\"group_id1\", \"group_id2\"),    param = \"treatment\",    B = 9999,    bootcluster = c(\"group_id1\", \"Q1_immigration\") )  if(requireNamespace(\"modelsummary\")){   library(modelsummary)   msummary(model = list(boot_min, boot_2var),           estimate = \"{estimate} ({p.value})\",           statistic = \"[{conf.low}, {conf.high}]\") }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"regression-weights-weighted-least-squares-wls","dir":"Articles","previous_headings":"The boottest() function","what":"Regression Weights / Weighted Least Squares (WLS)","title":"fwildclusterboot","text":"regression weights specified estimation stage via lm(), feols() felm(), boottest() incorporates weights bootstrap inference:","code":"# regression with weights / WLS lm_w_fit <- lm(   proposition_vote ~ treatment + ideology1 + log_income,   weights = voters$weights,   data = voters )  boot_w_lm <- boottest(   lm_w_fit,    clustid = \"group_id1\",    param = \"treatment\",    B = 9999 )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"parallel-execution","dir":"Articles","previous_headings":"The boottest() function","what":"Parallel Execution","title":"fwildclusterboot","text":"major bottleneck performance boottest() large matrix multiplication, includes bootstrap weights matrix right. order speed computation, multiplication calls c++ Eigen library, allows parallelization dense matrix products. default, boottest() uses one thread. Note cost parallelization due communication overhead. rule thumb, boottest() takes 10 seconds per execution, using second thread might speed bootstrap. number threads can specified via nthreads argument boottest():","code":"boot_lm <- boottest(   lm_fit,    clustid = \"group_id1\",    param = \"treatment\",    B = 9999,    nthreads = 2 )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"running-the-wild-cluster-bootstrap-via-wildboottests-jl","dir":"Articles","previous_headings":"","what":"Running the wild cluster bootstrap via WildBootTests.jl","title":"fwildclusterboot","text":"fwildclusterboot serves R port WildBootTests.jl package. guidance install Julia WildBootTests.jl connect R Julia, please take look running WildBootTests.jl fwildclusterboot vignette. can tell boottest() run WildBootTests.jl using engine function argument: seed used within Julia linked R’s global seed, can set familiar set.seed() function. decide run bootstraps WildBootTests.jl, can set global variable via Calling boottest() without specifying engine = \"WildBootTests.jl\" now automatically run bootstrap WildBootTests.jl.","code":"boot_lm <- boottest(   lm_fit,    clustid = \"group_id1\",    param = \"treatment\",    B = 9999,    engine = \"WildBootTests.jl\" ) tidy(boot_lm) #             term   estimate statistic    p.value   conf.low conf.high #1 1*treatment = 0 0.07290769  3.709435 0.00060006 0.03326969 0.1134117 setBoottest_engine(\"WildBootTests.jl\")"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"the-wre-bootstrap-for-iv-models","dir":"Articles","previous_headings":"Running the wild cluster bootstrap via WildBootTests.jl","what":"The WRE bootstrap for IV models","title":"fwildclusterboot","text":"WildBootTests.jl, fwildclusterboot supports WRE bootstrap Davidson & MacKinnon, 2010 IV (instrumental variables) models objects type ivreg via boottest() function:","code":"library(ivreg)  data(\"SchoolingReturns\", package = \"ivreg\")        # drop all NA values from SchoolingReturns SchoolingReturns <- na.omit(SchoolingReturns) ivreg_fit <- ivreg(   log(wage) ~ education + age + ethnicity + smsa + south + parents14 |               nearcollege + age  + ethnicity + smsa + south + parents14,    data = SchoolingReturns)         boot_ivreg <- boottest(   object = ivreg_fit,   B = 999,   param = \"education\",   clustid = \"kww\",   type = \"mammen\",   impose_null = TRUE ) tidy(boot_ivreg) #              term  estimate statistic   p.value    conf.low conf.high # 1 1*education = 0 0.0638822  1.043969 0.2482482 -0.03152655 0.2128746"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"tests-of-multiple-joint-hypotheses-q-1","dir":"Articles","previous_headings":"Running the wild cluster bootstrap via WildBootTests.jl","what":"Tests of multiple joint hypotheses (q > 1)","title":"fwildclusterboot","text":"WildBootTests.jl, can also test multiple joint hypotheses via mboottest() function. minor differences, mboottest()'s syntax largely mirrors boottest(). jointly test null hypothesis \\(H_0: treatment = 0 \\text{ } ideology1 = 0\\) vs \\(H_0: treatment \\neq 0 \\text{ } ideology1 \\neq 0\\) via wild cluster bootstrap, can run","code":"library(clubSandwich) R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-  mboottest(   object = lm_fit,    clustid = \"group_id1\",    B = 999,    R = R ) tidy(wboottest) #   teststat p_val # 1 8.469086     0"},{"path":[]},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"a-sanity-check-if-fwildclusterbootboottest-works-as-intended","dir":"Articles","previous_headings":"Miscellanea","what":"A sanity check if fwildclusterboot::boottest() works as intended","title":"fwildclusterboot","text":"sanity check see fwildclusterboot::boottest() works intended look t_stat return value. WCR WCU bootstrap, boottest() re-calculates “original” - hence non-bootstrapped - t-statistic input regression model. t-stat computed boottest() t-stats reported either lm(), feols() lfe() error clustering structure small-sample adjustments identical. find differ, please report bug github. Note fwildclusterboot explicitly tests t-stat equality fixest::feols() .","code":"data <-  fwildclusterboot:::create_data(   N = 1000,    N_G1 = 20,    icc1 = 0.81,   N_G2 = 10,   icc2 = 0.01,    numb_fe1 = 10,   numb_fe2 = 10,    seed = 8769 )  # oneway clustering  feols_fit <- fixest::feols(   proposition_vote ~ treatment + ideology1 + log_income,   data = data,    cluster = ~group_id1,    ssc = fixest::ssc(adj = TRUE,                      cluster.adj = TRUE,                      cluster.df = 'conventional')   )          feols_tstats <- fixest::coeftable(   feols_fit   )[c(\"treatment\", \"log_income\", \"ideology1\"), 3]  boot_tstats <-  lapply(c(\"treatment\", \"log_income\", \"ideology1\"), function(x){   boot1 <- fwildclusterboot::boottest(     feols_fit,      clustid = c(\"group_id1\"),     B = 999,      param = x,      ssc = fwildclusterboot::boot_ssc(       adj = TRUE,        cluster.adj = TRUE,        cluster.df = 'conventional'),         impose_null = TRUE)$t_stat })          df <- cbind(feols_tstats, unlist(boot_tstats)) colnames(df) <- c(\"feols tstat\", \"boottest tstat\") df #>            feols tstat boottest tstat #> treatment    0.9958071      0.9958071 #> log_income  -2.9129869     -2.9129869 #> ideology1    1.4169933      1.4169933"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"small-sample-corrections","dir":"Articles","previous_headings":"Miscellanea","what":"Small Sample Corrections","title":"fwildclusterboot","text":"boottest() offers several options small sample adjustments via ssc function argument need specified via boot_ssc() function. boot_ssc() 4 arguments intentionally designed mimic fixest's ssc() function. information default choices alternative options, see ?fwildclusterboot::boot_ssc().","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"memory-the-lean-implementation-of-the-wild-cluster-bootstrap","dir":"Articles","previous_headings":"Miscellanea","what":"Memory & the ‘lean’ implementation of the wild cluster bootstrap","title":"fwildclusterboot","text":"R-implementation fast algorithm memory-intensive, fwildclusterboot supports Rcpp-based ‘lean’ implementation wild cluster bootstrap case memory demands get prohibitively large. general, ‘lean’ algorithm much slower: main feature requires much less memory. algorithm equivalent ‘wild2’ algorithm “Fast & Wild” paper Roodman et al. Note implementation WildBootTests.jl , general, memory-efficient.","code":"library(bench)  dt <- fwildclusterboot:::create_data(   N = 10000,    N_G1 = 250,    icc1 = 0.01,    N_G2 = 10,    icc2 = 0.01,    numb_fe1 = 10,    numb_fe2 = 10,    seed = 7645 )  lm_fit <- lm(   proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration ,   data = dt )  res <-  bench::mark(   \"R\" = boottest(lm_fit,             clustid = \"group_id1\",             param = \"treatment\",             B = 9999,             engine = \"R\",             nthreads = 4),    \"R-lean\" = boottest(lm_fit,             clustid = \"group_id1\",             param = \"treatment\",             B = 9999,             engine = \"R-lean\",             nthreads = 4),   \"WildBootTests.jl\" =      boottest(lm_fit,             clustid = \"group_id1\",             param = \"treatment\",             B = 9999,             engine = \"WildBootTests.jl\"),    iterations = 1,    check = FALSE )  res"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"seeds","dir":"Articles","previous_headings":"Miscellanea","what":"Seeds","title":"fwildclusterboot","text":"guarantee reproducibility, need set global random seed via lean algorithm (via engine = \"R-lean\"), heteroskedastic wild bootstrap wild cluster bootstrap via engine = \"R\" Mammen weights engine = \"WildBootTests.jl\" dqrng::dqset.seed() using engine = \"R\" Rademacher, Webb Normal weights","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/fwildclusterboot.html","id":"treatment-of-invalid-test-statistics-for-multiway-clustering","dir":"Articles","previous_headings":"Miscellanea","what":"Treatment of Invalid Test Statistics for multiway clustering","title":"fwildclusterboot","text":"case multi-way clustering, guaranteed covariance matrix positive definite, case resulting bootstrap test statistics invalid. boottest() follows implementation STATA deletes invalid tests statistics, informs user note.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/Literature.html","id":"academic-papers","dir":"Articles","previous_headings":"","what":"Academic Papers","title":"Literature on the Wild Bootstrap and Clustered Inference in Regression Models","text":"Roodman, MacKinnon, Nielsen & Webb - Fast Wild Bootstrap Inference (Stata Journal), 2019. paper read think performance fwildclusterboot resembles black magic. Introduces boottest - Stata software package fwildclusterboot modeled - contains great introduction (almost) features wild cluster bootstrap implemented fwildclusterboot. MacKinnon, Nielsen & Webb - Fast Reliable Jackknife Bootstrap Methods Cluster-Robust Inference (Journal Applied Econometrics), 2023 Introduces “31”, “33”, “13” bootstrap types, explains compute quickly, contrasts empirical performance Monte Carlo studies. Argues favour “31” method. MacKinnon - Fast cluster bootstrap methods linear regression models (Econometrics Statistics, 2021) Discusses computational tricks speeding wild cluster bootstrap inference. provides nice discussion (bootstrap) test inversion compute confidence intervals. MacKinnon, Nielsen & Webb - Cluster-robust inference: guide empirical practice (Journal Econometrics), 2023 Broad introduction state---art literature survey concepts around clustered errors. Webb - Reworking wild bootstrap based inference clustered errors (forthcoming Canadian Journal Economics) Introduces “Webb” weights, recommended wild bootstrap weight type number clusters small. MacKinnon & Webb - wild bootstrap (treated) clusters (Econometrics Journal), 2018 Introduces subcluster bootstrap regressions treated clusters (e.g. difference--differences regressions one treated cluster). MacKinnon - Wild Cluster Bootstrap Confidence Intervals (L’Actualité économique), 2015 Discusses invert bootstrap obtain confidence interval. Davidson & MacKinnon - Wild bootstrap tests IV regression (Journal Economic Business Statistics), 2010 Introduces WRE bootstrap / wild cluster bootstrap instrumental variables regression. Cameron, Gelbach & Miller - Bootstrap-based improvements inference clustered errors (Review Economics Statistics) paper started literature wild cluster bootstrap inference. Simulation evidence wild cluster bootstrap works remarkably well clusters. Flachaire - Bootstrapping heteroskedastic regression models: wild bootstrap vs. pairs bootstrap (Computational Statistics & Data Analysis), 2005 Provides simulation evidence performance heteroskedastic wild bootstrap procedures. MacKinnon - Thirty Years Heteroskedasticity-Robust Inference, 2012 simulation evidence performance HC1-HC3 vcov estimators vs wild bootstrap. Joshi, Megha, James E. Pustejovsky, S. Natasha Beretvas - “Cluster wild bootstrapping handle dependent effect sizes meta‐analysis small number studies.” (Research Synthesis Methods), 2022 Nice simulations empirical performance wild cluster bootstrap tests multiple joint hypotheses. Kline & Santos - Score Based Approach Wild Bootstrap Inference (Journal Econometric Methods), 2012 Introduces score based wild bootstrap non-linear regression models.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/Literature.html","id":"links-blogposts-etc","dir":"Articles","previous_headings":"","what":"Links, blogposts, etc","title":"Literature on the Wild Bootstrap and Clustered Inference in Regression Models","text":"Stata blog - Heteroskedasticity robust standard errors: practical considerations Extensive simulations small sample properties HC estimators, inlcuding wild bootstrap","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/Multiple-Estimations-with-fixest.html","id":"variables-created-via-i","dir":"Articles","previous_headings":"","what":"Variables created via ‘i()’","title":"fwildclusterboot and fixest","text":"","code":"feols_fit <- feols(proposition_vote ~ i(treatment, ideology1) ,     data = voters )  boot1 <- boottest(feols_fit,     B = 9999,     param = \"treatment::0:ideology1\",     clustid = \"group_id1\" ) #> Warning: Please note that the seeding behavior for random number generation for #> `boottest()` has changed with `fwildclusterboot` version 0.13. #>  #> It will no longer be possible to exactly reproduce results produced by versions #> lower than 0.13. #>  #> If your prior results were produced under sufficiently many bootstrap #> iterations, none of your conclusions will change. For more details about this #> change, please read the notes in #> [news.md](https://cran.r-project.org/web/packages/fwildclusterboot/news/news.html). #> This warning is displayed once per session. #> Too guarantee reproducibility, don't forget to set a global random seed #> **both** via `set.seed()` and `dqrng::dqset.seed()`. #> This message is displayed once every 8 hours.  boot1 #> $point_estimate #> [1] 0.05671922 #>  #> $p_val #> [1] 0.03730373 #>  #> $conf_int #> [1] 0.003663667 0.108286279 #>  #> $p_grid_vals #>  [1] 0.01050105 0.01790179 0.03010301 0.04750475 0.07320732 0.11241124 #>  [7] 0.16581658 0.24312431 0.33733373 0.45094509 0.58585859 0.73977398 #> [13] 0.90989099 0.90999100 0.74107411 0.57795780 0.43764376 0.31943194 #> [19] 0.22242224 0.15171517 0.09880988 0.06570657 0.04130413 0.02540254 #> [25] 0.01580158 0.00780078 #>  #> $grid_vals #>  [1] -0.013965623 -0.008310836 -0.002656048  0.002998739  0.008653526 #>  [6]  0.014308314  0.019963101  0.025617888  0.031272676  0.036927463 #> [11]  0.042582250  0.048237038  0.053891825  0.059546613  0.065201400 #> [16]  0.070856187  0.076510975  0.082165762  0.087820549  0.093475337 #> [21]  0.099130124  0.104784911  0.110439699  0.116094486  0.121749274 #> [26]  0.127404061 #>  #> $t_stat #> [1] 2.269598 #>  #> $t_boot #>    [1] -4.620094e-01 -3.122919e-01 -1.188467e+00 -8.698805e-01  6.092151e-01 #>    [6]  3.006668e-01 -6.267715e-01  4.193048e-01  1.043900e-01 -1.935135e-01 #>   [11]  2.050025e-01  1.251781e+00  4.012902e-01  3.547389e-01  6.212277e-01 #>   [16]  8.332391e-01  4.499905e-01  7.857457e-01  1.395924e+00  8.012788e-01 #>   [21] -1.940967e+00 -2.394451e-01 -3.779123e-01 -1.965177e-01 -4.059113e-01 #>   [26] -5.371882e-01  3.082588e-01 -1.512798e+00 -1.150181e+00  2.260975e+00 #>   [31]  8.046937e-01 -2.395039e-01 -1.968911e-01 -8.606129e-01  1.130590e-01 #>   [36] -1.224394e+00 -1.175593e+00  1.781423e+00 -1.809067e+00 -1.656401e+00 #>   [41] -9.054762e-01 -6.657748e-01  6.406133e-01 -8.441935e-01 -1.524626e-01 #>   [46]  1.164703e-02 -1.763133e+00 -1.965181e-01  2.409079e-01 -9.337619e-01 #>   [51]  5.863275e-01 -5.399120e-01  1.207196e+00  2.113786e-01  1.501493e+00 #>   [56] -3.430621e-01 -1.105145e+00  8.870277e-01  7.046334e-01 -9.216923e-01 #>   [61] -3.086970e-01  8.821802e-01  5.297076e-01  8.323980e-01  6.290336e-01 #>   [66]  1.255854e+00  8.536911e-01  1.088522e+00 -1.588084e+00 -9.491832e-01 #>   [71] -1.006664e+00  5.705177e-01  7.114274e-01  6.338674e-01  1.751973e+00 #>   [76]  8.762675e-02  4.155228e-01 -1.805479e+00 -1.014846e+00 -5.603843e-01 #>   [81]  1.024064e+00  5.380071e-01  6.354980e-01  8.117037e-01 -2.200356e+00 #>   [86]  1.054751e+00  5.459601e-01 -1.846486e-01  4.822668e-02  2.061519e+00 #>   [91]  9.532392e-01 -3.771417e-01 -7.555733e-01  2.277337e-01 -1.273767e+00 #>   [96] -7.652623e-01  5.127802e-01 -2.878106e-01  8.446299e-01 -4.946762e-02 #>  [101] -9.032498e-02  7.168301e-01  1.271900e+00  3.542598e-01  5.462389e-01 #>  [106]  7.680331e-01  1.200471e+00  6.446858e-01  1.490245e+00 -3.448603e-01 #>  [111] -6.589660e-01  1.116531e+00  2.717543e-01 -1.231097e+00  1.024000e+00 #>  [116] -2.594120e+00  5.940707e-01  1.462999e-01  7.756932e-01  4.724029e-01 #>  [121]  1.713515e+00  4.969195e-01 -1.646650e+00 -4.254446e-01  9.458203e-01 #>  [126] -1.160015e-01 -1.123972e+00 -1.960268e-01 -4.374246e-01 -2.179654e-01 #>  [131]  1.382925e-01 -8.190772e-01 -9.233172e-01  9.322582e-01 -2.004680e-01 #>  [136] -1.215438e+00 -1.622680e+00 -5.485864e-01 -1.570586e+00  2.137319e+00 #>  [141]  2.730046e-04  4.974003e-01 -6.690568e-01 -5.580840e-01 -4.803493e-01 #>  [146]  1.463263e+00  3.785542e-01 -2.047545e+00 -2.494007e+00  1.746677e-02 #>  [151]  1.099255e-02 -4.015512e-01 -8.656449e-01  1.134675e-01  2.549364e+00 #>  [156]  7.807951e-01 -1.511976e+00  7.349710e-01 -1.068476e-01  3.377727e-01 #>  [161]  1.807365e+00  8.684046e-02  5.577471e-01 -2.382167e+00  1.557952e+00 #>  [166] -1.331988e+00 -2.168909e-01 -6.654163e-01  8.973062e-01  1.709220e-02 #>  [171] -2.000462e+00 -6.825448e-01 -4.404625e-01  2.153974e+00  5.881717e-01 #>  [176]  2.825857e-01  9.850348e-01 -3.166291e-01 -2.938801e-01 -1.591644e+00 #>  [181] -3.954080e-01  1.274672e+00  3.862107e-01  2.297176e-01  4.083197e-01 #>  [186]  1.133208e+00  1.239745e+00 -5.006921e-02 -6.401400e-01  3.086624e-01 #>  [191]  1.898465e-01  7.779606e-01 -9.165954e-01  1.156541e+00 -1.022790e+00 #>  [196]  1.352936e+00  2.245966e-01  1.084004e+00  1.463379e+00 -1.126081e+00 #>  [201]  3.698646e-01 -2.975066e-01 -1.352718e+00 -1.332981e-01 -1.390272e+00 #>  [206]  1.517134e+00  5.201502e-01  1.375173e+00 -7.752856e-01  1.541406e-03 #>  [211] -3.395259e-01  8.557877e-01  3.420189e-01  1.184613e+00 -5.777097e-01 #>  [216] -3.141444e+00  9.920020e-01 -3.170921e-02  5.591569e-01 -3.324222e-01 #>  [221]  5.117527e-01 -7.357414e-01 -4.306758e-02 -4.069536e-01 -2.934743e-01 #>  [226]  5.538625e-01  9.248008e-01 -2.799705e+00 -2.099068e+00 -4.493530e-01 #>  [231]  6.041080e-01  7.105622e-01 -2.774005e-01  6.592857e-01  6.204744e-03 #>  [236] -7.322656e-02 -7.405340e-01  6.285553e-01  8.760675e-01  9.854668e-01 #>  [241] -1.840796e+00  4.686269e-01 -2.576028e+00  1.209521e+00 -1.606912e+00 #>  [246]  3.744676e-01 -1.889232e+00 -3.143635e+00  9.817478e-01 -1.079106e+00 #>  [251] -9.426809e-02  5.843433e-01 -2.933570e-01  1.464868e+00 -2.928566e-01 #>  [256]  2.035992e-01 -2.801698e-01 -1.328293e+00 -1.425038e-01 -2.434273e+00 #>  [261]  9.360342e-01  5.700979e-01 -1.984985e+00 -1.118780e+00  1.403688e+00 #>  [266]  3.932745e-02  1.356825e+00 -1.220669e+00 -5.791378e-01  1.086861e+00 #>  [271] -1.477559e+00  1.074745e+00 -2.585371e-01 -6.405894e-01  1.187400e-01 #>  [276] -7.375580e-01 -9.219592e-02 -3.518489e-01 -1.452675e+00 -9.290218e-02 #>  [281] -2.396783e-01 -5.487509e-01 -8.220860e-01 -1.194397e-01  2.554460e+00 #>  [286]  6.221968e-02 -4.556154e-01  1.712195e+00  1.110052e+00 -1.190251e-01 #>  [291]  1.187672e+00 -1.161705e+00 -7.218598e-01  5.650587e-01  4.243128e-01 #>  [296] -1.602403e-01 -4.743505e-01  9.478304e-02  5.966838e-01 -9.177988e-01 #>  [301] -1.233819e+00 -4.924552e-01  2.445962e-01 -9.850589e-01 -9.987438e-01 #>  [306] -7.142133e-01  9.208387e-01 -5.623622e-01 -9.230188e-01  5.760808e-01 #>  [311] -1.135100e-01 -8.195488e-01  1.406477e+00 -9.722100e-01  2.652639e-01 #>  [316] -1.350561e+00 -1.664966e+00  9.126591e-01 -2.762465e-01  8.066128e-01 #>  [321] -1.622760e+00 -6.597375e-02  9.972821e-01  3.986656e-01 -7.684706e-01 #>  [326]  8.363303e-01  5.806317e-01  5.532401e-01  5.648577e-01  1.202997e+00 #>  [331]  8.227551e-01  1.247554e+00 -5.512713e-01  9.840262e-03 -1.764426e+00 #>  [336] -1.049593e+00  1.618317e+00 -3.117232e-01 -1.692947e+00  1.527694e+00 #>  [341]  6.919036e-02 -1.077003e+00  1.745732e+00 -6.988866e-01  2.089925e+00 #>  [346]  4.135751e-01 -7.664722e-01 -2.195636e-01 -2.658708e-01 -4.096413e-01 #>  [351] -1.180664e+00 -1.580184e+00  1.400481e+00 -2.044469e+00 -6.767178e-02 #>  [356] -6.316404e-01  3.395875e-01 -1.086137e+00  9.493242e-01 -9.256757e-01 #>  [361] -1.867497e+00 -1.329615e+00  3.199437e-01  4.531320e-01  1.203167e+00 #>  [366]  1.074556e-01 -1.050955e+00 -1.635106e+00  2.342584e+00 -7.870698e-02 #>  [371]  1.478901e-01 -5.757449e-01  1.186701e-01  1.188585e-01  1.076996e+00 #>  [376] -5.215029e-01  2.240533e-01 -4.907988e-01  1.317673e-01 -8.233972e-01 #>  [381]  5.305907e-01 -1.565498e+00  4.612303e-01  9.216283e-01 -1.859638e-01 #>  [386]  5.843852e-02 -1.038039e-01 -2.093954e-01  9.650760e-01 -8.232597e-03 #>  [391] -6.841639e-01  7.675214e-01  8.818873e-01 -2.078976e+00  1.170892e+00 #>  [396] -1.236189e+00  2.062923e+00 -1.314576e+00  6.298332e-01  6.175863e-01 #>  [401]  2.033777e+00 -7.008775e-01  3.031999e-01  1.147137e+00 -6.353213e-01 #>  [406]  4.570214e-01 -9.014999e-02  2.618612e+00  5.499800e-01  7.692092e-01 #>  [411]  7.228873e-02 -6.808408e-01 -3.475848e-01  5.870418e-01  1.207528e-01 #>  [416] -3.084826e-01 -9.843009e-01 -1.621856e-01  9.628695e-02 -5.340224e-02 #>  [421] -7.316876e-01 -3.271060e-01  2.065929e+00 -5.059175e-01 -8.042129e-01 #>  [426] -9.554098e-04  6.639876e-01 -6.963700e-01  6.994556e-01  2.962431e-02 #>  [431] -6.861569e-01 -5.514774e-01  9.435634e-01 -6.804821e-01 -1.073917e+00 #>  [436] -1.036280e+00  9.859039e-01 -1.480816e+00  1.200637e+00  1.953078e+00 #>  [441]  6.491970e-02  6.571858e-01 -4.725086e-01 -3.395524e-01 -3.951870e-01 #>  [446]  1.633669e+00 -1.081793e-02  2.418767e-01  1.110161e+00 -3.634557e-01 #>  [451] -3.343485e-01  1.512077e+00 -5.716930e-02 -1.178634e+00  9.726998e-01 #>  [456]  4.593708e-01 -4.956092e-01  2.066751e+00 -1.086388e+00 -9.368579e-01 #>  [461]  5.121923e-01 -1.047443e+00 -7.000980e-01  7.200239e-01 -5.453203e-01 #>  [466]  3.935242e-01 -1.616726e-01 -2.841357e-01  1.491659e-01  5.922690e-01 #>  [471]  1.161491e+00 -1.198455e+00 -1.254027e+00  5.369980e-01 -7.205029e-01 #>  [476]  9.670200e-02  1.923265e+00  1.129905e-01  7.082412e-02 -1.172188e+00 #>  [481]  2.427175e-01  2.017887e+00 -1.259902e+00  1.284846e-01  1.126047e-01 #>  [486] -5.331684e-01 -1.256102e-01  2.088541e-02  6.808889e-01 -9.104172e-01 #>  [491] -3.408677e-01  1.525282e+00  2.919560e-01 -7.355054e-01 -6.508232e-01 #>  [496]  4.821535e-01 -1.079702e-02 -2.892589e-01  1.496400e+00 -1.203635e+00 #>  [501]  5.929137e-01 -1.417268e+00 -5.430618e-01  4.233608e-01 -5.876351e-01 #>  [506] -1.770706e+00 -1.563810e+00 -1.195533e+00  2.498127e+00  1.317357e+00 #>  [511] -5.979267e-01  1.196324e+00  1.243903e+00 -1.306058e+00  1.097065e+00 #>  [516] -4.582570e-01 -8.329342e-01 -7.733511e-01  8.315551e-01  3.957941e-01 #>  [521]  3.301030e-01  3.172341e-01  2.663331e-01 -2.219863e-01 -2.834465e+00 #>  [526] -2.938111e-01 -2.051048e+00 -4.988288e-01  3.596015e-02  2.012720e-01 #>  [531] -1.692557e+00 -4.248187e-01  4.073438e-01  2.754033e-01 -2.994883e-01 #>  [536]  6.439354e-01 -6.762934e-01  2.801389e-01 -1.437748e+00 -1.985494e+00 #>  [541] -3.091700e-01 -1.264150e+00  1.016334e-01  1.052519e+00  7.971666e-01 #>  [546]  5.400316e-01 -8.109176e-01 -1.677558e+00  1.196278e+00 -1.013215e+00 #>  [551]  3.930153e-01  1.659671e+00 -2.814547e+00 -1.357867e+00  2.467022e+00 #>  [556] -9.757000e-01  2.841145e-01 -5.463852e-01  5.503284e-01 -2.923148e+00 #>  [561] -1.268753e-01  2.981401e-01  1.662976e+00 -5.583437e-01  7.604739e-01 #>  [566]  7.766711e-02  2.916095e-01 -6.119254e-02 -5.449566e-01 -1.489330e+00 #>  [571]  1.579303e+00 -1.028658e+00  1.345261e+00  2.513886e-01 -1.751235e-01 #>  [576]  1.080941e+00  9.714610e-02 -4.466059e-01 -2.233895e-01 -1.185559e+00 #>  [581] -6.911553e-01  9.461567e-01 -1.437987e-01  2.039472e+00  3.712232e-01 #>  [586] -1.442624e+00  4.575614e-01  1.832368e+00 -8.167895e-01 -4.316885e-01 #>  [591]  7.479778e-01  3.027627e+00  3.228655e-01  2.053401e-01 -5.856285e-01 #>  [596]  5.002226e-01  7.378903e-01  7.989661e-01  1.608986e-01 -3.108428e-01 #>  [601] -2.177194e+00 -6.498930e-01  6.085334e-01  4.558956e-01 -1.483377e+00 #>  [606] -1.236481e-01 -2.843074e-01  1.401699e+00  1.034674e+00 -1.410446e+00 #>  [611] -1.246483e+00 -1.044406e+00 -3.719392e-01  5.985195e-01  4.815167e-01 #>  [616]  5.194377e-01 -1.851950e+00 -6.321241e-02  1.029569e+00 -1.363247e+00 #>  [621]  7.180248e-01 -1.098571e+00 -7.156795e-01  2.183452e-01  5.063125e-01 #>  [626]  8.091401e-01  7.642326e-01  2.829708e-01  6.711388e-01 -1.492029e+00 #>  [631] -1.854373e+00  8.525303e-01  6.284601e-01 -1.022465e+00 -6.126834e-01 #>  [636]  1.162945e+00  2.650017e+00 -4.984335e-01  4.924498e-01 -8.912109e-01 #>  [641]  1.066978e+00  9.565953e-01  5.492803e-01 -2.441557e-01  1.165714e+00 #>  [646] -7.427619e-01  3.455754e-01  3.566120e-01 -1.989396e+00 -8.236079e-01 #>  [651]  1.166134e+00 -1.366573e+00  9.950870e-01  6.150516e-01  8.573982e-01 #>  [656]  3.215570e-01 -7.165746e-01  1.206652e-01  9.717113e-01  1.508868e-02 #>  [661] -6.673130e-01  6.191548e-01 -1.755330e+00 -1.420849e+00  7.860428e-01 #>  [666] -5.442691e-01 -1.895218e+00  1.391674e+00 -7.434619e-01 -1.185164e+00 #>  [671] -7.602069e-02  9.650428e-01  6.997156e-01  5.376042e-01  1.948010e-01 #>  [676]  9.053538e-01  1.522815e+00 -9.293903e-01  6.894504e-01  9.916384e-01 #>  [681] -5.319996e-02  1.104967e+00  1.970094e+00  3.526228e-01  1.009028e-01 #>  [686] -8.943918e-01  2.119970e-01  3.179747e-01  5.723361e-01 -1.001610e+00 #>  [691]  7.424957e-01  7.464330e-01  1.210586e+00  4.862428e-02  1.513735e+00 #>  [696]  1.860508e+00 -9.539224e-01  2.443554e-02 -4.260724e-01  1.159175e+00 #>  [701]  5.767098e-01 -6.810735e-01 -7.806378e-01  9.422418e-01  1.117429e+00 #>  [706]  1.077588e-01  1.889051e+00  8.748753e-01  4.273011e-01  5.584006e-02 #>  [711] -5.538416e-01  7.571524e-01 -1.238730e+00 -8.597664e-01 -2.053649e-01 #>  [716] -4.738689e-01  2.189511e-01  2.504580e+00  1.114426e+00  6.671657e-01 #>  [721]  1.267960e+00 -1.880066e+00 -1.380930e+00  6.288708e-01  8.374514e-01 #>  [726]  8.011343e-01 -3.639499e-01 -5.812457e-01 -2.499598e-01 -1.088915e+00 #>  [731] -6.520443e-01  2.232123e-01  1.870521e-01 -8.286207e-01 -2.387603e+00 #>  [736]  2.297347e+00  2.185231e-01 -2.759117e-01  7.898399e-01 -1.681949e+00 #>  [741]  1.239467e-01 -7.084339e-01 -6.365438e-01  1.510405e+00  1.384874e+00 #>  [746]  1.477958e+00  2.937181e-01  5.988430e-01  1.163758e+00  3.605768e-01 #>  [751] -9.620051e-01  1.102044e+00 -2.120905e-01  2.794422e-01  9.281587e-01 #>  [756] -2.349718e-01 -1.122013e+00  6.879316e-01  7.208867e-01 -2.517969e+00 #>  [761] -4.774944e-01 -9.746947e-01 -8.007626e-02  4.212437e-01 -1.037530e+00 #>  [766] -4.142530e-01  1.043630e+00 -5.576636e-01  3.513114e-01 -9.906365e-01 #>  [771]  1.889633e+00  1.822756e-01  1.256709e+00  2.553550e-01  2.633943e-01 #>  [776]  2.167269e+00 -1.824971e-01  1.316531e+00 -6.543684e-01 -5.302465e-01 #>  [781] -8.587941e-01  7.216592e-01  1.658275e+00  1.313301e-01  1.068934e+00 #>  [786]  4.681726e-01  8.157535e-01  1.255419e+00  1.353584e+00 -1.431513e+00 #>  [791]  2.019590e+00 -3.249601e-01 -1.234612e+00  2.379923e+00 -1.473780e+00 #>  [796]  6.626424e-01  4.781527e-01 -3.398591e-01 -2.648753e-01  1.926577e+00 #>  [801]  1.221998e+00  8.204177e-01 -1.153834e+00 -1.344175e-01 -1.939949e-01 #>  [806] -2.162360e+00 -4.144859e-01 -1.504475e-02 -5.818918e-02  6.685871e-01 #>  [811]  1.672859e+00 -1.360901e+00  2.899101e-02  1.551382e+00  8.835070e-01 #>  [816]  2.309019e-01  6.391025e-01 -7.755316e-01 -2.335964e-01  1.583668e+00 #>  [821]  4.139710e-01  2.184267e-01  5.650403e-01 -2.312324e+00 -1.412993e-01 #>  [826]  1.233407e+00 -4.967997e-02 -7.765263e-01 -2.030081e+00 -2.341381e-01 #>  [831] -3.092572e-01 -8.122632e-03  5.944540e-01 -8.522695e-03 -1.137040e+00 #>  [836] -4.780609e-02 -4.511006e-01 -4.363241e-01  1.114163e+00  6.165890e-01 #>  [841]  1.679167e+00 -1.002240e+00  8.772003e-01  5.656610e-01  9.774672e-01 #>  [846] -8.145787e-01  3.919083e-01 -1.490347e-01  1.485275e-01 -8.474919e-01 #>  [851]  9.527753e-01  4.509804e-01 -8.960261e-01  7.083180e-01  1.173595e+00 #>  [856]  5.531169e-01  1.368101e+00 -1.503711e+00  1.292223e+00  1.703635e+00 #>  [861]  1.247781e+00 -6.434847e-01  6.344512e-01 -1.081663e+00  7.534587e-01 #>  [866] -1.265469e+00 -1.723875e+00 -1.549514e-01 -3.061686e-01  1.142622e+00 #>  [871]  2.636362e-01  8.173663e-01 -1.475601e+00 -8.943993e-01  2.820369e-01 #>  [876]  5.825193e-02 -1.339022e-01 -1.736586e+00  1.742796e+00 -1.853888e-01 #>  [881] -4.094652e-01 -1.247046e+00 -5.768459e-01  1.092800e+00 -3.126431e+00 #>  [886] -3.847258e-01  1.330004e+00  1.641071e-01  4.108660e-01  1.650271e+00 #>  [891] -4.785500e-02  8.215696e-01  1.469534e+00  2.658504e-01 -4.860221e-01 #>  [896]  6.726535e-01  1.267874e+00 -7.223697e-02 -8.588367e-01  2.018111e-01 #>  [901] -2.908440e-01  2.567722e-01 -8.157095e-01  1.600314e+00 -6.643465e-01 #>  [906] -3.267128e-01 -5.360436e-01  8.162713e-01 -9.003794e-01  8.336839e-01 #>  [911]  2.100114e+00 -7.288615e-01 -6.953031e-01 -4.237312e-01 -9.360368e-01 #>  [916] -1.405678e+00  3.139783e-01 -1.918536e-01 -6.446460e-01 -1.727337e+00 #>  [921] -3.456967e-01 -1.056825e+00 -9.433529e-02  1.824457e+00 -1.654877e+00 #>  [926] -1.200660e-01 -1.183793e+00 -1.890921e+00 -8.560533e-01 -2.720082e-01 #>  [931] -9.155879e-01 -2.326551e+00  1.944474e-01 -4.172912e-02 -8.345506e-01 #>  [936]  4.287965e-01 -1.071012e+00 -1.417217e+00 -6.265783e-01 -6.969698e-03 #>  [941] -6.565385e-01 -4.048459e-01  6.828085e-01  1.332606e+00  1.488657e+00 #>  [946] -1.789048e+00 -6.627328e-01 -1.453776e+00 -1.043819e-01 -8.245327e-01 #>  [951]  5.507915e-03  1.125747e+00  8.638279e-01 -8.628124e-01  5.218365e-01 #>  [956]  8.793148e-01 -1.068509e+00 -8.833110e-01 -2.578467e+00  2.509074e-01 #>  [961]  8.930437e-01  2.553826e-01 -8.297838e-01 -1.481370e-01  3.899065e-01 #>  [966]  2.928816e-01  3.508076e-01 -1.612408e-01  1.405514e+00 -1.460723e+00 #>  [971]  1.194686e+00  7.583288e-01  1.562482e-01 -1.383620e+00 -1.102548e+00 #>  [976] -1.144102e+00 -1.410262e-01 -9.480593e-01 -1.339494e+00 -2.462632e+00 #>  [981] -5.664355e-01 -1.242852e+00 -1.026654e+00  1.165623e+00 -2.731606e+00 #>  [986] -9.415738e-01 -1.215811e+00 -3.153067e-01  1.498255e+00  7.899494e-01 #>  [991]  3.221965e-01 -5.899852e-01  3.640300e-01  9.449820e-01 -2.317412e+00 #>  [996]  9.480064e-02  1.437087e+00 -1.146842e+00  2.221943e+00 -2.529193e+00 #> [1001] -1.545060e+00 -5.949142e-02  1.929946e-01 -1.863705e+00 -1.253508e+00 #> [1006]  4.444641e-02 -3.977156e-01 -3.122258e-01 -1.412050e+00 -3.937581e-01 #> [1011] -4.380507e-01 -1.699216e+00  4.266110e-01  2.105143e+00  1.597967e+00 #> [1016]  1.003589e+00 -1.100922e+00  1.878825e-01 -5.718984e-01 -2.708365e+00 #> [1021] -5.382222e-01 -1.113149e+00  7.840580e-01 -1.379059e+00  2.377107e-01 #> [1026] -2.117699e-01  8.687844e-01  1.431106e-01 -1.788376e+00  6.946643e-01 #> [1031]  7.781588e-01  2.463431e+00  7.561028e-01  1.218039e+00 -8.593907e-01 #> [1036] -7.355681e-01 -6.878644e-01 -1.837256e+00  3.957699e-01 -4.748872e-01 #> [1041]  1.340134e+00  1.276819e-01 -1.862440e+00 -1.074631e-01 -1.964735e-01 #> [1046]  1.752200e+00  1.108086e-01 -7.853106e-01 -9.656699e-01  9.585997e-01 #> [1051]  2.901103e+00 -4.665207e-02 -1.222227e+00  6.193738e-01  1.097693e+00 #> [1056]  6.154584e-01 -3.226984e+00  4.380251e-01 -1.845091e+00  5.725998e-01 #> [1061]  1.381352e+00 -1.430429e-01 -2.511939e+00  6.694130e-02  3.672749e-01 #> [1066]  1.326267e-01  3.131773e-02 -1.383028e-01 -9.568060e-01  6.794358e-01 #> [1071] -1.292981e+00 -1.641090e+00  3.739531e-01 -2.650052e-01  1.835092e-01 #> [1076]  1.413791e+00 -3.777126e-02 -1.224565e+00  1.820982e+00  9.625716e-02 #> [1081]  8.443857e-01  1.421784e+00  2.403164e-01  5.049516e-01 -3.262328e+00 #> [1086]  1.390323e-01  1.311296e+00  6.000646e-01 -5.776225e-02  2.975477e+00 #> [1091]  9.677369e-01 -4.192952e-02 -1.518567e-02 -6.131122e-01  8.120926e-01 #> [1096]  2.970648e-01 -1.475063e+00  5.093435e-01 -3.005326e-01 -6.371927e-01 #> [1101]  1.015445e+00 -9.280740e-01 -2.966474e-01 -6.069432e-01  2.407221e-01 #> [1106]  7.333604e-01 -1.213481e-01  1.057269e+00  8.108253e-01 -8.583533e-01 #> [1111] -9.699627e-01 -3.042438e-01 -8.447604e-01 -1.134450e+00 -2.870449e-01 #> [1116] -9.932033e-01 -2.744509e+00 -2.635292e-01 -5.253985e-01  1.112544e+00 #> [1121]  3.016641e-02 -1.655958e-01  1.435684e+00  2.866571e+00  5.650826e-01 #> [1126]  8.976236e-01  4.450026e-01  8.625731e-01  2.073258e+00 -8.296580e-01 #> [1131]  1.147686e+00 -1.985975e-01 -9.795264e-01 -5.728120e-03 -2.274785e+00 #> [1136]  5.226427e-01 -2.866107e-02 -1.535289e+00  5.868797e-01  5.621053e-02 #> [1141]  5.290854e-01 -2.435251e-01 -6.442037e-01 -6.381378e-01 -1.098796e-01 #> [1146] -1.882653e+00  5.086977e-01 -1.110144e+00  5.199204e-01  1.996778e+00 #> [1151]  2.797347e-01 -1.805228e+00  1.551032e-01 -6.989123e-01  9.050173e-02 #> [1156] -2.149763e-01  1.246258e+00  1.529719e+00  1.807112e+00  2.497274e-01 #> [1161] -7.349762e-01 -3.204847e-01  1.188255e+00  3.058400e-01 -7.956781e-01 #> [1166] -1.607722e+00  7.489207e-01 -1.372652e+00  7.433122e-01 -4.393640e-01 #> [1171] -1.154051e+00  1.925162e+00 -7.842075e-01  1.324173e+00 -1.094645e+00 #> [1176] -1.655112e+00 -1.461142e-01 -3.350472e-01 -2.141653e+00  1.123622e+00 #> [1181]  6.853842e-01 -4.588481e-01 -6.870462e-01  2.060327e-01  4.667981e-01 #> [1186]  2.218892e+00 -3.843339e-01  2.759982e+00 -1.203708e+00 -1.067610e+00 #> [1191] -1.058932e+00  8.973874e-01  1.313374e+00  4.232573e-02 -4.572344e-01 #> [1196]  1.852721e+00  8.406879e-01 -1.415764e+00  6.254670e-01 -6.445181e-01 #> [1201] -1.072647e+00  2.632396e-01  7.919372e-01  2.040481e-01  1.658124e+00 #> [1206]  1.220044e+00 -2.050850e-01  1.617560e-01  7.650290e-01 -1.461681e+00 #> [1211] -6.756213e-01  6.183045e-01  3.396293e-01 -6.639019e-01 -1.027989e+00 #> [1216] -1.050069e+00 -7.792270e-01  9.897440e-01  3.337689e-01 -2.841987e-01 #> [1221]  1.353871e-01  1.067276e+00  1.045357e+00  6.264986e-01 -5.206298e-01 #> [1226] -1.228642e+00  1.063738e-01 -1.500540e+00  2.571029e-03 -1.258037e+00 #> [1231]  2.023182e-01 -2.671287e-01  5.345274e-01 -2.444092e-01  3.753131e-01 #> [1236]  9.669267e-02  7.303355e-01  3.066457e-01 -1.842451e+00 -5.976392e-01 #> [1241]  6.701142e-01  1.690883e+00 -1.526574e+00  1.036378e+00  9.264305e-01 #> [1246] -1.713843e+00 -7.052752e-01  1.409752e+00  1.013100e+00  1.595637e+00 #> [1251]  4.710643e-01  1.372485e-01  1.200740e+00 -2.752439e-01 -5.428110e-01 #> [1256] -8.224857e-01 -1.401610e+00 -2.108436e+00 -2.645077e+00  1.073633e+00 #> [1261] -8.465782e-01 -6.027021e-02 -6.525094e-01 -5.497752e-02  1.405921e+00 #> [1266] -2.803242e-01  1.020965e+00 -6.724060e-01 -7.963416e-01  9.220985e-01 #> [1271]  5.618824e-01 -1.024528e+00 -4.288417e-01  1.407217e+00 -4.050970e-01 #> [1276]  4.494312e-02  7.969688e-01 -3.929206e-01  2.830385e+00  1.175290e+00 #> [1281]  4.657228e-01  2.361599e+00  5.908839e-01 -1.698629e+00 -3.512327e-01 #> [1286]  1.472051e+00  9.889693e-01  7.186762e-03  1.955629e+00  1.974048e-02 #> [1291] -3.881546e-01  1.357988e+00  1.737047e-01  1.062258e-01 -4.978158e-01 #> [1296]  3.310280e-01  1.031599e+00 -1.406533e+00  5.042107e-01 -3.648739e-01 #> [1301] -8.598379e-02  9.418352e-01  4.751412e-01 -1.695546e-01 -6.444053e-01 #> [1306]  2.558082e-01 -4.058333e-01 -8.162664e-01  1.207306e+00  1.376430e+00 #> [1311] -6.294485e-01  5.955667e-02  4.529423e-01 -5.335481e-01 -2.647770e-01 #> [1316]  1.053875e+00 -6.091500e-01 -5.077722e-01  1.338211e+00  1.559010e+00 #> [1321] -8.085275e-01 -4.127570e-01  1.481216e+00 -1.341044e+00  9.717416e-01 #> [1326] -6.191530e-01 -7.095096e-01  4.579157e-01  4.913203e-01 -8.484676e-01 #> [1331]  2.141354e+00  1.647294e-01 -6.282327e-01  1.583792e+00 -2.299850e+00 #> [1336]  1.690474e+00 -6.100708e-01  4.658437e-01 -1.772355e+00  5.331350e-01 #> [1341] -1.098200e+00 -2.616973e-01  1.661665e+00  3.690520e-01  1.175789e+00 #> [1346]  5.261773e-01 -3.603605e-01 -9.502611e-02 -1.731685e+00 -3.010459e+00 #> [1351]  1.135966e+00 -1.181208e+00 -8.926665e-02 -1.285908e+00  8.125992e-01 #> [1356] -2.389218e+00 -2.932104e-01  2.127100e-01  1.842860e-01 -4.799313e-01 #> [1361] -1.446625e+00  4.872099e-01  1.226614e-01 -1.403927e+00 -1.720756e+00 #> [1366]  8.584193e-01  4.788620e-01 -1.579836e-01 -1.209766e-01 -1.342449e-01 #> [1371] -2.313359e+00 -7.107614e-01 -2.944425e-01  1.514966e-01 -2.193862e-01 #> [1376] -1.755352e+00 -1.690660e+00 -2.779342e-01  1.830860e+00 -1.165311e-01 #> [1381] -1.486965e-02  4.970262e-01 -2.320057e+00 -1.773240e-02  1.015927e+00 #> [1386]  1.016888e-01  1.666836e+00 -1.116541e+00  2.132021e+00 -2.393387e+00 #> [1391]  1.038187e+00 -3.130212e-01 -9.089818e-01 -7.907798e-01 -9.535649e-01 #> [1396]  1.245516e-03  6.929880e-01 -8.631333e-01  5.799795e-01  4.627785e-01 #> [1401]  3.998214e-01 -4.960158e-01  1.739210e-01 -5.977015e-02  3.610051e-01 #> [1406]  5.854818e-01 -5.141393e-01 -1.537013e-01  1.563986e+00  3.596972e-01 #> [1411] -1.397342e-01 -1.492341e+00  2.453275e+00  1.130625e+00 -1.322405e+00 #> [1416] -1.413694e+00 -5.550211e-01  1.788858e+00 -1.443737e-01  2.882655e+00 #> [1421] -1.142114e+00  1.363262e+00 -1.681514e+00  4.362529e-01  2.134086e-01 #> [1426]  7.854525e-01 -1.076958e+00  6.224940e-01 -2.908208e-01 -3.204335e-01 #> [1431] -7.453930e-01 -3.491633e-01  4.663179e-01 -1.182765e+00 -9.910880e-01 #> [1436] -1.152664e+00  8.412782e-01  3.344206e-01 -2.431893e+00  1.171112e+00 #> [1441] -1.659636e-01  2.111139e-01 -2.371717e+00 -2.414221e+00 -1.143398e-01 #> [1446]  1.054619e+00  4.903688e-02  2.830635e-01  8.657938e-01 -4.150582e-02 #> [1451] -2.552268e+00  1.217777e+00  4.059193e-01  1.244936e+00  5.854647e-03 #> [1456]  1.167746e+00  9.105439e-01 -5.595613e-02  1.635673e-01 -1.408444e-01 #> [1461] -5.529938e-01  4.054499e-01 -4.787306e-01 -1.732512e-01  9.727690e-01 #> [1466] -6.725638e-01  7.846164e-01 -1.878149e-01  5.692657e-01  9.725444e-01 #> [1471] -1.518472e+00 -1.815355e-01 -1.302670e+00 -5.346105e-02 -5.376826e-01 #> [1476]  1.550320e+00  2.576656e-01  1.910777e-01 -1.220962e+00 -8.924125e-01 #> [1481] -1.809568e-01  2.040426e-02  2.470703e+00 -1.047167e-01  1.879056e+00 #> [1486] -1.272571e+00  5.413505e-01 -1.208097e+00 -1.225855e-01 -1.428876e+00 #> [1491]  6.901495e-01  1.923172e-01 -1.522405e+00  1.562886e+00  1.354103e+00 #> [1496] -2.587272e-01 -1.183174e+00 -4.388597e-01 -7.147372e-01 -2.341513e-01 #> [1501] -1.463947e+00  7.558982e-01  7.179328e-01  8.249295e-01  1.661880e+00 #> [1506] -3.988860e-01 -1.191361e+00  1.720035e+00  8.420426e-01  9.171291e-02 #> [1511] -4.556404e-02 -1.188218e+00  5.841050e-01 -1.459832e+00  1.523380e+00 #> [1516] -1.556624e+00 -7.998771e-01 -2.031606e+00  6.637377e-01  6.468545e-01 #> [1521] -9.402214e-01  4.277319e-01 -1.154123e-01  7.817067e-03 -2.291208e-01 #> [1526] -3.348267e-01 -4.335813e-01  2.351256e+00 -3.314373e+00  9.524130e-01 #> [1531] -1.368394e+00 -5.314826e-01  7.459696e-01 -5.049845e-02 -8.578265e-01 #> [1536] -8.174544e-01 -2.178654e+00 -1.304082e+00 -8.458981e-02  1.110105e+00 #> [1541] -7.011423e-01  5.518490e-01 -4.495976e-01 -2.146284e+00  1.087844e-02 #> [1546]  2.127560e-01  3.126990e-01  1.753932e-01  2.268075e-01  7.786031e-01 #> [1551]  9.379972e-01  6.727901e-01 -1.784586e+00 -4.948881e-01  6.831419e-01 #> [1556]  1.067725e+00 -8.158213e-01  1.516605e+00 -1.801350e-01 -8.378177e-01 #> [1561] -1.778654e+00  6.381476e-01  2.358101e+00  5.030214e-01  1.142461e+00 #> [1566] -1.249390e+00  6.861650e-02 -3.958852e-01  2.764223e-01 -1.292709e+00 #> [1571] -6.758587e-01  1.972536e+00 -2.909164e-01 -2.001569e+00  1.261074e+00 #> [1576]  1.598484e+00  6.257946e-02 -1.573531e-01 -1.067719e+00  1.285679e+00 #> [1581] -8.614299e-01 -3.317675e-01 -2.831878e-03 -7.783727e-01  1.160678e+00 #> [1586] -7.783282e-01  1.225690e+00 -1.052308e+00  2.208694e+00  1.234597e+00 #> [1591]  7.733083e-02 -1.970852e+00 -8.675769e-01 -1.172087e-01  9.681174e-01 #> [1596] -6.239363e-02 -5.354774e-01 -5.931113e-02 -6.458165e-01 -7.177295e-01 #> [1601]  5.359524e-01 -6.687848e-01  6.783966e-01 -2.354467e+00  1.464545e-01 #> [1606] -3.876210e-01 -5.998297e-01 -7.520411e-01 -1.523972e+00  1.237173e+00 #> [1611] -1.381849e+00  1.517651e+00  8.535350e-01 -2.355388e+00 -2.352367e+00 #> [1616]  2.462729e+00 -1.958659e+00 -4.590180e-01  1.578020e+00 -1.527521e+00 #> [1621]  3.490189e-01  1.947364e-01  8.866073e-01 -1.035448e+00 -1.184288e+00 #> [1626] -2.697223e-01  9.594397e-01  1.341262e+00  3.778045e-01  1.505490e+00 #> [1631] -6.024477e-01 -4.526731e-01 -3.649406e-01  3.851163e-01  9.597425e-02 #> [1636] -3.461777e-01 -8.206904e-01 -1.188922e+00 -7.172012e-01  5.501642e-01 #> [1641] -4.797826e-01  1.056548e+00 -8.737124e-01  1.037227e+00 -1.237123e+00 #> [1646]  2.035578e-01 -6.168485e-01 -1.263346e+00 -5.683960e-01 -7.893423e-01 #> [1651]  1.665644e+00 -3.834415e-02  2.957027e-01 -2.735911e-01 -6.400416e-01 #> [1656] -1.992732e+00  4.717902e-01  1.053710e+00  1.553927e+00  1.729031e+00 #> [1661] -3.351346e-01  1.770069e+00  8.213615e-01  1.155056e+00 -7.585486e-01 #> [1666] -6.331479e-01 -1.096719e+00  1.578943e+00 -6.774009e-01 -1.252028e-01 #> [1671]  9.670994e-01  7.759447e-01 -5.277998e-01  5.167593e-01  1.654445e+00 #> [1676] -1.819372e+00  1.325689e+00  1.655679e-01  2.864256e+00 -6.802040e-01 #> [1681] -3.700288e-01  3.552026e-01 -7.245419e-01 -1.090840e+00 -6.052441e-01 #> [1686]  1.173181e-01 -3.504885e-01 -2.073041e-02 -4.587340e-01  7.147600e-01 #> [1691] -3.002907e-01  1.396820e+00  9.292413e-01  9.364627e-01 -1.404926e+00 #> [1696] -1.049151e+00 -3.989343e-01  5.288900e-01  1.612475e+00  1.759241e+00 #> [1701]  6.391072e-01 -7.706027e-01 -1.659986e+00  4.166049e-01  1.799232e+00 #> [1706]  7.659211e-02 -7.864086e-01  3.586691e-03 -1.325206e-01 -1.631553e-01 #> [1711] -7.448596e-01 -1.017234e+00 -3.216593e-01  6.111903e-01 -5.784596e-01 #> [1716]  3.099131e-01 -7.066127e-01 -2.870460e-01 -7.978619e-01  5.687977e-02 #> [1721]  1.892354e-01 -1.048065e-01  7.628805e-01 -2.193923e-01  2.677261e-01 #> [1726] -4.785145e-01  6.855063e-01 -7.184619e-03 -3.770369e-01 -1.376475e+00 #> [1731]  3.289029e-01  1.153466e+00 -1.243768e-01  1.179262e+00  3.196595e-01 #> [1736] -4.159829e-01  1.531206e+00  1.407930e+00  1.949008e+00 -2.045100e-01 #> [1741] -9.487872e-01 -3.905362e-01 -1.922158e+00 -9.109829e-01  2.781527e-01 #> [1746] -3.638864e-01 -1.340643e-01 -4.236709e-01  1.012956e+00  9.076913e-01 #> [1751]  1.655376e-01 -1.364448e+00  2.980995e+00 -7.934781e-01  1.293384e-01 #> [1756]  3.684922e-01 -7.433227e-01 -5.843853e-01 -1.155390e+00 -1.154711e-01 #> [1761]  8.400111e-01  9.883971e-01 -1.208889e+00  5.948182e-01 -7.560702e-02 #> [1766] -6.836036e-01  9.948448e-01  1.663856e+00  1.688686e-01  1.469224e-01 #> [1771]  1.600675e+00  3.897842e-01  2.434799e-01  8.017910e-01 -5.087693e-01 #> [1776] -5.156956e-01 -1.098363e-01 -6.137379e-01 -2.404611e-02  3.785802e-01 #> [1781]  1.347893e+00 -3.351768e-01  3.902106e-01 -9.721002e-01 -7.828612e-01 #> [1786]  2.470948e+00  1.664793e-01  6.913497e-01  1.660984e-01  3.630116e-01 #> [1791]  9.945576e-01  2.873555e-01 -6.545689e-01  8.900316e-01 -4.275237e-01 #> [1796] -3.673252e-01 -1.831915e-01 -2.170048e-01 -4.578908e-01 -1.827623e+00 #> [1801] -1.156256e+00 -2.813194e+00 -1.378274e+00 -1.380080e+00 -1.594482e+00 #> [1806] -2.944536e-01  5.271631e-01  8.905099e-02 -3.487063e-01 -4.353840e-02 #> [1811]  3.524107e-01  4.955505e-01 -2.498588e+00  8.224990e-01  2.423318e+00 #> [1816] -2.855345e+00  1.494553e+00 -5.706206e-01  1.548881e+00  6.915238e-01 #> [1821]  9.186520e-01 -5.534332e-01  1.452367e-01  2.026494e+00 -1.965876e+00 #> [1826] -5.332518e-01  1.617727e+00 -5.153188e-01 -3.342062e-01  1.928437e+00 #> [1831] -1.104380e+00  3.993606e-01  1.209046e+00  6.054256e-01  5.598568e-01 #> [1836] -1.832261e+00  2.917528e-01  1.074494e+00 -5.757605e-01 -1.434489e+00 #> [1841] -6.204563e-01 -1.708157e+00  9.090919e-01 -8.438841e-01 -1.712273e+00 #> [1846] -7.043506e-01  1.360563e-01  7.782441e-01 -1.807469e+00  2.442745e-01 #> [1851] -1.059095e+00  2.425114e-01  7.068630e-01 -2.232205e+00 -2.473846e-01 #> [1856]  1.215676e+00  8.258371e-02  1.663413e+00 -1.876282e+00 -9.432417e-01 #> [1861]  1.256802e+00  1.417609e+00  1.352563e+00 -5.525462e-01  2.922414e-01 #> [1866] -6.354455e-01  2.401539e-01  2.240485e-01 -2.241159e-02 -5.466314e-01 #> [1871] -2.882399e+00  4.835916e-01  6.093443e-01 -3.891631e-01 -5.234734e-02 #> [1876] -5.854360e-02 -1.252040e+00  2.593765e+00  4.613687e-01 -2.849682e-01 #> [1881]  4.593752e-01  1.170725e+00  1.012429e+00 -4.598906e-02 -7.519743e-03 #> [1886] -4.465530e-01 -2.930935e-01  5.080140e-01  9.573197e-02  3.581037e-01 #> [1891] -5.111868e-01  2.747598e-01  4.162886e-01 -1.379562e+00 -1.436291e+00 #> [1896]  1.314797e+00 -6.132512e-01 -2.612438e+00  1.588213e+00 -3.028255e-01 #> [1901] -9.856664e-01 -8.369679e-01  5.020617e-01  2.435508e+00  1.035699e+00 #> [1906] -2.046387e+00  2.725224e-01 -2.081377e+00 -1.797155e+00 -1.851015e-01 #> [1911] -2.264042e-01 -7.885991e-02 -6.131011e-01  1.290868e+00 -1.798275e-01 #> [1916] -2.608452e-01  1.132477e-01  1.549167e-02 -1.490361e+00 -2.051157e-01 #> [1921] -1.164364e+00  7.987394e-01  2.853206e+00 -2.067141e+00  1.295138e+00 #> [1926]  3.207514e-01  3.775063e-01  5.351645e-01  4.418177e-01  3.886098e-01 #> [1931]  2.128709e-01 -5.014931e-01 -6.747304e-02  8.697094e-01  8.465718e-02 #> [1936] -1.549749e-01 -2.225207e+00  1.009904e+00 -1.011416e+00  2.243903e-01 #> [1941] -1.341536e+00  7.168574e-01 -7.669541e-01 -7.331144e-01  5.270015e-01 #> [1946] -1.382147e+00  1.827120e-01  1.593272e+00 -1.172093e-01 -1.532117e+00 #> [1951] -2.522582e-01  1.026357e+00  2.081563e-01  5.299577e-01 -2.738745e-01 #> [1956] -1.112351e+00  3.634957e-01 -8.777521e-03 -6.766701e-01 -1.598936e+00 #> [1961]  8.262320e-01  1.223864e+00 -6.283858e-03  6.760969e-01  7.996454e-01 #> [1966]  7.892549e-01  2.399851e+00 -3.220070e-01 -1.323846e+00  1.716199e+00 #> [1971]  1.181937e+00  4.424143e-01 -7.532060e-01 -2.292750e+00 -4.952353e-01 #> [1976]  2.909368e-01  6.938354e-01 -1.676664e-01  5.786065e-01  1.259461e+00 #> [1981] -2.300613e+00  5.063925e-01 -1.089301e+00 -1.181622e-01 -8.332990e-01 #> [1986]  2.295063e+00 -9.794440e-01  1.377229e+00 -1.068373e+00  1.490549e-01 #> [1991] -7.750474e-01  2.632773e-01 -8.182312e-01  9.994166e-01  1.215094e+00 #> [1996]  5.829290e-01 -2.104213e-01 -8.043428e-01  1.598297e+00 -1.966559e+00 #> [2001]  1.079383e-01 -4.513892e-01  2.384706e+00  9.323247e-01  3.796079e-01 #> [2006] -8.879917e-01  2.540507e-01  1.139126e+00  9.355397e-01  3.033615e+00 #> [2011] -3.616973e-01  9.647018e-01  1.278677e+00 -9.926064e-02  2.800593e-01 #> [2016] -5.548897e-01 -6.634235e-01  1.046330e+00 -3.322702e-02  1.754958e+00 #> [2021]  9.454542e-01 -5.658262e-01 -3.768749e-01 -1.692329e-01 -6.589143e-01 #> [2026]  4.747237e-01 -5.747713e-01  1.753856e+00  1.130828e-03  9.614442e-01 #> [2031]  4.883645e-01 -7.043486e-01  3.954247e-01 -2.980440e-01  1.307832e-01 #> [2036]  4.964042e-01 -9.466852e-01  3.858702e-01  8.168875e-01  1.176889e+00 #> [2041]  1.435923e+00  3.310393e-01  1.026125e+00 -5.737934e-01 -4.975819e-01 #> [2046] -1.281293e+00 -5.951909e-01 -6.259958e-01  2.444450e-01 -2.482770e-01 #> [2051]  6.751289e-03  3.967905e-01 -9.110252e-01  1.494105e+00 -1.919240e+00 #> [2056] -1.584863e-01 -3.183637e-01  1.577111e+00  1.141261e+00 -6.371880e-01 #> [2061]  1.178860e+00  1.275478e+00  8.162539e-01  2.059320e+00  5.879015e-01 #> [2066]  2.848706e-01 -1.253175e+00 -1.148920e-01  8.890222e-01  1.036409e+00 #> [2071] -1.269882e+00  2.781194e+00  3.650077e-01  2.259062e+00 -2.901535e+00 #> [2076]  7.383833e-01  9.433463e-01 -3.953076e-01 -2.716065e+00 -1.384004e-01 #> [2081]  2.924406e-01  3.472500e-02  3.570893e-02 -1.663141e+00  7.058629e-02 #> [2086] -3.757803e-01  1.784243e+00 -9.353871e-02  1.029713e+00  4.566532e-01 #> [2091]  5.901000e-03  1.288429e+00 -3.324523e-02 -8.754559e-01 -1.006502e+00 #> [2096] -1.195552e+00 -5.389238e-01 -7.510829e-01 -4.910084e-01  4.152774e-01 #> [2101] -1.020796e+00 -5.284843e-01 -2.285805e+00 -1.390916e+00  2.891623e-01 #> [2106] -2.017249e+00 -5.021934e-01  1.357121e+00 -3.581794e-01  4.513691e-01 #> [2111]  7.308197e-01 -1.469350e+00 -1.107355e+00  5.887252e-01  4.058671e-01 #> [2116]  4.003007e-03  6.267538e-01  6.367368e-01  2.613193e-01  1.109048e+00 #> [2121]  2.099121e+00 -6.484467e-01  1.446111e-01 -1.569835e+00 -3.250618e-01 #> [2126]  2.546761e-01 -9.538529e-01 -2.114809e-01 -1.593976e+00 -2.425348e-01 #> [2131] -1.493106e-01 -9.817279e-01 -2.077508e+00  5.864888e-01 -9.551250e-01 #> [2136] -3.008327e-01  6.467304e-01  2.274617e+00 -7.852905e-01  1.159126e+00 #> [2141]  1.310818e-01 -2.491439e-01  7.207991e-02 -1.226955e+00  1.673834e-01 #> [2146]  2.129011e-01  1.133300e-01 -6.555646e-01 -6.550502e-01  9.038410e-01 #> [2151]  1.512862e+00  3.085034e-01  7.260577e-01  1.215922e+00  5.249242e-01 #> [2156] -7.714817e-02 -1.440779e+00  1.052031e+00 -1.856745e-01  1.259720e+00 #> [2161] -4.725783e-01 -8.342899e-01  1.903890e-01 -6.552841e-01 -2.077388e+00 #> [2166]  3.343096e-01 -2.216923e-02 -3.657163e-01  3.728539e-01 -1.905185e+00 #> [2171] -2.516308e-01  7.973717e-01  2.148389e+00 -4.757746e-02 -6.786570e-01 #> [2176]  9.655103e-01  1.394461e+00 -2.518567e-02  3.948256e-01  3.348678e-01 #> [2181] -1.289878e+00 -4.299814e-01 -1.933244e+00 -1.427238e+00 -8.759450e-01 #> [2186] -6.853081e-01 -1.950575e-01  1.507331e+00  8.663833e-01 -1.017499e-01 #> [2191] -9.676582e-01 -1.357778e+00 -6.441723e-01  1.606897e+00 -8.119729e-01 #> [2196] -1.440495e+00  1.882372e-01 -2.126989e-01  1.435521e-01  8.020212e-02 #> [2201] -5.972118e-01 -8.220232e-01 -3.613416e-01  1.336287e+00 -7.994165e-01 #> [2206]  1.734895e-02 -3.207980e-01 -5.105340e-01  1.887193e+00  1.445601e+00 #> [2211] -7.943022e-01  6.758883e-01  1.843020e-02 -1.302791e+00 -6.142734e-01 #> [2216]  3.966539e-01 -1.728398e+00  1.923459e-01  1.188798e+00 -5.390531e-01 #> [2221]  8.618036e-01  4.679268e-01  4.529336e-01 -4.276125e-01 -1.089619e+00 #> [2226] -3.867391e-01  5.324161e-01 -3.164969e-02 -1.299080e+00 -1.977410e-02 #> [2231]  1.717591e+00  5.371609e-02  1.234742e+00 -2.421340e-01 -1.397426e+00 #> [2236]  4.126172e-01  1.185306e+00  1.340332e-01  2.046020e-01 -2.130065e+00 #> [2241] -1.934503e+00  1.198024e+00 -3.678538e-01  4.016207e-01  4.553408e-01 #> [2246] -1.525749e+00  2.413545e-01  4.809123e-01 -6.368930e-01 -1.503211e+00 #> [2251] -4.654842e-01  2.609153e+00 -1.064377e+00 -1.605931e+00 -3.395614e+00 #> [2256] -1.068532e-02 -2.048227e+00  4.311561e-01  2.080505e+00  4.457440e-01 #> [2261] -1.129054e+00 -5.989729e-01  9.097627e-01 -3.298850e-01  1.368554e-01 #> [2266]  2.641827e-01  4.101097e-01  8.192017e-02  7.082342e-01 -1.019055e+00 #> [2271] -9.693521e-01 -8.972857e-01 -2.023578e-01  1.426044e+00 -4.884161e-01 #> [2276]  4.997223e-01  1.014658e+00 -3.215760e-01 -3.243003e-01  6.918962e-01 #> [2281]  3.935737e-01  8.691775e-01  4.142520e-01  1.573669e+00 -7.295919e-01 #> [2286]  6.635501e-01 -1.277719e+00  5.590471e-01 -2.099722e+00 -6.240288e-01 #> [2291] -1.782782e+00 -4.696258e-01  1.694571e+00  2.596596e-01 -7.596560e-02 #> [2296] -1.580085e+00 -1.160908e-01 -5.203558e-01 -9.034942e-01  7.786610e-01 #> [2301]  8.141400e-01 -1.082867e+00  2.216692e+00 -2.921909e-01  1.633619e+00 #> [2306] -2.411690e-01 -5.956683e-01  8.205892e-01  9.867849e-01 -7.210090e-01 #> [2311] -4.667037e-01 -6.068863e-01 -2.773265e-01  8.050409e-02 -2.087135e+00 #> [2316] -1.241900e+00  1.960736e-01  1.041782e+00 -5.194722e-02  7.588273e-01 #> [2321] -5.382616e-01 -3.903746e-01 -1.297012e+00  4.427534e-01 -6.259102e-01 #> [2326]  6.916074e-01  1.061894e+00 -1.741170e+00  2.927993e-01 -1.351355e+00 #> [2331]  1.262654e+00  1.761290e-01 -1.475471e+00 -1.625401e-01  8.313911e-01 #> [2336] -5.329134e-01  1.412693e+00  5.689490e-01  1.424454e+00 -1.166045e+00 #> [2341] -2.895702e-01  6.998948e-01 -1.825253e-03 -4.104769e-01 -1.962248e-01 #> [2346] -3.738594e-01  5.180554e-01  1.975007e+00 -1.156090e+00 -1.001767e+00 #> [2351] -6.762546e-01 -5.071181e-01  5.383016e-01 -3.190889e-01  1.810986e+00 #> [2356] -2.248129e-01 -2.147913e-01 -3.389249e-01  2.287354e+00 -9.174717e-01 #> [2361]  3.096855e+00  1.206668e+00 -5.167085e-01  5.471805e-01 -2.384242e-01 #> [2366]  2.845769e+00 -8.436810e-01 -1.826655e+00  1.028163e+00 -8.655108e-01 #> [2371] -3.836204e-01  7.745754e-01  1.680282e+00  7.568788e-01  8.370478e-01 #> [2376]  5.742410e-01 -2.344690e-01  1.293305e+00  5.099303e-01  1.102414e+00 #> [2381]  1.804999e+00  9.733311e-02 -1.426149e+00 -1.165901e+00  1.223171e+00 #> [2386] -1.404193e+00  4.002888e-01 -6.048384e-01 -5.105020e-01  4.871112e-01 #> [2391] -7.678038e-01 -2.237563e+00 -3.080335e-02 -6.443304e-02  6.875373e-02 #> [2396]  5.661303e-01 -4.614325e-01  5.075243e-01  6.350118e-01 -4.824192e-01 #> [2401]  1.196147e+00  2.303249e+00 -3.842822e-01 -1.150241e+00  6.305463e-01 #> [2406]  1.282350e+00 -2.927742e-01  7.162285e-01 -3.591461e-01 -2.517465e+00 #> [2411] -1.075263e+00 -7.074412e-01 -1.044904e+00  1.880877e+00  1.807320e+00 #> [2416]  9.183617e-01  7.938135e-01 -2.017145e-01  1.541027e-01  8.367480e-01 #> [2421]  1.088577e+00  1.751818e-01  1.600534e+00 -1.101595e+00 -9.987380e-01 #> [2426]  4.755418e-01 -2.054493e+00 -7.056876e-02 -4.261243e-01 -3.015745e-01 #> [2431]  4.388141e-01  4.274824e-01  1.553416e+00 -2.009036e-01  8.465616e-01 #> [2436] -6.962205e-01 -1.226373e+00 -2.359928e-01  1.676721e+00  5.181547e-01 #> [2441]  6.801291e-01  3.682200e-01  8.913414e-01  2.263682e+00  1.662951e+00 #> [2446] -1.483014e+00 -7.086601e-02  9.614641e-01 -5.940081e-01  1.328192e+00 #> [2451] -1.586659e+00 -1.423410e+00  5.670732e-01  7.212005e-01  1.074966e+00 #> [2456] -6.516113e-01  1.448910e+00 -3.139750e-01  8.962756e-01 -1.257103e-01 #> [2461]  2.216464e+00 -2.197214e+00 -6.083958e-01  1.135777e-01 -1.155622e+00 #> [2466] -2.267337e+00  2.897026e-02 -1.967282e+00  8.748177e-01  5.112993e-01 #> [2471] -2.753592e-02  1.442403e+00 -9.219373e-01  2.249319e-01  5.145709e-01 #> [2476] -1.710480e+00 -4.429757e-01  3.654164e-01  1.890521e-01 -6.508028e-02 #> [2481] -3.552492e-01  6.040882e-01 -7.109034e-01  1.195308e+00 -8.243361e-01 #> [2486]  1.241826e-01 -6.361492e-01  2.172965e-01  2.071592e-01  7.996201e-01 #> [2491]  5.373042e-01  1.837318e+00  7.571080e-01  1.103722e-01  3.856876e-01 #> [2496] -1.443886e+00 -7.461593e-02 -1.939109e+00  1.907573e+00  1.592041e+00 #> [2501] -1.399336e+00 -1.977752e+00  9.936382e-01  7.313762e-01  3.564335e-01 #> [2506] -3.891865e-01 -1.926482e-01 -7.518940e-01 -2.201399e+00 -2.505593e+00 #> [2511] -6.877969e-01  2.048126e+00 -1.124178e+00 -1.729698e+00 -7.580022e-01 #> [2516] -1.057336e+00  9.685443e-01  8.425853e-02 -5.307739e-01  7.816356e-01 #> [2521] -8.866684e-01 -9.833784e-01 -1.002038e-01 -2.174327e+00  1.750914e+00 #> [2526]  1.985353e+00 -6.891138e-01  1.642667e+00 -5.064654e-01  4.545143e-01 #> [2531]  1.367819e-01 -9.315545e-01  2.329367e-01 -1.368392e+00  7.483660e-01 #> [2536] -3.730500e-01  1.433461e+00  1.105776e+00  5.243078e-01 -1.043989e+00 #> [2541] -2.502375e+00  3.459739e+00  1.720244e+00 -1.281882e+00  4.415677e-02 #> [2546]  1.056623e+00  5.848377e-01  1.548161e+00  3.135033e-01  2.191619e-01 #> [2551] -5.582295e-01  1.131194e+00 -3.054994e-01 -2.480255e-01  2.189988e-01 #> [2556]  1.243271e-01  1.389516e-01 -1.032678e+00 -4.827736e-01  1.011766e+00 #> [2561] -3.055283e-01 -1.440066e+00  9.343765e-01  1.592827e+00 -2.469349e+00 #> [2566] -6.866780e-01 -1.635571e+00 -1.334888e+00  1.784870e+00 -8.864478e-01 #> [2571]  1.504740e+00  6.220248e-01 -3.914720e-01 -2.376971e+00 -1.112553e+00 #> [2576] -1.051748e+00 -3.640962e-01  3.428097e-01 -1.512062e+00 -4.740557e-01 #> [2581]  2.553575e-01 -1.213049e+00  8.665749e-01 -2.691933e-01 -8.028024e-02 #> [2586] -1.493972e+00 -6.315159e-03 -1.602712e-01 -1.663742e+00 -3.084013e+00 #> [2591] -8.787772e-01 -2.967622e-01  2.761027e-01  2.279828e+00 -7.226953e-01 #> [2596] -3.824359e-01 -7.486149e-01 -1.219436e+00 -1.640747e+00  5.464364e-01 #> [2601]  6.809169e-01 -3.526314e-01 -1.713275e+00  7.087695e-01  9.597417e-01 #> [2606] -7.224419e-01  2.065452e-01  1.559836e+00 -3.546430e-01  7.178825e-01 #> [2611]  2.180063e-01  6.439305e-01 -2.989428e-01  1.169665e-01 -8.164601e-01 #> [2616] -1.298156e-01  2.944938e-01  9.571694e-02 -6.396949e-01 -2.230528e+00 #> [2621]  1.882011e+00 -2.178362e+00 -5.430308e-01 -9.081502e-01  4.270388e-01 #> [2626]  3.477364e-01 -7.274542e-03  2.860922e+00 -9.124308e-01 -1.771778e-01 #> [2631] -3.798565e-02  6.211710e-01 -3.423135e-01 -7.580149e-01  7.685929e-01 #> [2636]  5.426468e-01 -1.581947e+00  2.146632e-01  1.269717e-02  9.915719e-02 #> [2641] -7.691289e-01 -1.332163e-01  2.945661e+00  1.331959e+00  1.494705e-01 #> [2646]  1.096941e+00  1.064115e-01  4.231891e-02 -2.778691e-01 -8.006994e-02 #> [2651] -1.393041e+00 -1.113071e+00 -2.838980e-01  2.713856e-01 -1.571404e-01 #> [2656] -1.372878e+00 -7.892777e-01 -5.034758e-01 -1.594443e+00 -1.809977e+00 #> [2661] -3.722695e-01 -2.378402e+00  1.779372e-01  4.709821e-02  4.892790e-01 #> [2666]  3.936183e-01  1.661182e+00 -6.496731e-01  7.871223e-01 -1.119134e+00 #> [2671]  5.639309e-01  3.853129e-01  2.587030e-01  4.982677e-01  3.920833e-01 #> [2676] -8.981198e-01  3.480553e-01  6.444459e-01  1.419132e+00  4.246696e-01 #> [2681]  1.981341e-01 -1.303070e-01  6.575484e-02  5.516852e-01  9.482949e-02 #> [2686]  1.735145e+00  3.507689e-01  1.263133e-01  6.465293e-01  2.197700e+00 #> [2691]  1.345305e+00 -6.232697e-01  7.167469e-01 -7.428341e-01  1.554897e+00 #> [2696]  2.758596e+00  6.675103e-01 -4.222211e-01  1.091931e+00  4.064081e-01 #> [2701]  3.446776e-01  8.313118e-01  2.054356e-01 -8.594446e-01 -1.291339e+00 #> [2706] -1.514427e+00  9.494926e-02 -1.401902e+00  7.524043e-01  7.955721e-01 #> [2711]  1.779518e+00  9.838340e-01 -1.040624e+00 -9.310456e-01 -4.808474e-01 #> [2716]  6.172714e-01  2.232502e+00  2.905750e-01  1.292768e+00  1.251710e-02 #> [2721]  5.623103e-01 -5.836036e-01  6.632505e-02 -5.682462e-01  1.782882e+00 #> [2726]  1.300621e+00 -8.734625e-01 -9.926145e-01 -1.295833e+00  1.042858e+00 #> [2731] -2.845250e-01  1.047275e+00 -1.330089e+00 -9.144492e-03 -2.520426e-01 #> [2736]  1.106133e+00  5.645664e-01  1.003122e+00  2.228522e-01  8.762852e-01 #> [2741] -2.191326e+00  1.330591e-01 -2.461372e-01  7.026240e-01  6.588682e-01 #> [2746]  1.050304e+00 -1.559120e+00  5.063361e-01  1.266791e+00  1.020751e+00 #> [2751]  2.669308e-01 -5.175283e-01 -9.081401e-01 -1.611354e-01 -1.965841e+00 #> [2756]  1.948788e-01 -2.577444e-01  5.731627e-01  2.465325e-01 -1.516600e+00 #> [2761]  1.273297e+00 -1.071841e+00 -8.718117e-01 -1.911450e+00 -6.933563e-01 #> [2766]  5.576359e-01 -1.572627e+00  4.449688e-01 -1.480617e+00  1.524967e+00 #> [2771]  1.131020e+00  9.407418e-02 -1.611837e-01  4.409533e-01  5.077635e-01 #> [2776] -7.230623e-01  1.090199e+00 -1.236612e+00 -5.649713e-01 -4.808560e-01 #> [2781] -1.552101e+00 -7.475313e-01 -1.776581e-01  7.647262e-01 -7.396323e-02 #> [2786] -1.053437e+00 -1.275838e+00 -3.609219e-01  1.239842e+00 -2.181223e+00 #> [2791]  1.019728e+00 -6.214093e-01  8.919387e-01  2.862674e-01 -4.244613e-02 #> [2796]  1.260865e+00  4.709689e-01  1.568058e+00  1.010496e+00  2.419659e+00 #> [2801] -4.391279e-01 -4.613723e-01  3.726858e-01  1.617630e-02  2.443938e-01 #> [2806] -5.387683e-01  1.830234e+00 -1.729930e-01 -1.717114e-01 -3.282805e-01 #> [2811]  1.120341e+00  1.615712e-02 -1.057973e+00 -5.993089e-01 -4.682657e-01 #> [2816] -9.210425e-01 -1.979660e+00 -2.025677e-01  7.068688e-01  1.204144e+00 #> [2821]  4.333328e-01  5.673927e-01  5.070505e-01  1.470928e+00 -8.709378e-01 #> [2826]  3.650547e-01 -3.796211e-01 -8.879600e-02  1.572530e+00 -1.807512e-01 #> [2831] -3.455609e+00  3.477856e+00 -1.722975e-01 -1.190749e-01 -9.429560e-01 #> [2836] -2.036705e+00 -3.325713e-01 -1.577749e+00 -1.645367e+00  1.629977e+00 #> [2841]  1.898300e-01 -1.353422e+00 -8.403038e-01  1.345734e-01 -4.824951e-01 #> [2846] -5.748684e-01 -1.502794e+00 -1.656705e-01 -3.302575e-01 -1.797631e+00 #> [2851]  2.395771e+00 -1.715314e+00  1.282309e+00  1.443018e+00  8.621195e-01 #> [2856]  1.476369e+00  1.278354e+00 -3.622890e-01  2.485641e-01  5.069276e-01 #> [2861]  1.736074e-01 -1.115272e+00 -6.783904e-01 -3.363017e-01  1.229991e-01 #> [2866]  1.423648e+00 -1.995311e-01 -1.299280e-01  2.884940e-01  5.194037e-01 #> [2871] -1.570485e+00 -5.905679e-01  2.894398e-01 -2.051673e-01 -4.849821e-01 #> [2876]  2.744271e-01 -1.596696e-01  2.263720e-01 -1.075127e-01 -1.664528e+00 #> [2881]  8.898661e-01 -1.112171e-01 -7.292333e-02  2.851839e-01 -9.840332e-01 #> [2886] -7.036840e-01  3.480858e-01 -6.876160e-01  3.553616e-02 -7.155876e-02 #> [2891]  2.478653e-01  1.220744e-01  7.174042e-01  1.927096e-01  2.757914e-01 #> [2896] -5.114333e-01  1.314895e+00 -8.819275e-01 -1.517124e-01 -6.910396e-02 #> [2901] -2.098216e+00  2.285477e-01  2.111268e-01  9.519410e-01 -1.271120e-01 #> [2906]  6.579458e-01  4.979032e-01 -4.858259e-02  2.492813e-01  1.130709e+00 #> [2911]  1.339666e-02 -1.872094e-01 -1.701794e+00  1.126971e+00 -3.120299e-01 #> [2916]  4.609700e-01  1.628217e+00 -2.512609e+00 -8.099264e-01  9.281227e-01 #> [2921]  6.109170e-01 -6.659554e-01 -1.369622e+00  1.951990e-01 -8.614434e-01 #> [2926]  7.096280e-01  9.836982e-02 -6.221831e-01 -8.912634e-01  1.831785e-01 #> [2931]  1.163544e+00  3.251537e-01 -1.157336e+00 -1.420067e+00  2.599929e-02 #> [2936] -1.879371e+00  4.410017e-01 -4.833619e-01 -1.740693e+00  8.528210e-01 #> [2941] -6.326925e-02 -2.468134e+00 -5.598652e-01 -2.152100e-01 -1.033623e+00 #> [2946]  3.567373e-01  8.296941e-01  5.593716e-01  7.787945e-01  2.929878e-01 #> [2951]  1.138791e-01 -4.604168e-01 -6.053481e-01  4.095650e-01 -2.771294e-01 #> [2956] -1.173889e-02 -1.651805e+00  1.777918e+00 -2.857550e-01  2.295366e+00 #> [2961]  6.643506e-02 -8.077294e-02 -2.055784e-01 -1.971329e+00  5.670215e-01 #> [2966]  3.324280e-01  1.925477e+00  1.668795e+00  2.115772e+00 -1.961795e-01 #> [2971] -1.353737e+00 -3.376906e-01  7.277652e-01  2.064022e-03  1.579818e-01 #> [2976] -9.937512e-01 -1.760310e+00  8.750844e-01  4.512806e-02 -2.124780e+00 #> [2981]  2.346321e+00 -6.310889e-01  1.791674e+00 -1.431819e+00 -4.120971e-01 #> [2986]  4.166751e-01 -4.780952e-01 -2.217985e-01 -5.906325e-01 -1.897225e-01 #> [2991] -4.136754e-01  1.009223e+00 -3.352765e-01 -1.462971e+00  7.433091e-01 #> [2996] -4.962468e-01  3.881282e-01  4.900968e-01 -8.767454e-01 -6.724997e-01 #> [3001] -2.748325e-01  9.880729e-01  5.288092e-01 -1.082817e+00  5.821591e-02 #> [3006] -4.254460e-03  7.319211e-01  2.755295e-01  5.539674e-02  1.589624e+00 #> [3011] -8.110225e-01 -8.464739e-01  1.797306e-01 -6.667264e-01  1.789631e+00 #> [3016] -3.466985e-01 -1.309922e-01 -3.930502e-01 -1.578790e+00  3.460939e-01 #> [3021]  2.174684e-01 -9.382225e-01  1.344629e+00  1.702774e+00  5.247438e-01 #> [3026]  1.333823e+00 -1.402595e+00  6.342230e-01 -9.373267e-01 -1.053377e+00 #> [3031] -8.300686e-01 -1.328909e-01 -9.397555e-01 -1.104400e+00 -5.063985e-01 #> [3036]  1.092123e-01 -1.849110e-01  7.761797e-01 -6.550792e-01  7.299367e-01 #> [3041]  1.190955e-01  9.444711e-01  3.815992e-02  1.174750e+00  6.437231e-01 #> [3046] -4.987214e-01  3.050327e+00  9.429243e-01  1.433056e+00  4.050817e-01 #> [3051] -1.027853e+00  1.348504e+00  6.115929e-01  1.299475e+00 -3.792588e-01 #> [3056]  7.381712e-01 -3.009290e-01  1.127687e+00 -1.388234e+00  3.651516e-01 #> [3061] -9.802003e-02  1.135628e+00 -1.525673e+00  6.258324e-01  3.600166e-01 #> [3066] -6.770870e-01  1.378955e+00 -3.599780e-01 -5.052487e-01 -5.148079e-01 #> [3071] -4.475901e-01  8.287481e-01  1.246770e+00  1.069485e+00  1.775810e+00 #> [3076]  7.834155e-02  2.408171e+00  6.800019e-01 -5.973592e-01 -7.780695e-01 #> [3081] -3.169666e-01  2.068617e+00 -9.779772e-01 -1.079315e+00  6.849897e-01 #> [3086]  1.252892e+00  4.592569e-01  9.523220e-01  1.290523e+00 -3.367062e-01 #> [3091]  1.033081e-01 -4.444517e-01 -3.598693e-01  4.073533e-01 -5.757921e-01 #> [3096] -4.309459e-01  1.134762e+00 -9.022172e-01 -1.346762e+00  1.155055e+00 #> [3101] -9.080277e-01 -1.105862e+00 -2.453413e-01 -1.402800e+00 -8.457533e-01 #> [3106]  1.908497e-01 -9.735988e-01  2.954010e-01 -1.276300e+00 -8.628610e-01 #> [3111] -1.333605e+00 -1.426793e+00 -1.071004e-01 -2.128706e+00  1.188604e+00 #> [3116]  7.547138e-01  2.047212e+00 -1.633938e+00  3.920820e-01 -7.349787e-01 #> [3121]  9.037975e-01  8.337434e-02  7.058298e-01 -5.486867e-02 -9.304928e-01 #> [3126] -1.318493e+00  3.068563e-01  7.322654e-01  5.622762e-01  1.433026e+00 #> [3131]  6.748547e-01  9.296259e-01 -1.225125e+00  8.716108e-01  2.196404e-01 #> [3136] -9.956322e-01 -4.716189e-02 -1.114151e-01  6.179278e-01 -1.711841e+00 #> [3141] -4.449900e-02 -1.768780e+00 -8.401082e-01 -4.731742e-01  1.286875e+00 #> [3146] -2.432335e+00  3.915248e-01 -9.119347e-01 -6.386851e-02 -4.809164e-01 #> [3151]  2.613776e-01 -1.226819e+00  8.402557e-01 -1.758540e+00  1.367485e+00 #> [3156] -1.717710e-02 -1.393549e-01 -7.425979e-01  1.032341e+00 -3.357477e-01 #> [3161] -2.532477e-01 -1.187873e+00  2.045660e+00 -2.322118e+00  8.470934e-01 #> [3166]  1.134438e-01 -1.278463e+00 -8.744652e-01  5.445202e-01  3.312964e-02 #> [3171] -1.520901e+00 -8.811702e-01 -1.944681e-01 -5.702317e-01  5.009793e-01 #> [3176]  1.345396e+00 -2.129782e+00  4.649306e-01  1.346429e-01  1.155700e+00 #> [3181] -3.379416e-02  7.052987e-01 -6.979051e-01 -1.124471e+00 -9.013575e-01 #> [3186]  1.300641e+00 -2.742918e-01 -2.029352e+00  2.430121e+00  1.154568e-01 #> [3191]  3.556538e-01 -1.037672e+00 -7.518982e-01 -7.451728e-01 -1.302367e+00 #> [3196]  2.352654e-01 -7.425356e-01 -4.744589e-01  6.326398e-01  2.123386e+00 #> [3201]  1.730026e+00 -9.463199e-01 -1.290443e+00  1.746836e-01  5.839316e-01 #> [3206] -1.213489e-01 -7.609035e-01  1.515337e+00  7.928252e-01 -1.480812e+00 #> [3211] -8.212147e-01 -1.336926e+00  4.806112e-01 -2.197984e-01 -3.026698e+00 #> [3216] -1.898015e+00  5.676940e-01  3.478578e-01  1.837125e-01 -9.837596e-01 #> [3221] -2.295107e+00  7.771795e-01  2.189695e+00 -3.989979e-01 -1.427761e-01 #> [3226]  4.744505e-01  2.481562e-01 -6.418041e-01  5.094914e-01  2.188745e-01 #> [3231]  6.245858e-01  1.731587e+00  9.981685e-02  4.650733e-01  8.683391e-01 #> [3236]  1.149525e+00  9.442001e-02  1.498629e+00  1.150570e+00 -6.666673e-02 #> [3241] -3.447290e-01  1.914647e-01  6.025336e-01 -4.070156e-01  2.198860e-03 #> [3246]  8.012352e-01  4.364869e-01  2.472045e+00  6.701109e-01  1.622453e+00 #> [3251]  5.955015e-01 -3.797366e-01 -2.385207e+00 -1.481401e+00 -3.273751e-01 #> [3256] -5.953342e-02 -4.780341e-01 -3.115855e-01 -1.614648e-01 -1.795190e-02 #> [3261] -2.545364e-02 -1.319332e-01  1.050068e+00 -5.665610e-01  5.424348e-01 #> [3266]  1.319440e+00 -3.090112e-01 -6.957619e-02 -1.604370e+00 -1.280335e+00 #> [3271]  8.760488e-01  2.206820e+00 -1.571114e+00 -1.318250e+00 -6.496305e-01 #> [3276]  9.535464e-01  1.663535e-01 -5.226880e-01  1.124692e+00 -4.220668e-01 #> [3281] -6.754869e-01 -2.869316e-01  3.129571e-02 -1.092746e+00  9.340375e-01 #> [3286]  1.135346e+00  2.035219e+00  4.281964e-01 -1.712252e-01  2.196292e+00 #> [3291]  1.963416e+00  2.500178e-01 -3.447751e-01  1.415366e+00 -1.990331e+00 #> [3296] -1.332957e+00 -6.744429e-01  9.978250e-01 -1.638075e+00  2.995746e-01 #> [3301] -6.967985e-01 -5.849022e-02 -5.744048e-01 -1.434486e+00 -9.423472e-01 #> [3306] -6.023588e-01 -5.605528e-02  1.136027e+00  1.546569e+00 -6.858214e-01 #> [3311] -1.094103e+00  1.794205e-02  7.936045e-01  9.982990e-01 -1.834925e-01 #> [3316] -7.277724e-01  6.844067e-01  1.942016e+00 -1.543545e-01  9.335855e-01 #> [3321] -2.591889e-01  1.488072e+00  1.285602e+00  7.373094e-01 -1.869992e-01 #> [3326]  9.151843e-01 -1.039390e+00 -6.379511e-01  3.134023e-01 -2.155878e+00 #> [3331] -3.468538e-01 -2.131467e+00 -1.696486e+00  1.594634e-01 -1.083646e+00 #> [3336] -1.072468e+00  1.746671e-01  4.249932e-01  8.740013e-01 -1.413565e-01 #> [3341] -2.163724e+00  8.599972e-01  9.515958e-01  2.164709e+00  1.107162e+00 #> [3346]  3.449500e-01 -4.596033e-01  1.860978e+00  1.201645e+00  2.095425e-01 #> [3351] -9.569532e-01  9.912078e-01 -3.351335e-01 -1.062517e+00  3.103299e-01 #> [3356]  1.344748e+00 -8.916603e-01 -5.132516e-01 -5.191574e-01 -1.148458e+00 #> [3361] -4.380894e-01  1.639454e-01  2.836818e-01 -1.146716e+00 -2.964144e+00 #> [3366]  2.551468e-01  3.333172e-01  6.258099e-01 -1.251973e+00  8.176020e-01 #> [3371]  7.887490e-03 -1.373524e-01 -4.665415e-01 -3.270352e-01  9.074385e-01 #> [3376]  3.623839e-01 -4.312687e-01 -2.890886e-01 -4.440727e-01  5.477963e-01 #> [3381]  1.347764e-01 -1.207467e+00  4.885457e-02 -1.538199e+00 -1.853870e-01 #> [3386] -2.354283e-01  2.289398e+00 -1.407105e+00  1.009209e-01 -8.703439e-02 #> [3391] -2.839983e+00 -1.149782e+00  1.189976e+00 -1.366531e+00 -9.491289e-01 #> [3396] -2.007956e-02  7.903697e-01  7.403716e-01  3.754772e-01  1.189891e+00 #> [3401] -7.292839e-01  4.406123e-01  9.510413e-01  1.407486e+00 -4.202737e-01 #> [3406]  3.897564e-01 -1.315514e+00 -7.359127e-01 -9.091680e-01  7.763850e-02 #> [3411] -1.349436e+00  5.221920e-01  3.517321e-01 -1.068135e-01 -1.243613e+00 #> [3416]  1.134072e-01 -1.248312e+00 -1.474639e+00  3.974245e-01 -5.621071e-01 #> [3421] -6.408157e-01 -1.067473e+00 -2.366793e+00  5.287568e-01  1.711564e-01 #> [3426] -1.213994e+00  3.615370e-01  7.138972e-01  1.134532e+00 -1.530651e+00 #> [3431]  9.275162e-01  5.568703e-01 -8.827446e-01  1.861771e-01  9.392119e-01 #> [3436]  7.761691e-02 -1.137981e+00  1.349283e-01  1.253383e-01 -5.916513e-01 #> [3441]  3.008458e+00 -1.049727e+00  2.080245e-01  5.601458e-01  2.258756e+00 #> [3446]  4.394515e-01 -1.236082e+00 -5.459965e-01  2.392787e+00 -6.692269e-01 #> [3451]  2.333659e-01 -1.410225e+00 -1.953366e+00  6.459858e-01 -1.107904e+00 #> [3456]  5.843737e-01 -1.290844e-01 -8.842434e-01  1.585995e-01  1.070909e+00 #> [3461] -1.467667e+00 -7.354261e-01 -1.289088e+00  8.930822e-01  6.026074e-01 #> [3466]  2.574460e-01 -6.347148e-01 -7.556154e-02  1.950953e+00 -9.578446e-02 #> [3471]  1.681130e-01  2.852143e-01  4.829807e-01 -5.456164e-01 -7.601586e-01 #> [3476] -1.675533e+00 -5.769315e-01 -1.372222e+00 -2.530621e-01 -8.174581e-01 #> [3481]  1.819954e+00 -2.017555e+00 -1.566980e-01  1.743042e+00 -1.204700e-01 #> [3486]  1.061816e+00  8.146046e-01 -1.424219e+00  6.797837e-01  7.108467e-01 #> [3491] -6.078236e-01 -1.553090e+00 -1.975671e+00  7.425007e-01 -1.529630e-01 #> [3496]  1.906791e-01 -5.617415e-01 -1.337668e+00  1.085800e+00  6.320664e-01 #> [3501] -1.274041e+00 -2.129235e+00  7.132304e-01  2.135251e-01  1.078931e+00 #> [3506] -3.782222e-01  1.593345e+00 -3.513579e-01  1.740058e-02  8.163556e-01 #> [3511] -6.934534e-02  4.883276e-01  1.179464e+00 -6.552199e-01 -5.037350e-01 #> [3516]  8.372742e-01 -2.501036e+00  8.517710e-01 -8.156712e-02  6.676190e-01 #> [3521] -1.195175e+00 -7.733786e-01  2.374860e-01  1.043876e+00  2.216385e+00 #> [3526]  3.068864e-01 -1.798214e+00 -2.018158e+00  1.265140e+00 -1.023652e+00 #> [3531] -1.098267e+00 -3.469265e-01  2.223631e-01  1.609757e-01  7.012149e-02 #> [3536] -2.069245e+00 -2.132389e-01  1.683243e+00 -6.609366e-01  2.680993e-01 #> [3541] -2.375792e-01 -9.652793e-02  1.254297e-01  4.200105e-01  2.654571e+00 #> [3546]  1.323377e+00  1.296817e-01 -1.113195e+00 -6.008093e-01 -2.546354e-01 #> [3551] -5.997596e-01 -1.518054e+00  9.474038e-01 -1.715294e+00  2.349863e-01 #> [3556] -3.413056e-01  1.759350e+00  2.255684e-01  1.284095e+00 -1.845000e+00 #> [3561]  7.954292e-02 -1.308401e+00  7.885086e-02 -8.295135e-01  8.107626e-01 #> [3566] -3.224112e-01 -5.308886e-01 -5.391588e-01  1.213497e+00  6.690879e-02 #> [3571] -9.088721e-01 -4.951959e-02 -3.816739e-01 -1.690811e-01  2.222066e+00 #> [3576] -2.108424e-02 -1.472336e+00  8.012184e-01  3.959456e-01 -1.698226e+00 #> [3581]  9.921178e-01  9.667781e-01 -2.846490e-01  3.558191e-01 -5.634914e-01 #> [3586] -7.245632e-01  2.095423e-01 -9.149234e-01 -5.969340e-01 -1.354532e+00 #> [3591]  9.539628e-01  2.084467e-02  3.624887e-01  7.661341e-01  1.783351e-01 #> [3596]  2.086188e+00 -2.079718e-01 -1.129917e-01 -1.579867e-01  1.343346e+00 #> [3601]  9.816895e-02  1.695836e+00 -2.520223e-01  1.142099e+00 -6.439301e-01 #> [3606] -1.135776e+00  4.170747e-01 -3.110857e+00  3.906070e-01 -6.706497e-02 #> [3611]  6.289029e-01  1.435549e-01  9.491483e-01 -1.848904e+00 -2.531370e+00 #> [3616] -3.912245e-01  1.225694e+00 -1.321451e+00  1.162264e+00  1.224405e+00 #> [3621] -3.221015e-01 -3.554761e-01 -1.250104e+00  7.788436e-01  3.830533e-01 #> [3626] -2.128570e+00 -1.392953e+00 -4.370327e-01 -1.936614e+00 -1.158626e+00 #> [3631] -1.712058e+00 -2.429449e+00  6.993306e-01  6.064598e-01  2.242482e-01 #> [3636] -5.685230e-01 -2.550049e-01  1.850603e+00 -1.720129e+00  1.178702e+00 #> [3641] -1.405910e+00 -2.410876e-02 -9.822515e-01  7.692305e-01  4.021046e-02 #> [3646]  1.263748e+00 -2.921060e-01  5.438016e-01 -7.032465e-01  4.897899e-02 #> [3651]  9.332976e-01 -1.098534e-01  1.385731e+00  1.426641e+00  1.563679e+00 #> [3656]  8.959516e-01 -3.808744e-01  1.315215e+00  9.945580e-01  2.116348e-01 #> [3661]  1.278375e+00  5.944204e-02 -1.567186e+00  6.142041e-01 -1.489302e-01 #> [3666] -2.791830e-01 -4.771216e-01 -1.000426e-01  3.852260e-01  1.210923e+00 #> [3671]  9.244162e-01  1.191711e+00  5.796497e-01 -3.182743e-01 -2.745458e-01 #> [3676]  2.302386e+00  2.065162e-01  1.286890e-01  5.039785e-01 -3.401661e-01 #> [3681] -3.535615e-01 -1.547490e+00 -1.099522e+00 -3.638039e-01 -8.032425e-01 #> [3686]  1.555313e+00  9.850517e-01  1.918356e-01 -2.380443e+00 -8.962944e-01 #> [3691] -9.356835e-01  1.473564e+00 -7.151007e-01 -2.459151e+00  3.343229e-01 #> [3696]  5.037641e-01 -1.295832e+00 -6.959845e-01  9.654320e-01  4.863315e-01 #> [3701] -7.081367e-01 -1.731004e-01 -7.115204e-01  4.792704e-01  1.075601e+00 #> [3706]  7.212108e-01 -1.115989e+00 -5.700158e-02 -3.644286e-01  1.001713e+00 #> [3711]  1.242322e+00  9.044852e-01  1.310698e-01  3.409857e-01 -1.880350e+00 #> [3716]  2.681446e-02 -2.057663e+00  2.603134e-01  6.391789e-01 -7.084936e-01 #> [3721]  5.409387e-01  9.946830e-01 -6.643075e-01 -4.518287e-01 -5.818948e-01 #> [3726]  2.401642e-01 -1.052316e+00 -5.168009e-01 -2.067314e+00 -1.975976e-01 #> [3731]  9.032085e-01 -1.392516e+00 -1.251412e+00 -1.307271e+00  2.027626e+00 #> [3736] -2.660733e-01  3.921328e-01  5.153766e-02 -1.106480e+00 -2.610881e-01 #> [3741] -6.712556e-01 -1.556685e+00 -7.717257e-01 -2.218911e-01  2.156608e+00 #> [3746]  1.638165e+00 -1.632534e+00  2.169554e-01 -2.403196e+00  9.763916e-02 #> [3751]  8.737658e-01 -1.830952e+00 -1.498476e+00 -8.333782e-01 -6.930710e-02 #> [3756]  1.113786e+00 -6.243422e-01 -2.497867e+00 -8.214121e-01 -1.188668e-01 #> [3761]  6.518747e-01  9.352748e-02  7.209831e-01  2.126376e-01  9.217333e-03 #> [3766]  6.779081e-01 -1.223328e+00  7.597263e-01  1.521838e+00 -1.191715e-01 #> [3771]  1.038563e+00 -2.021377e-01  5.330185e-01  1.498262e+00 -3.098969e-01 #> [3776] -5.654508e-01 -1.982398e+00 -1.115661e+00  5.252927e-01  3.944183e-01 #> [3781] -8.113722e-01  1.286617e+00 -3.869329e-01 -2.650792e-01  2.299760e+00 #> [3786]  3.619654e-01 -1.500160e+00  9.037936e-01  2.072651e+00  1.173570e+00 #> [3791] -6.680753e-01  3.643649e-01  4.236374e-01  1.025262e+00 -2.915690e+00 #> [3796]  1.144160e+00  1.040007e+00  5.410102e-02  9.581217e-01 -3.200969e-01 #> [3801] -8.523202e-02  1.483863e+00  9.779582e-02  8.050812e-01 -5.424425e-02 #> [3806] -1.456932e+00  2.048245e-01  8.284635e-01 -2.012463e+00  9.143873e-01 #> [3811]  9.705926e-02  3.293002e-01 -8.695188e-01 -2.065089e-01 -5.074061e-01 #> [3816] -1.105684e+00  9.138968e-02  7.571339e-01  1.216570e-01 -1.034858e+00 #> [3821] -7.153849e-01  6.506930e-01 -4.667729e-01  1.390466e+00  3.309963e-01 #> [3826] -1.410023e-02 -1.106082e+00 -3.268238e-01 -2.768775e-01 -6.128609e-01 #> [3831] -5.034936e-02  3.117139e-01  1.232566e+00 -1.588337e+00  2.691597e-01 #> [3836]  3.166569e-01  1.269255e-01  7.887085e-01  1.846255e+00 -4.180699e-01 #> [3841]  6.121378e-01 -7.174483e-01  2.872297e-01 -1.005646e+00 -2.559192e-01 #> [3846] -2.113228e-01 -2.338157e-01  1.430227e-01  5.829043e-01  6.628680e-01 #> [3851] -8.817602e-01 -4.633438e-01 -1.063139e+00  1.199864e+00  9.718593e-01 #> [3856] -5.840356e-01  7.554614e-01 -5.692225e-01  5.396273e-01 -1.515867e+00 #> [3861]  2.165537e-03  7.298096e-01  2.001112e+00 -3.510302e-01 -6.675643e-01 #> [3866]  8.252343e-01 -5.527478e-01  7.288089e-01  1.313280e+00  8.514005e-02 #> [3871] -3.153102e-01  1.569812e+00 -3.169524e-01  3.875268e-02 -2.565838e+00 #> [3876] -2.050083e-01 -2.614513e-01 -6.314952e-01  1.162480e+00 -5.414433e-02 #> [3881]  6.884719e-01 -1.045587e+00  8.482010e-01 -1.405688e+00  3.390444e-01 #> [3886]  1.360892e+00 -1.175786e+00 -1.071056e+00 -1.084943e-01 -1.691007e+00 #> [3891]  1.156239e+00  4.334473e-01 -2.692851e-01  1.524569e+00 -7.040376e-01 #> [3896]  1.603276e-01  2.351047e-02 -4.141878e-01 -1.407818e+00  2.115241e-01 #> [3901] -2.061010e-01  2.082197e+00  3.098308e-01 -1.195033e+00 -2.715109e-01 #> [3906] -3.884935e-02 -1.271006e+00  7.543572e-01  2.228829e-01  9.818365e-02 #> [3911] -8.219151e-01  8.409123e-01 -9.499850e-02 -7.537727e-01 -7.819358e-01 #> [3916] -2.122192e-02  1.754960e+00 -1.660600e+00  1.897229e+00 -7.960279e-02 #> [3921]  8.923547e-01  5.562025e-01 -9.120262e-01 -4.761642e-01  4.621753e-01 #> [3926] -8.887682e-01  1.481339e-01 -1.423380e+00  5.807587e-01  6.645426e-01 #> [3931]  6.669408e-01  9.288910e-01 -3.609912e-01 -7.083821e-01 -6.074990e-01 #> [3936] -4.246602e-01 -2.980549e+00 -4.805462e-01  1.542435e+00  3.983240e-01 #> [3941]  1.024445e+00 -5.758683e-01  6.157310e-02 -1.942551e+00 -1.100186e+00 #> [3946] -1.109224e+00 -5.881870e-01  1.596467e+00 -9.503298e-01 -6.076239e-01 #> [3951] -9.318686e-02 -3.177360e-01 -9.422386e-01  2.094576e+00  3.032106e-01 #> [3956]  1.029128e+00  1.005681e+00 -4.243406e-01  7.274551e-02 -1.255562e+00 #> [3961] -1.624339e-01  8.236894e-01  1.296138e+00  1.206533e+00  2.947852e+00 #> [3966]  1.017658e-02  1.161534e+00  1.092967e-01 -5.152795e-01  1.177990e+00 #> [3971]  9.261883e-01  4.333714e-01  9.103516e-01  1.525622e+00  1.421383e+00 #> [3976]  1.041469e+00  1.500544e+00  9.259722e-02 -1.308005e+00  1.054596e-01 #> [3981] -1.141136e-01  2.760115e-01 -1.443774e-01  5.040494e-01 -2.976622e-02 #> [3986]  5.674588e-01 -9.380589e-01 -1.563519e+00 -1.262636e+00  2.269889e-01 #> [3991]  7.020241e-01 -4.764548e-01  1.640430e+00  1.055821e+00  8.285239e-01 #> [3996]  5.887272e-01 -6.618185e-01  1.816076e+00  4.077895e-01  1.231051e+00 #> [4001]  1.042843e+00 -1.973562e+00  3.475055e-01 -3.918342e-01 -3.336733e-01 #> [4006] -1.463305e+00  1.293238e+00 -4.787726e-01  3.923715e-01  7.780139e-01 #> [4011]  1.867396e+00  4.902354e-01 -4.972773e-01 -3.543332e-01  1.169408e+00 #> [4016]  4.320351e-01  1.584525e-01 -1.044614e+00  8.338879e-01  4.526241e-01 #> [4021]  9.517343e-01 -2.081427e-01 -1.190079e-01  9.910498e-01 -1.412596e+00 #> [4026] -1.031911e+00 -1.795742e+00 -8.567056e-01  1.170708e+00 -8.097327e-01 #> [4031] -4.209484e-01 -1.120961e+00 -7.978179e-01 -4.401316e-01 -2.547236e-01 #> [4036]  1.433272e+00  4.155924e-01  7.027405e-01  1.337430e+00 -2.614280e-01 #> [4041]  3.948604e-01 -5.223753e-01 -4.575556e-01 -4.008028e-01  7.164778e-01 #> [4046] -4.151105e-01 -3.575341e-01 -3.992831e-02 -5.339114e-01 -4.181463e-01 #> [4051] -9.198246e-01 -1.427203e+00  6.754847e-01 -8.818356e-01 -5.916951e-01 #> [4056]  2.103036e+00  1.566411e+00  6.192989e-02  1.013062e+00  4.979451e-01 #> [4061] -5.524487e-01  3.509585e-01  2.050210e+00  1.910963e+00 -3.420555e-02 #> [4066] -1.747088e+00  3.145783e-02  2.361742e-04 -7.364954e-01  1.380348e+00 #> [4071]  1.753123e-01  1.043372e+00 -2.182364e+00 -4.266886e-01  2.484870e-01 #> [4076]  2.028774e+00  1.909126e-01 -1.318319e-01  1.162368e+00  1.538688e+00 #> [4081] -1.053585e+00  7.494891e-01  1.248539e+00 -1.358216e-01  1.248733e+00 #> [4086] -2.066549e+00  2.675247e-01  8.900438e-01 -6.979760e-01 -1.234900e+00 #> [4091]  2.080770e-01 -1.205054e+00 -1.810972e-01  1.770868e-01 -1.296471e-01 #> [4096]  1.266929e+00 -1.618801e+00 -6.223723e-01  5.764289e-01  8.934919e-02 #> [4101]  3.354934e-01 -2.022409e-01  4.835133e-01 -7.651040e-01  2.856021e-01 #> [4106] -2.166769e-02 -1.214792e+00 -1.007173e+00 -1.304370e+00  1.652882e+00 #> [4111]  1.863865e-01  1.524008e+00  1.996967e+00 -2.035943e+00 -1.906841e+00 #> [4116]  5.573827e-01  9.541650e-01  8.258969e-03 -9.944080e-01 -1.278192e+00 #> [4121]  8.873828e-01  9.413454e-01 -4.788971e-01  1.084438e-01  1.547726e+00 #> [4126]  4.490086e-01 -6.275115e-02 -1.592959e-01  1.319137e+00 -7.552738e-01 #> [4131] -3.207958e-01 -2.447237e-01  1.913748e+00 -1.501430e+00 -6.802929e-01 #> [4136]  1.234774e-01 -3.005259e-01 -1.392333e+00 -1.788608e+00  3.378788e-01 #> [4141]  1.121239e+00  1.709676e+00  6.357831e-01 -1.272849e+00 -1.347870e+00 #> [4146] -2.838826e-01 -4.619892e-01 -5.886340e-01 -1.222189e+00  8.162865e-01 #> [4151] -2.454822e-01  1.707374e-01 -2.080518e-01  7.256580e-02  1.035003e+00 #> [4156] -1.017166e+00  5.455083e-01 -6.942389e-01  3.202222e-01 -1.236566e+00 #> [4161] -1.313125e+00  6.764885e-01  3.495184e-01 -3.122987e-01 -1.452526e+00 #> [4166] -5.112258e-01 -2.276966e-01 -7.920138e-01 -6.685085e-01 -1.838893e+00 #> [4171]  1.418521e+00 -5.627078e-01  1.543711e+00  2.580706e-01  2.649488e-02 #> [4176] -7.375001e-01  2.308689e-01 -8.022336e-01 -3.917167e-01  9.561711e-01 #> [4181]  1.444611e+00 -1.730573e+00 -4.621689e-01  1.668574e-01  6.147995e-02 #> [4186] -1.955285e+00 -2.286496e-01 -1.246914e+00 -1.702592e-01 -3.809294e-01 #> [4191]  2.403810e-01 -2.094164e-01 -9.490627e-02  1.087412e+00  6.604145e-01 #> [4196] -6.880643e-01  2.268347e+00  1.994977e+00  1.555882e+00 -1.389378e+00 #> [4201]  8.551261e-02 -9.845573e-02 -4.876470e-02  1.079484e+00  7.048997e-01 #> [4206] -1.346358e+00  1.099405e+00  5.657772e-01  1.251783e+00 -4.139774e-01 #> [4211]  4.067800e-03 -2.673877e+00 -1.439455e+00  7.475170e-01  1.352596e+00 #> [4216] -1.627086e+00  9.237539e-01  8.685120e-01 -4.473587e-01  1.025156e+00 #> [4221] -2.721195e+00  4.313437e-01 -1.235527e-01  2.276678e-02 -7.395114e-01 #> [4226]  6.373254e-01  9.417273e-01  1.252745e+00  5.770570e-01  1.506749e-01 #> [4231] -3.191291e-01  1.758422e-01  4.985205e-01 -2.405891e+00  2.531787e-01 #> [4236] -1.053531e+00  2.778354e+00  1.843010e+00  3.136388e+00 -8.754471e-02 #> [4241]  1.489032e+00  1.187229e+00 -3.962697e-01 -1.507895e+00 -5.899516e-01 #> [4246]  8.514447e-01  5.549022e-01 -1.418278e+00  1.317251e+00  1.108238e-01 #> [4251]  1.212095e+00 -7.457787e-01  9.698292e-01 -2.282232e-01 -1.220906e+00 #> [4256]  3.086690e-01  7.785793e-01  2.066370e+00 -2.335571e-01  7.298639e-01 #> [4261]  4.238073e-01  1.876507e+00  4.337841e-01 -1.207305e+00  4.476032e-01 #> [4266]  6.880091e-01 -4.758537e-01  6.848768e-02  1.404805e+00  6.147518e-01 #> [4271] -4.016795e-01  4.388058e-01 -7.850975e-01 -6.758781e-01 -4.299664e-01 #> [4276] -3.248663e-01 -4.475911e-01  2.583537e-01 -3.231801e-01  1.625866e+00 #> [4281]  1.494172e-01  1.357198e-01 -1.975179e+00  4.687205e-01 -1.235341e+00 #> [4286]  5.495771e-02  2.933405e-01 -1.082968e+00  3.000391e-01  1.712919e-01 #> [4291] -9.310581e-01  1.728963e+00 -7.145663e-01  1.874758e-01 -1.371685e+00 #> [4296]  1.484418e+00  4.715982e-01 -4.592706e-01  1.717711e+00  9.408558e-01 #> [4301]  2.019425e-01 -1.277852e+00 -2.350434e-01 -1.896166e+00  1.100623e+00 #> [4306]  1.043546e+00  1.266204e+00 -5.951370e-02  5.366810e-01 -2.525862e-01 #> [4311] -1.640631e+00  1.320950e+00 -2.648887e+00 -1.020419e+00  2.115009e-01 #> [4316] -2.319454e+00  1.628526e+00 -1.235568e+00  1.559398e-01 -7.644804e-02 #> [4321]  8.717254e-02 -2.757564e+00 -2.315728e+00  1.472578e-01  3.096804e-01 #> [4326] -9.358972e-01 -6.691700e-01 -6.235521e-01  8.065657e-01  6.805499e-01 #> [4331] -6.495737e-01 -2.304588e+00 -3.017151e-01 -1.498344e+00  5.156358e-01 #> [4336] -1.728673e-01 -5.856681e-01 -1.219119e+00  8.442398e-01  6.370875e-01 #> [4341] -7.834080e-01  1.588296e+00 -1.665006e+00  1.348281e-01 -9.739065e-01 #> [4346] -3.407805e-01  5.213955e-01  1.886632e-01  1.311949e+00 -5.263550e-01 #> [4351] -2.091033e-01 -1.238072e+00  4.826331e-01 -7.868736e-02  4.452847e-02 #> [4356] -2.335044e+00  1.903147e+00 -1.324058e+00  8.384366e-01 -5.404439e-01 #> [4361] -3.573046e-01  3.428392e-01 -8.468613e-01  4.260682e-01  1.327794e-01 #> [4366] -3.886042e-01 -2.805716e-01  1.381764e-01  1.804957e-01  7.360749e-01 #> [4371]  2.029306e+00 -1.132779e+00 -4.368375e-01 -2.276854e-01 -8.840147e-02 #> [4376] -1.530063e+00  1.072910e-01  6.641994e-01 -1.427633e+00 -1.855432e+00 #> [4381] -6.914036e-01  5.684710e-01 -4.384522e-01  4.346523e-01  7.946792e-01 #> [4386]  1.031396e+00 -4.420847e-01 -3.710722e-01 -1.283874e-01 -8.218460e-01 #> [4391]  5.980602e-01  1.634738e-01 -3.750039e-01  7.742569e-01  1.527482e+00 #> [4396] -3.528986e-01  1.949550e-02 -2.736713e-01  1.111119e-01 -1.294989e+00 #> [4401]  8.262415e-01 -7.826441e-01  1.944621e+00  1.229258e+00  2.529253e+00 #> [4406] -2.272510e+00  1.629003e-01  9.533435e-01  1.292874e+00  3.910383e-01 #> [4411] -1.774654e+00 -4.181891e-01 -1.588218e-01  1.879013e+00  1.231980e+00 #> [4416] -1.602968e-01  9.498678e-01 -1.279319e+00  3.572798e-01 -9.983044e-01 #> [4421] -1.319285e-01  4.704518e-01 -5.271882e-01  5.497940e-01 -1.396709e+00 #> [4426]  2.157021e-01 -1.094335e+00  2.880456e-01 -2.951092e-01 -2.431304e+00 #> [4431]  2.671957e-01  1.609221e+00  2.468923e+00  8.111011e-01  1.245903e+00 #> [4436]  2.211518e+00  4.701543e-02  1.404367e+00 -1.032598e+00 -4.230376e-01 #> [4441] -4.425312e-01 -1.527751e+00  9.485985e-01 -5.246632e-02  3.011721e-01 #> [4446]  1.035821e+00  1.745056e-01  8.536570e-01  1.596177e-01 -2.689453e+00 #> [4451] -6.222646e-01  2.289537e+00 -9.554048e-01  1.864948e+00 -5.115504e-01 #> [4456]  1.138944e+00  1.452176e+00  3.292210e-01  3.363956e-01 -1.210615e+00 #> [4461] -1.562745e+00  6.969434e-01 -2.018499e-02 -9.237054e-02  6.588627e-01 #> [4466] -2.986197e-01  1.212730e+00 -1.715598e+00  2.653015e+00  2.005447e+00 #> [4471] -1.918315e-01 -3.836889e-02  8.018086e-01 -4.295184e-02 -1.226182e+00 #> [4476]  7.645365e-01 -4.153266e-01  1.543804e+00  1.156928e+00 -2.628397e-01 #> [4481] -9.923164e-01 -5.587573e-01  1.392369e+00 -8.208236e-01  2.591682e+00 #> [4486] -1.788145e+00 -1.159816e-01  6.446695e-01 -6.919810e-03  1.014831e+00 #> [4491] -7.002839e-01 -1.399736e+00  1.269040e+00  5.669108e-01 -2.917601e-01 #> [4496] -1.023005e-01  9.652911e-01 -7.786778e-01  1.093384e+00  1.095692e+00 #> [4501] -8.721242e-01 -1.328677e+00 -4.915708e-01 -1.785930e-01 -5.104631e-01 #> [4506] -9.776825e-01  3.246399e-01 -1.390552e+00 -2.111169e+00 -1.278131e+00 #> [4511] -1.270635e+00  5.401482e-01 -1.015434e+00  6.944721e-01 -1.445933e+00 #> [4516] -2.323744e+00  4.802614e-01  2.948319e+00 -6.256887e-02  1.215188e+00 #> [4521]  6.838432e-01  1.082173e-01  1.740277e+00  2.069854e+00  1.506655e-01 #> [4526]  1.825640e-01  9.917468e-01 -7.358179e-02  1.770346e+00 -7.605760e-02 #> [4531]  5.591309e-01 -1.845241e-01 -4.648483e-01  1.166470e-01  7.863509e-01 #> [4536] -1.004923e+00 -1.366749e+00  1.468087e+00  1.457150e+00  1.011597e+00 #> [4541]  9.951589e-01  1.502374e+00 -8.511724e-01  1.046434e+00  9.222642e-01 #> [4546]  1.217311e+00  2.630717e-01 -5.460509e-01  3.119948e+00  9.964955e-01 #> [4551]  5.396297e-03 -9.454498e-01  1.315087e+00 -8.619327e-01  9.191365e-02 #> [4556]  1.813042e+00  2.308701e+00  6.801238e-01 -9.252679e-01  9.011495e-01 #> [4561] -1.408244e+00  2.415608e-01  3.464506e-03  1.124645e+00 -1.932941e+00 #> [4566]  8.642382e-01 -3.431115e-01  1.921159e+00  1.265566e+00 -4.000649e-01 #> [4571] -3.914311e-01  6.791670e-01  1.051073e-01  2.739759e+00 -3.384345e-01 #> [4576]  4.314123e-01 -3.615444e-01  2.627267e+00 -4.094320e-01 -8.154912e-01 #> [4581] -1.081409e+00  8.819277e-01 -1.921597e+00 -8.104993e-01 -3.208077e-02 #> [4586] -4.298441e-01 -1.596618e-01  3.074557e-03  8.472425e-01  8.360611e-01 #> [4591] -2.297323e+00  5.858176e-01 -2.505571e+00  2.457788e-01 -6.393496e-01 #> [4596] -1.537663e-02  1.303170e+00  1.662600e+00 -5.599735e-01 -1.042735e+00 #> [4601]  4.464725e-01 -2.267709e-01  1.242103e+00  3.658271e-01 -7.543913e-01 #> [4606] -1.765428e-01 -1.719092e-01 -1.880755e-03  1.964583e-01 -5.428819e-01 #> [4611] -1.921215e+00 -1.579989e-01  9.457705e-01 -1.114803e+00 -1.519672e+00 #> [4616] -4.309436e-03  7.152128e-01  1.338560e+00  6.041862e-01 -1.009092e+00 #> [4621] -7.147405e-01  1.433997e+00 -1.665244e+00 -5.632479e-01  1.582431e+00 #> [4626] -2.146356e+00 -6.634899e-01 -3.457945e-01 -5.992249e-01  1.747024e-01 #> [4631] -1.479295e-01 -1.254647e+00  7.671719e-01  1.094160e+00  1.210392e+00 #> [4636]  9.618946e-01 -1.515929e+00  5.047601e-01 -2.150325e-01  1.225151e+00 #> [4641] -2.316965e+00  2.613082e-01 -1.692239e+00  5.043702e-02 -1.337073e+00 #> [4646] -6.908028e-01  6.519406e-01  5.193949e-01  2.595446e+00 -1.631750e-01 #> [4651] -2.422670e+00  7.663881e-01 -1.272928e+00 -3.362612e-01 -1.604673e+00 #> [4656]  7.451591e-03 -5.306047e-01 -5.436352e-01  8.135675e-02 -1.149408e-02 #> [4661]  9.683475e-01 -6.338940e-01 -7.086682e-01  3.793013e-01 -2.231841e+00 #> [4666]  2.628765e-01  1.558072e+00  8.091237e-01 -1.190701e+00 -7.553959e-01 #> [4671] -6.074319e-02 -2.410292e+00  1.357178e+00  1.537268e+00  8.498841e-01 #> [4676]  1.529764e+00 -7.507075e-01  1.422398e+00 -5.606059e-01 -6.588450e-01 #> [4681] -5.570796e-01 -6.565143e-01  2.504399e-01 -1.121069e+00 -1.583090e+00 #> [4686]  2.155708e+00  5.874626e-01 -9.436106e-01 -8.184197e-01  5.168674e-02 #> [4691] -7.453635e-01 -9.637950e-01  2.216711e+00  2.052499e+00  5.663595e-01 #> [4696] -5.628300e-03 -4.323812e-01  8.632418e-01  2.377556e-01  5.413097e-01 #> [4701]  1.773826e+00  1.533755e+00 -1.266452e+00 -1.147815e+00  1.401913e+00 #> [4706] -4.866360e-01  5.825294e-01 -4.795638e-01 -4.201146e-01  8.313347e-01 #> [4711] -8.013134e-02 -8.193449e-01 -7.895375e-01  1.123467e+00 -6.297240e-01 #> [4716]  1.090856e+00 -1.557309e+00  8.312254e-01  1.954063e+00 -1.863590e+00 #> [4721]  1.256494e+00  2.400496e+00  7.055103e-01 -1.267556e+00 -3.386457e-01 #> [4726]  1.047203e+00 -1.029342e+00  5.752642e-01  5.621081e-01  9.020529e-02 #> [4731]  4.286972e-01  1.095917e+00  1.110669e+00 -1.369491e+00  9.615784e-02 #> [4736] -8.617030e-01  1.542914e+00  3.904173e-02  1.013611e+00 -7.378096e-01 #> [4741] -1.843654e-01  8.659640e-01  2.336280e+00  5.684930e-01  2.976349e+00 #> [4746]  1.311441e+00  5.592117e-01  1.140695e+00 -1.824542e+00  1.228986e+00 #> [4751]  7.121384e-02  2.357404e+00  1.623791e+00 -5.682576e-01 -1.062474e+00 #> [4756] -1.791367e+00 -9.487374e-01  2.959567e-01  3.547890e-03 -6.564632e-01 #> [4761] -1.146664e+00 -3.383195e-01  1.721416e+00 -1.626577e+00  1.770584e+00 #> [4766]  7.781410e-01 -1.562410e-01 -9.987918e-01 -4.160854e-01  9.637167e-02 #> [4771]  1.543057e+00 -4.758401e-01  8.971776e-01  3.515751e-01 -9.745574e-02 #> [4776]  9.413387e-01 -3.888784e+00 -1.841947e+00 -1.214337e+00 -2.745626e-01 #> [4781]  7.114044e-02  1.282115e+00  1.483710e-01 -4.553072e-02 -3.549699e-01 #> [4786] -6.973581e-02  1.142176e+00 -6.529478e-01 -7.830445e-01  8.011279e-01 #> [4791] -1.001197e+00 -4.017519e-01  8.678642e-01 -6.353624e-01  3.343054e-01 #> [4796]  1.104376e+00  6.128243e-01 -2.130673e-01 -7.616270e-02  1.572450e+00 #> [4801] -8.316102e-01 -2.850616e-01 -5.689338e-01  2.163337e+00  1.122827e-01 #> [4806]  4.926301e-01  7.382352e-01  1.180099e+00  1.193430e-01  8.226489e-01 #> [4811] -1.468085e+00 -1.857114e+00  2.740774e-02 -4.469183e-01  1.229777e-01 #> [4816]  1.069734e+00 -2.431990e-02 -1.277356e+00  1.133430e+00 -1.522245e-01 #> [4821]  5.502904e-01  3.089530e-01 -1.050542e+00  1.084481e+00 -1.387922e+00 #> [4826] -3.109900e-01 -7.915421e-01  6.839626e-01 -3.255275e-01 -5.149123e-01 #> [4831]  1.464172e+00  1.240126e+00 -2.266638e+00 -1.432977e-01  1.192958e+00 #> [4836]  2.087472e-01 -1.518056e-01 -2.196623e+00 -1.203337e+00 -4.096816e-01 #> [4841]  5.025302e-01  8.811790e-01  9.069877e-01  6.950635e-01 -2.115830e+00 #> [4846] -4.856101e-01 -4.276784e-01 -1.459314e+00 -2.017732e-01  1.127654e+00 #> [4851] -1.421985e-01 -1.291692e+00  2.246695e-01 -1.282935e+00 -2.363251e-01 #> [4856] -6.882090e-01  3.769877e-01 -2.678845e-01  2.960703e+00 -5.844312e-01 #> [4861]  6.786052e-01 -2.152938e+00 -1.873291e+00  1.432518e-01 -3.978462e-02 #> [4866] -1.396707e+00  3.249214e-01 -1.258157e+00 -1.592790e+00 -1.218909e+00 #> [4871]  9.236321e-01  2.070983e+00 -1.072262e+00  1.932623e+00 -4.691846e-01 #> [4876]  4.297654e-01  1.988939e-01  1.385378e+00 -5.248152e-01  7.924835e-01 #> [4881] -1.439577e+00  1.567830e+00 -2.205439e+00  9.419276e-01 -3.749519e-01 #> [4886] -8.885460e-01  6.932502e-01  3.883966e-01  1.369038e+00  1.151642e+00 #> [4891] -1.455493e+00  1.285240e+00 -1.005230e+00 -6.767860e-02  6.999027e-01 #> [4896] -4.380324e-01 -7.710561e-01  5.822663e-01  3.215621e-01  2.874020e-01 #> [4901]  8.959932e-01  1.638895e+00  1.506521e+00 -3.473195e-01  1.064035e+00 #> [4906] -4.967530e-01  2.705483e-01  6.136454e-01 -1.338816e+00 -1.808955e+00 #> [4911] -2.871596e-01 -1.702579e+00  1.160689e+00  1.628103e+00  4.359587e-01 #> [4916]  7.169288e-01  4.457670e-01  1.334836e-01  1.834661e+00  2.200120e+00 #> [4921] -4.862894e-02  3.105692e-01  3.010631e-01 -1.556185e+00  1.561250e+00 #> [4926]  9.629632e-01 -1.471400e+00 -6.545893e-01 -5.878673e-01  1.101874e+00 #> [4931]  9.648265e-01  7.992565e-01 -3.248528e-01 -1.074889e+00  3.380397e-01 #> [4936] -1.579438e+00  1.658067e+00 -7.584752e-01 -2.541643e-02 -7.057407e-01 #> [4941]  6.034343e-02 -5.024652e-01 -7.045505e-01  2.237594e+00 -9.304721e-01 #> [4946] -4.032825e-01 -3.354357e-01 -6.694799e-01 -3.317321e-01 -5.092744e-01 #> [4951] -1.369289e+00 -1.840363e+00 -6.428919e-01 -7.308962e-01 -5.537943e-01 #> [4956]  6.359595e-02 -1.595922e-01 -1.846939e-01 -2.207755e+00  3.815726e-01 #> [4961] -7.529173e-01 -9.567743e-01  8.724001e-01  2.498752e+00 -7.215732e-01 #> [4966]  9.664964e-01  4.158301e-01 -1.537031e+00  5.005199e-01  3.004273e+00 #> [4971] -1.941398e+00  1.884226e-01 -1.569988e-01  1.352634e+00 -6.141189e-01 #> [4976]  8.055423e-01 -3.262264e-01  1.439927e+00  7.321817e-01  1.434952e+00 #> [4981] -6.356142e-01  2.382295e-01  7.714474e-01  1.503318e+00  1.045915e+00 #> [4986]  5.124138e-01  8.380603e-01 -5.892128e-01 -3.996061e-01 -1.199939e+00 #> [4991] -3.815809e-01  1.712533e+00 -7.956345e-01  6.377215e-01 -1.566671e+00 #> [4996]  1.205361e+00  9.142102e-01 -7.322870e-02  2.520945e-01  2.722917e-01 #> [5001]  1.149170e+00  2.009714e-01  6.045566e-01  1.008641e+00  3.025356e-02 #> [5006] -1.785611e+00  2.317343e+00  2.495241e-01  2.711976e-01  3.939001e-02 #> [5011]  3.873834e-01  3.644157e-01  9.543685e-01  1.061173e+00  5.407562e-01 #> [5016] -1.572344e+00  1.538446e-01 -1.648100e-01 -2.358641e-01  1.306564e+00 #> [5021] -1.418530e+00  1.736784e+00  1.239440e+00  1.315721e-01  1.795934e-01 #> [5026]  1.896709e-01 -5.045376e-01  1.020385e+00 -1.583968e+00 -2.104753e-01 #> [5031] -2.935159e-01  2.166617e+00 -2.003943e-01  1.382256e-01 -1.929151e+00 #> [5036]  2.072106e-01 -3.721674e-01  1.821442e-01  3.496261e-01 -1.223435e-01 #> [5041] -1.859461e-01 -4.568635e-01  1.497230e+00 -1.304710e+00  4.369867e-02 #> [5046] -9.072669e-01  1.448907e+00 -2.058612e-01 -3.892015e-01  1.887954e+00 #> [5051]  1.732868e+00  1.725581e-01  1.898502e-01  9.539024e-01 -7.419471e-02 #> [5056] -5.172557e-01  3.773707e-03  2.229189e-01 -4.964179e-03  1.265974e+00 #> [5061] -1.202374e+00 -3.269068e-01 -2.055041e-01  1.087290e+00  1.322435e-01 #> [5066]  9.778839e-02 -8.097954e-01 -9.289231e-01  2.613472e-01 -5.476822e-01 #> [5071] -1.165466e+00  1.308150e+00  7.989116e-01  3.286821e-01 -2.133691e+00 #> [5076] -1.637042e+00  1.657093e+00  1.334640e-01 -2.188896e+00 -6.920168e-01 #> [5081]  1.121276e+00  2.331872e+00 -2.321143e+00  1.760836e+00 -2.036745e+00 #> [5086] -1.655463e+00  1.645841e+00  8.692833e-01 -1.139143e+00  1.679090e-01 #> [5091]  6.060030e-01 -2.004337e+00 -8.536437e-02  5.019418e-01  3.972593e-01 #> [5096] -7.274000e-01 -6.666506e-01 -1.335912e+00 -9.136052e-01  3.174521e-01 #> [5101] -9.245334e-01 -6.090221e-01  9.306789e-01 -1.003059e+00  5.076956e-01 #> [5106]  2.208373e-02 -1.469873e+00  9.310173e-01 -2.938818e-02 -1.661814e+00 #> [5111] -9.003529e-01  8.156211e-01  1.361697e+00  7.169772e-01 -1.322690e+00 #> [5116] -8.246919e-01 -1.798716e+00 -1.471468e+00 -1.253576e+00  8.723146e-02 #> [5121]  1.175130e+00  7.861460e-03 -1.030020e+00 -1.532567e-01  1.915094e+00 #> [5126]  1.188076e+00  2.436474e+00  1.135080e+00  8.979191e-01  2.402609e-01 #> [5131]  9.426232e-01  2.306110e-01 -1.392840e+00  8.895534e-01 -5.436099e-01 #> [5136]  7.136949e-01  1.067200e+00  1.104442e+00 -1.830308e+00  1.232056e+00 #> [5141]  2.695009e+00 -7.626852e-01 -1.421555e-01  3.406639e+00  9.440736e-01 #> [5146] -1.337367e+00 -5.919221e-01 -2.632130e-01  2.430610e+00 -1.260650e-02 #> [5151] -8.965816e-01 -1.111160e+00 -1.326621e+00  4.146387e-01 -7.960244e-01 #> [5156] -2.355570e-01 -4.583161e-02 -3.959763e-01  1.402679e+00 -3.316389e-01 #> [5161]  1.987026e+00 -4.149975e-01  8.813278e-01  8.808324e-01 -1.235350e+00 #> [5166] -4.002922e-01  1.945802e+00 -1.278369e+00 -4.269186e-01  8.137913e-01 #> [5171] -8.363614e-01 -7.891392e-01 -1.684139e+00 -2.843288e-02  6.460100e-01 #> [5176]  5.834785e-01  1.023562e+00 -1.064508e-01 -5.604634e-02 -1.368730e+00 #> [5181]  2.703505e+00 -1.226382e+00 -4.215301e-01  1.776653e+00 -1.085522e+00 #> [5186] -8.773502e-01  1.465556e-01  2.436759e-01  4.517266e-01 -4.991080e-01 #> [5191] -2.094502e+00 -2.944623e+00  4.266871e-01  5.108042e-01 -1.275143e+00 #> [5196]  1.071593e+00  7.931343e-01  1.358377e+00 -1.212879e+00  7.330749e-01 #> [5201] -4.050165e-01  1.230279e+00  2.409878e+00 -1.951597e+00 -8.781773e-01 #> [5206] -3.305789e-01 -8.602284e-01 -4.422830e-01  7.402604e-01 -4.136568e-01 #> [5211] -4.334722e-01 -1.009493e-02  8.308878e-01  7.920360e-01 -2.450499e-01 #> [5216] -3.259442e-01 -3.174924e-01  9.143507e-01  4.109077e-01  5.362473e-01 #> [5221] -9.791811e-01  1.563022e+00  3.258611e-01 -9.755297e-01 -1.026304e+00 #> [5226] -6.410584e-01  2.744193e+00  1.350382e-01 -1.943650e-01 -1.462276e+00 #> [5231] -3.045872e+00 -1.885778e+00 -1.335500e+00 -1.995795e+00 -7.633051e-01 #> [5236]  9.301232e-01  1.544051e+00 -1.465695e+00  1.993864e+00  7.691168e-01 #> [5241]  1.447687e+00 -1.137026e+00 -7.969643e-01  1.664743e+00 -1.562740e+00 #> [5246] -1.118338e+00  7.171232e-01  1.599559e-01  1.307059e+00  2.572592e-01 #> [5251] -1.157328e+00  4.925021e-01  5.621276e-01 -1.591150e+00 -1.251276e+00 #> [5256] -7.644979e-01 -2.830228e-01  1.210384e+00 -1.033555e+00 -2.216166e-01 #> [5261]  2.461472e-01 -4.795398e-01  1.199303e-01  6.747650e-01 -1.183823e+00 #> [5266]  6.907460e-01 -6.620190e-02 -2.255742e-01 -8.958656e-02 -4.702230e-01 #> [5271] -2.418185e-01  1.468563e+00 -6.905212e-01 -2.073819e-01 -4.180001e-01 #> [5276]  6.507784e-01 -4.288574e-02 -4.169023e-01 -4.156294e-01  2.907259e-01 #> [5281] -1.088132e+00  1.995599e+00 -3.020148e+00 -2.698173e-01  1.933698e+00 #> [5286]  6.392676e-01  6.795919e-01 -7.058231e-01 -1.329425e+00  9.669667e-01 #> [5291] -3.231515e+00  6.591293e-02  7.573418e-02 -2.161727e-01 -2.244390e+00 #> [5296] -1.308498e+00  8.212803e-02 -1.218449e+00  2.950810e+00  9.308296e-01 #> [5301]  1.069445e+00  5.834906e-01  4.773503e-01  1.433165e+00  1.398882e+00 #> [5306] -1.764490e-01  2.144692e+00  1.772941e-01  9.077392e-02  9.156289e-01 #> [5311]  1.876945e-01 -1.280777e+00 -6.137159e-01 -4.993446e-02 -2.283090e-01 #> [5316] -7.328434e-01 -9.738662e-01  2.408612e-01  9.763620e-01  8.802310e-01 #> [5321] -3.288955e-02 -2.832455e-01 -1.440239e+00  6.629858e-01  1.092271e+00 #> [5326]  6.226039e-01 -3.185942e-01 -7.203021e-02 -8.722678e-02  3.328933e-01 #> [5331] -9.556350e-01 -2.376330e-01  4.754455e-01  1.629250e+00  2.269408e-02 #> [5336] -1.052785e-01 -4.996171e-01 -1.199452e+00  2.094918e-01 -4.245377e-01 #> [5341] -1.186675e+00 -1.620384e+00  2.107807e+00  5.539627e-01  1.628973e+00 #> [5346]  4.210131e-01 -8.093044e-01  3.859745e-01 -1.132925e+00 -1.083326e+00 #> [5351]  4.730639e-01 -4.850777e-01  1.026841e+00 -2.190642e+00  3.265796e-01 #> [5356] -1.206008e+00 -2.782438e-01  1.293014e+00 -4.211544e-01  1.363179e-01 #> [5361]  4.304279e-01 -5.672228e-01 -8.941563e-01 -5.859289e-01  8.274040e-01 #> [5366]  3.003064e+00  7.346077e-02 -1.746953e-01  1.398872e+00  6.856578e-01 #> [5371]  7.098912e-01  1.194799e+00  5.361981e-01 -2.387884e+00 -1.243290e+00 #> [5376] -1.532587e+00  9.189978e-01 -1.856785e+00  2.166476e-01 -1.876446e-01 #> [5381] -1.054635e+00 -8.743755e-02  1.610144e+00 -4.427877e-01  1.163328e+00 #> [5386] -1.594436e+00 -1.806998e-01  1.576124e+00  4.295634e-01 -8.151142e-01 #> [5391] -5.381021e-01  1.808166e+00  1.385204e+00 -1.050303e+00 -1.383210e+00 #> [5396]  3.990677e-01  1.018257e+00  1.717417e+00  6.029955e-02 -1.712156e+00 #> [5401] -1.442362e+00  1.869657e+00  1.277959e+00 -9.831243e-01  2.981294e-01 #> [5406]  1.685079e-01 -3.677266e-01 -8.014657e-01 -8.728893e-01  9.760373e-01 #> [5411] -1.382581e+00 -1.330200e+00  1.234306e+00  1.795976e+00 -9.337207e-02 #> [5416]  1.445915e+00  5.626724e-01  3.833923e-01 -2.678065e-01  3.742537e-01 #> [5421] -2.274569e+00  1.011298e+00  7.407603e-01 -1.228853e+00 -8.804583e-01 #> [5426]  1.526172e+00  2.994217e-01 -5.018593e-02 -2.004517e+00  1.095529e+00 #> [5431]  1.559907e+00 -1.355277e-02  3.512884e-01  1.737654e-02 -1.970113e+00 #> [5436] -9.471116e-01 -1.514143e+00  6.935297e-01  1.058744e+00  9.712090e-01 #> [5441]  5.681634e-01  4.290710e-01  8.372677e-01 -1.590581e-01  1.847824e+00 #> [5446] -1.203347e+00  1.100948e+00 -1.522383e+00 -4.647238e-02 -1.090474e-01 #> [5451] -1.308204e+00 -3.438733e-01  4.772192e-01  8.271469e-01  1.325741e-01 #> [5456] -9.818612e-02 -1.039828e+00  1.435777e+00 -2.495054e-01 -1.665796e-01 #> [5461]  1.932385e+00  1.046662e+00  6.855628e-01  8.364911e-01 -9.072405e-01 #> [5466]  5.524547e-01 -1.043229e+00 -1.304085e+00  1.384247e+00 -1.932231e+00 #> [5471]  1.020792e+00 -1.067725e+00 -1.226097e+00 -5.544948e-01  4.319487e-01 #> [5476] -5.245240e-01  5.630860e-01 -1.179644e+00  2.427848e+00  1.022440e-01 #> [5481] -2.868747e+00  3.026647e+00 -1.295392e-01  5.909925e-01  1.089679e+00 #> [5486]  1.140843e-01  3.105185e-01 -7.654757e-01  1.972626e+00  5.013782e-01 #> [5491]  7.696563e-01 -1.366829e+00  1.173189e-01  1.049600e+00  1.374317e+00 #> [5496] -1.119561e+00 -2.645769e-01  1.148541e+00 -2.374926e-01 -1.591458e+00 #> [5501] -8.050747e-01 -1.284325e+00  4.750871e-01  3.457076e-01 -7.471632e-01 #> [5506]  1.998948e+00  1.856269e-01  2.859423e-01 -7.028989e-01 -1.339278e+00 #> [5511]  8.264238e-01  6.446065e-01  2.432879e-01  2.721966e-01 -3.347900e-01 #> [5516] -1.608649e+00  1.136380e+00 -4.851747e-01  5.135576e-01  1.796167e-01 #> [5521]  1.156927e+00 -9.197222e-01  8.602779e-01  1.734314e+00 -8.260677e-02 #> [5526]  6.614481e-01  6.895028e-01 -7.099305e-01 -4.325595e-01 -2.124044e-01 #> [5531]  3.183912e-01  7.538551e-01  1.287261e+00  9.215235e-01 -3.555759e-01 #> [5536]  4.288842e-01  1.340146e+00 -7.033854e-01  3.181121e-01 -7.093160e-01 #> [5541]  1.003919e+00 -2.545631e-01 -9.650483e-02 -1.754416e-03 -1.222188e+00 #> [5546]  6.979812e-01 -1.906516e+00  8.339292e-01  1.604925e+00  1.658869e+00 #> [5551]  1.182808e+00  7.957685e-01  4.148595e-01  2.182757e+00  3.071748e-01 #> [5556]  7.854141e-01  1.893178e+00 -1.048123e+00 -2.757285e-01 -6.851412e-01 #> [5561] -9.156931e-01  8.390982e-01  1.369932e-01 -1.097259e+00  1.696492e+00 #> [5566]  4.008259e-03 -7.102813e-02 -1.297137e+00  5.285891e-02  1.380000e+00 #> [5571]  4.899800e-01 -8.215134e-01  1.224122e+00  2.064097e+00  3.310754e-03 #> [5576]  2.723425e-01 -7.725451e-01  7.292228e-02 -1.176293e+00  1.027365e+00 #> [5581]  1.901913e+00 -1.208299e+00  3.711576e+00  7.595025e-01  5.049304e-01 #> [5586]  1.830229e+00 -1.150793e-01  7.249305e-01 -1.292123e+00  1.826321e-01 #> [5591]  1.258847e+00 -4.036456e-01 -1.972436e+00  2.648439e-01 -7.737830e-01 #> [5596] -2.255025e+00 -6.936587e-01 -8.047073e-01  1.768609e+00  8.414358e-01 #> [5601]  1.561493e+00 -2.803437e-01  3.964098e-02 -7.507369e-01  1.010923e+00 #> [5606] -5.517053e-01  9.859032e-01  4.578832e-01 -1.484528e+00  3.751855e-01 #> [5611]  3.755279e-01 -6.138460e-01  1.890318e+00 -2.507469e+00  3.163840e-01 #> [5616]  9.086559e-01 -5.970335e-01 -1.606254e+00  1.853314e+00 -1.340516e-01 #> [5621]  1.279622e+00 -1.219478e+00  1.479011e-01  6.549067e-01  5.883061e-01 #> [5626]  4.565164e-01 -7.698619e-01 -5.043145e-01  1.326696e+00  7.995644e-01 #> [5631]  1.363087e-01 -1.003239e-01  5.433299e-01 -6.556258e-01 -5.383021e-01 #> [5636] -1.553972e-02 -7.868334e-01  2.459321e-01  1.395607e+00 -1.396040e+00 #> [5641]  1.551083e-02  4.870576e-01  2.667965e+00 -7.134228e-01  1.397847e+00 #> [5646] -2.867013e-01 -9.868163e-01  1.695174e-01 -1.604015e+00 -1.056322e+00 #> [5651] -9.048466e-02  3.604288e-01 -7.838391e-01  4.293555e-01 -2.287944e+00 #> [5656]  1.782899e+00  9.539170e-01 -3.089398e+00 -1.466550e-01 -5.374153e-02 #> [5661]  8.044938e-01  4.701307e-01  9.866643e-02  7.482904e-01 -1.078094e+00 #> [5666] -5.604185e-01 -7.531777e-01  2.025927e+00 -7.869000e-01  5.800120e-01 #> [5671]  1.335612e+00 -1.473974e+00  9.648930e-01  7.758426e-01 -5.031401e-01 #> [5676] -1.396080e+00  6.786680e-01 -1.212208e+00  1.536069e-01  5.001525e-01 #> [5681] -4.727589e-01  3.106796e-01 -8.691485e-01  6.374366e-01 -1.489521e-02 #> [5686]  8.309436e-01 -1.744662e+00  1.021610e+00 -4.374625e-01 -1.024081e+00 #> [5691] -5.336889e-01  1.671803e+00  1.075751e+00 -5.314125e-01 -6.980935e-01 #> [5696]  1.106708e-01  1.739372e-01 -1.294449e+00 -1.757633e+00  6.283705e-01 #> [5701]  6.115167e-01 -1.305246e+00 -1.050921e-01 -2.926355e-01 -1.171275e-01 #> [5706]  1.238520e+00  6.790650e-01  6.403107e-01 -2.683826e-01 -5.948298e-01 #> [5711]  9.766001e-01 -7.016287e-01  2.064901e-01 -7.611154e-01  2.241378e+00 #> [5716]  1.491250e-01 -1.004762e+00  1.739663e-01  8.003333e-02 -7.719877e-01 #> [5721]  1.348385e+00  2.639098e-02  6.362258e-01  1.128663e-01  1.755081e+00 #> [5726]  2.638176e-01 -1.183728e+00  4.342692e-01 -1.894366e+00 -4.179729e-01 #> [5731] -1.374602e+00 -1.096879e+00  9.269171e-01  1.079803e-01 -2.965076e-01 #> [5736] -1.923895e+00 -5.551777e-01  9.953854e-01  6.843474e-02 -1.331883e+00 #> [5741]  8.086129e-02  1.049813e+00  7.983185e-01 -1.338010e+00 -4.069490e-01 #> [5746] -1.157383e+00  5.080612e-01 -1.207077e+00 -1.829394e-01 -9.419999e-01 #> [5751] -3.983188e-01 -7.484334e-01  3.820952e-01 -2.404724e-01 -1.072367e+00 #> [5756]  1.405897e+00 -5.499596e-02 -8.414333e-01 -7.101674e-01 -1.628647e+00 #> [5761]  1.085425e+00  4.801166e-01  1.320748e+00 -1.014787e+00 -3.544482e-02 #> [5766] -1.319707e+00 -1.696209e-02  4.884539e-01 -2.570130e+00  1.357190e+00 #> [5771] -3.612225e-01  2.655690e-01  1.789228e+00  1.076486e+00 -1.415670e+00 #> [5776] -1.508855e+00  2.073587e+00  8.305523e-02  8.257795e-01  5.957915e-01 #> [5781] -6.864584e-01  1.387445e+00 -5.026166e-01  3.813575e-01  1.544923e+00 #> [5786]  1.631466e+00 -5.667603e-02 -1.985528e-01  1.154962e+00 -1.911044e+00 #> [5791] -8.666533e-01 -8.483095e-01  5.585885e-01  1.596288e-01 -8.708192e-01 #> [5796] -1.649960e+00 -4.326643e-01  7.225201e-02  9.681405e-01 -4.502685e-01 #> [5801]  6.456367e-01 -6.019114e-01  9.878025e-02  3.150366e-01 -1.256610e+00 #> [5806] -1.726158e+00  2.956462e+00  1.221349e+00  1.263509e+00  7.373385e-01 #> [5811] -1.672870e-01  5.318339e-01 -1.159330e+00  8.505244e-02  6.375039e-02 #> [5816] -3.467451e+00 -1.552737e+00  2.058040e+00  8.966566e-02  2.477381e-01 #> [5821]  2.992671e-01 -2.063964e+00  9.572984e-01  1.048221e+00  4.792968e-01 #> [5826]  8.451513e-01 -6.513569e-01 -4.845326e-01  1.499288e+00  5.173321e-01 #> [5831]  1.212076e-01  8.595286e-02 -7.778328e-01 -1.842518e+00 -2.230507e-01 #> [5836]  1.091486e+00 -7.175083e-01 -1.024587e+00  2.766486e+00 -2.372247e+00 #> [5841] -1.504524e+00  1.584825e+00  6.090570e-01 -9.140313e-01  1.591799e+00 #> [5846] -1.006448e+00  5.861924e-01  9.113571e-01 -2.662480e-01 -6.067803e-01 #> [5851]  7.462953e-01  2.342049e-02 -9.945382e-01 -3.619679e-01 -3.375219e-02 #> [5856] -6.427170e-02  1.123856e+00 -8.253837e-01  1.457604e+00 -5.431484e-02 #> [5861]  6.222970e-01  3.296691e-01  7.025907e-01  7.189077e-01  1.171777e+00 #> [5866]  1.974469e+00 -1.110059e+00  1.564446e+00  1.387002e+00  5.595815e-01 #> [5871] -1.059851e+00 -2.634129e-01  5.826561e-01  5.906632e-02 -1.474686e+00 #> [5876]  9.031444e-01  8.883280e-01  1.112724e+00 -1.436970e+00  7.658172e-03 #> [5881] -9.253245e-01  1.453963e+00 -7.461101e-01 -1.658685e+00 -4.117521e-01 #> [5886] -2.121666e+00 -1.461035e-01  1.695740e-01 -5.245080e-01  3.242519e-01 #> [5891] -2.256819e+00 -5.898744e-01  3.024901e-01 -1.409593e+00  4.386451e-01 #> [5896]  7.612542e-01  2.141168e+00 -1.030277e-02 -4.826855e-01  3.001025e-02 #> [5901] -1.828931e+00 -9.941031e-01 -6.694696e-01  1.887461e+00  3.433367e+00 #> [5906] -5.951389e-01  1.215412e+00  1.408998e-01  7.623433e-01  1.476585e+00 #> [5911] -6.745374e-01 -2.203413e+00  1.070347e+00 -2.123623e+00  1.244397e+00 #> [5916]  8.961169e-01  1.916720e-01 -2.046235e-01 -6.772086e-01 -9.650754e-01 #> [5921] -3.463453e-01  3.055774e+00  3.002348e-01 -1.110638e-01  4.680507e-01 #> [5926]  5.230898e-01 -6.875909e-01 -9.381655e-01  7.740370e-01  1.694339e+00 #> [5931] -6.793342e-01 -1.556629e+00  7.158031e-01 -7.446888e-01 -2.116238e-01 #> [5936] -7.793007e-01 -5.833240e-02 -1.047931e+00 -1.289997e+00 -6.982402e-01 #> [5941]  1.486564e+00  1.807882e+00  7.517793e-01 -5.659841e-01 -8.030517e-02 #> [5946]  7.564452e-01 -9.745790e-01  2.685215e-01 -1.068450e+00 -2.085218e+00 #> [5951]  1.415425e+00 -1.816351e+00  1.886894e+00 -7.875143e-01  7.154420e-01 #> [5956]  2.094780e-02 -1.030451e+00  7.939879e-01 -4.829757e-01 -5.145978e-01 #> [5961] -6.799092e-01 -1.585726e+00 -8.421939e-01 -2.187467e-02  2.974618e-02 #> [5966] -6.705157e-01 -1.815180e+00  7.090580e-01 -3.950870e-02  7.071571e-01 #> [5971]  3.084342e-01  1.052459e-01  2.271214e-01  2.252160e-01  5.818862e-01 #> [5976] -9.651445e-01 -1.503158e+00  8.675617e-03  9.093693e-01  1.899327e+00 #> [5981] -3.916652e-01 -7.936208e-01  5.937260e-01  7.273087e-01  3.065037e-02 #> [5986] -4.132751e-03  7.007400e-02 -2.605545e-01  1.327851e+00 -2.727290e-01 #> [5991]  1.251129e+00 -4.185085e-01 -1.505310e+00 -1.307413e+00 -3.424636e-01 #> [5996]  2.012382e+00  8.410237e-01 -2.209795e-01 -1.840781e-01  3.434790e-01 #> [6001] -1.361617e-01  2.008971e+00  2.215304e-01 -1.208285e+00 -9.374832e-01 #> [6006]  6.790347e-01  2.852063e-01  1.570929e-01  6.486854e-01 -4.476661e-01 #> [6011]  1.689473e+00  2.221740e+00 -9.511523e-01  3.189271e-01 -8.172469e-01 #> [6016] -3.473584e-01  1.181282e+00 -8.487727e-01 -5.309617e-01  9.032117e-01 #> [6021] -1.070569e+00  2.034018e+00  7.044873e-01  4.861936e-01 -1.078461e+00 #> [6026]  5.346796e-01  4.849866e-01  2.605464e-01  1.473920e+00  1.368811e+00 #> [6031]  1.497786e+00  9.127817e-02 -2.839830e-01  1.352182e+00  9.280826e-01 #> [6036]  3.803549e-02  3.293960e-01 -1.427420e+00  8.175426e-01 -7.947280e-01 #> [6041]  1.758397e+00 -9.783682e-02 -2.361526e+00  3.862210e-01  1.086271e+00 #> [6046] -4.409485e-01 -3.945670e-01 -1.807444e-02  5.682102e-02 -6.537348e-01 #> [6051]  8.522202e-01 -2.210274e-01 -8.253801e-02  3.521301e-01 -8.102739e-01 #> [6056]  5.548637e-01  9.501429e-01 -1.194458e+00  5.938903e-01 -5.006616e-01 #> [6061] -3.052753e-01  8.776158e-01 -1.014674e+00  9.283723e-02 -2.415360e+00 #> [6066]  1.130753e+00  2.668032e+00 -1.918072e+00 -1.489802e+00 -5.242459e-01 #> [6071]  6.734657e-01 -6.987237e-01  1.106158e+00  9.096797e-01  4.143881e-01 #> [6076]  4.594345e-01  2.081074e-01  2.437156e+00 -9.654335e-01 -1.203566e+00 #> [6081]  1.643816e+00  1.328876e-01  6.908718e-01 -1.408892e-01 -2.493158e+00 #> [6086] -1.177519e+00  7.698343e-01 -1.886061e+00  4.697638e-01  1.783617e-01 #> [6091] -1.458673e+00 -1.290672e+00  6.030798e-01  6.446526e-01 -2.481981e-01 #> [6096] -5.210955e-01 -1.473847e+00  2.709246e-01 -3.163684e-01 -2.082766e-01 #> [6101] -8.589993e-02 -7.026027e-01 -1.565420e+00  4.078011e-01 -3.233489e-01 #> [6106]  2.501909e+00 -7.168803e-01 -4.748718e-01 -1.392604e-01  1.709972e+00 #> [6111]  1.030466e+00 -1.466394e-01  6.057189e-01  1.082068e+00 -1.477717e+00 #> [6116] -8.937760e-02 -1.575628e-01  2.285546e+00  1.386819e+00 -2.883183e-01 #> [6121]  9.889271e-03  1.093247e+00  2.677435e+00 -7.057034e-01  1.570182e+00 #> [6126] -4.753817e-01 -8.865105e-01 -1.546952e+00  1.960751e-01 -7.699675e-02 #> [6131]  5.659285e-01  2.670925e+00 -2.590467e+00 -1.006134e+00  5.130407e-01 #> [6136]  1.088928e+00  1.301722e+00  6.780772e-01 -5.369732e-01  2.787032e+00 #> [6141]  7.980614e-01 -8.381114e-01 -3.984047e-01 -9.175149e-01  9.528989e-01 #> [6146] -5.679934e-01  7.218418e-01 -1.330583e+00  1.398862e+00  1.266059e+00 #> [6151] -2.482766e-01  9.911532e-01 -2.070058e+00  2.485061e+00 -1.085558e+00 #> [6156] -1.741214e-02 -1.646178e-01  1.562147e+00 -9.787867e-01  1.513761e-01 #> [6161]  4.958567e-01  9.841038e-01 -1.493735e+00 -8.805885e-02  2.614077e+00 #> [6166]  2.200574e+00 -3.623050e+00  1.920974e+00  1.338290e-01  1.238469e+00 #> [6171]  1.939919e+00 -1.160961e+00 -9.935929e-01 -9.617977e-01 -1.968201e+00 #> [6176]  8.213057e-01  1.267502e+00  6.748898e-01  3.266314e-01 -1.112877e+00 #> [6181] -2.840038e+00  7.424804e-01  8.263061e-01  1.844063e-01  8.620667e-01 #> [6186]  4.213127e-01  1.174645e+00 -2.513138e-01 -7.157880e-01 -6.780359e-02 #> [6191] -3.173036e-01  9.922322e-01 -1.940925e-01 -5.241275e-01 -1.789102e+00 #> [6196] -7.367673e-01 -1.293855e+00 -5.587979e-01  2.209422e-02 -6.852074e-01 #> [6201]  1.586469e+00  1.550751e+00 -1.677832e+00  1.334403e-01  1.888923e+00 #> [6206]  7.284787e-01  7.618813e-01  8.473179e-01  5.712106e-01 -2.077214e+00 #> [6211]  1.397060e-01 -4.395746e-02  2.802525e-02  7.482940e-01 -6.324656e-01 #> [6216]  5.181704e-01  1.682001e+00  2.147121e-01  2.762242e+00  5.257411e-01 #> [6221]  1.898945e-01  8.519034e-01  1.685976e+00  5.097955e-01 -5.937606e-02 #> [6226]  8.956582e-01 -1.742236e-01  7.923132e-02 -3.822674e-01  1.180660e+00 #> [6231]  1.994202e+00 -3.029729e-01 -4.745921e-01 -2.018174e+00  1.817446e+00 #> [6236]  1.287147e+00  2.036975e-01  2.547867e-01 -4.200531e-01  2.140736e+00 #> [6241]  6.116077e-01 -3.955442e-01  1.577192e-01 -9.860190e-01 -5.353060e-01 #> [6246]  1.128053e+00 -1.075223e+00 -1.244455e+00 -1.719958e+00  1.547095e+00 #> [6251]  1.438006e+00 -5.247382e-01  2.318801e-01 -3.865289e-01 -3.157165e-01 #> [6256] -1.275702e+00  2.429441e-01 -4.504710e-01 -1.405086e+00 -5.216231e-01 #> [6261]  4.343773e-01 -4.693844e-01 -9.302194e-01  1.103505e+00 -1.471444e+00 #> [6266]  6.488977e-01  4.498962e-01  1.680016e+00 -2.153762e+00 -1.698632e+00 #> [6271]  1.462659e+00  1.036294e+00 -1.103426e+00 -1.112441e+00  1.178504e+00 #> [6276] -1.142412e+00  3.429860e-01  9.339580e-01  2.849352e+00  1.256225e-01 #> [6281] -1.685986e+00  9.442305e-02  1.644312e+00 -1.028296e+00 -1.741630e+00 #> [6286]  5.713427e-01 -7.865310e-01  1.669834e+00  1.065431e+00 -2.405543e+00 #> [6291]  2.747034e+00 -1.569497e+00 -7.924469e-01  6.657349e-01 -1.842753e-01 #> [6296]  2.158709e+00 -8.812737e-02  2.160590e-01 -4.324717e-01 -1.018993e+00 #> [6301] -1.103989e-01  2.353638e-01  5.537281e-01 -4.097054e-01 -3.784486e-01 #> [6306] -9.210897e-01 -1.168821e+00 -7.399335e-01 -6.254413e-01 -6.403951e-01 #> [6311]  7.460247e-01  2.796330e-01 -1.645203e+00  7.795647e-01 -2.127100e+00 #> [6316]  6.891472e-01 -1.609563e+00  1.069009e+00  2.118995e-01 -1.077321e+00 #> [6321]  6.527283e-01  1.656301e+00  1.030375e+00  1.025125e+00 -1.085008e+00 #> [6326]  1.179428e+00  7.065253e-01 -8.045832e-02 -1.236709e-01  2.620523e-01 #> [6331] -8.675935e-01  2.069298e-01 -1.206713e+00 -2.639081e-01  9.526485e-01 #> [6336]  7.414390e-01 -2.634691e-01 -6.829113e-01 -1.913000e+00 -1.791746e+00 #> [6341]  1.870399e+00 -6.190438e-01 -1.167580e+00 -1.166974e+00 -9.759948e-01 #> [6346]  5.683327e-01  7.985849e-01  1.320246e+00  1.630328e-01 -3.734182e-01 #> [6351]  2.467119e+00 -4.259186e-01  1.358322e+00  1.753311e+00  1.324142e-01 #> [6356]  2.320998e+00  5.681463e-01 -6.838635e-01  9.754191e-01  1.021579e+00 #> [6361] -1.932937e+00  7.796555e-01 -1.177613e+00  1.769457e+00 -1.023709e+00 #> [6366]  6.486876e-01  1.055277e+00 -1.090451e-01  1.124531e+00  2.381917e+00 #> [6371]  6.170468e-01 -1.840176e+00  4.921097e-01  1.155112e+00  1.307821e+00 #> [6376] -9.205852e-01  4.493356e-01 -2.222790e+00 -3.051846e-01  9.024221e-01 #> [6381]  8.900989e-01  9.602611e-02 -8.529229e-02  8.332260e-01  2.904075e-01 #> [6386]  5.138658e-01 -1.482058e-01 -8.311240e-01 -1.331933e+00  1.524878e+00 #> [6391] -3.390004e-02 -6.120610e-01 -1.347067e+00  1.656035e+00  9.233385e-01 #> [6396]  1.496774e+00 -2.317348e-01 -3.766735e-01 -2.061079e-01 -5.635105e-01 #> [6401] -1.433941e-01 -9.940558e-01  1.135997e+00  3.641755e-01 -1.207779e+00 #> [6406]  9.144439e-01 -5.283896e-01 -5.145175e-01  7.378417e-01  2.138359e+00 #> [6411]  1.482245e+00 -7.871410e-01  8.055040e-01 -3.581982e-01 -7.624534e-01 #> [6416] -1.051806e-01 -2.955349e-01 -1.064028e+00  4.612768e-01  3.569288e-01 #> [6421]  5.163943e-02  4.986911e-01 -1.735374e+00  9.333611e-01 -2.041328e+00 #> [6426]  8.213089e-02  3.017984e-02 -2.917127e-01 -1.881949e+00  1.994885e+00 #> [6431] -4.058477e-01 -6.426464e-02 -3.314229e-01  1.124077e-01  1.144520e+00 #> [6436] -1.341965e+00  5.184830e-01 -2.804700e-01 -1.732315e+00 -8.739811e-02 #> [6441]  1.743841e-02 -6.680246e-01  1.118667e+00 -1.560285e+00  1.199641e+00 #> [6446]  1.353273e+00  1.342936e+00  2.316553e-01 -9.850401e-01  4.323599e-01 #> [6451] -8.097202e-02 -1.467322e+00  1.681969e+00  1.962592e+00 -1.007728e+00 #> [6456]  8.508230e-01 -3.188349e-01 -1.066832e+00  1.884891e-01  1.749340e-01 #> [6461] -1.175796e+00 -2.996580e+00 -5.027675e-01  6.934421e-01  1.070534e+00 #> [6466] -1.601204e+00  9.668769e-01  1.643667e+00 -1.641297e+00 -8.786286e-01 #> [6471] -5.332286e-01 -3.855369e-01  1.808175e+00  6.059565e-01 -7.463191e-01 #> [6476]  4.516273e-01  1.159593e+00  9.144946e-01 -2.488108e-01 -7.365384e-03 #> [6481]  9.224548e-01  1.138796e+00 -7.104554e-01 -1.083421e-01  3.616957e+00 #> [6486]  8.964828e-02  5.680411e-03  2.475249e+00  5.826718e-01 -1.789144e+00 #> [6491]  1.174500e+00 -9.039622e-01 -4.431589e-01  1.329570e+00 -1.029929e+00 #> [6496] -1.568614e+00  1.005904e-02  2.209772e+00 -9.520693e-01 -7.577355e-02 #> [6501]  8.860366e-01 -6.131318e-01  1.875614e+00 -2.469210e+00 -5.475770e-01 #> [6506] -1.598559e+00 -3.649671e-01  5.000260e-01  8.209864e-01  8.877680e-01 #> [6511]  1.437348e-02 -4.133061e-01  1.442387e+00 -2.348793e-01  1.089594e+00 #> [6516] -1.137421e+00  2.941324e-01 -1.066677e+00  6.752882e-01  1.624226e+00 #> [6521] -2.609021e-01 -1.197139e+00 -2.859794e-01 -2.826636e-01  5.687208e-01 #> [6526] -4.543628e-01 -5.305548e-01 -1.510464e+00 -1.119418e-01 -2.587076e-01 #> [6531] -7.302601e-01 -5.687508e-01  5.158171e-01 -3.230712e+00 -3.226156e+00 #> [6536]  1.234343e+00 -4.426333e-01  1.129469e+00 -1.204900e+00  6.172415e-01 #> [6541] -1.079498e+00 -1.733390e+00 -1.610291e-01 -4.025209e-02 -1.154997e+00 #> [6546]  8.145958e-01  1.646166e+00  1.043365e+00  6.012770e-02 -1.660998e-01 #> [6551] -1.392226e-01  1.165123e+00  1.039641e+00  8.636320e-01  3.749275e-01 #> [6556]  1.110673e+00  2.219130e-01 -1.382622e+00 -3.982650e-01  1.915044e-01 #> [6561]  4.085493e-01  3.332220e-01  2.018402e-01  8.348774e-01  5.959458e-01 #> [6566]  1.482910e+00  6.594470e-01  1.795511e+00 -1.418570e+00  2.526743e-01 #> [6571] -2.910963e+00 -3.206257e+00 -1.975188e+00  1.647409e+00 -1.129504e+00 #> [6576] -1.935116e-01  4.838112e-01 -1.075653e+00  8.181236e-01  2.446095e+00 #> [6581]  1.280340e+00  2.158767e+00  8.341665e-01  2.492037e-01  1.357184e+00 #> [6586]  3.533480e-01 -1.171276e+00 -1.638046e+00  1.839099e+00 -1.923179e-01 #> [6591]  4.222032e-01  1.941867e+00 -2.780779e-01 -6.104435e-01 -1.040039e+00 #> [6596] -5.852416e-01 -1.021103e+00  9.711488e-02 -1.421470e-01 -9.356075e-01 #> [6601] -8.661253e-01 -2.231927e+00 -4.913661e-01  2.033814e-02 -1.414777e-01 #> [6606]  1.169721e+00 -9.212370e-01  1.083637e+00 -5.584973e-02 -1.121050e+00 #> [6611]  9.688326e-01 -1.778785e-01  7.763254e-02 -4.782435e-01 -9.182210e-01 #> [6616] -3.616966e-01 -1.288461e+00 -1.422532e+00  1.704068e+00 -6.367952e-01 #> [6621]  7.249772e-01 -8.424548e-01  6.710189e-01  1.071892e+00 -4.735128e-01 #> [6626]  3.607274e-03 -6.997652e-02  1.262140e+00 -1.205903e+00  2.226956e-03 #> [6631]  1.402410e+00 -2.339866e+00  1.047499e+00  1.126914e+00  1.164840e+00 #> [6636]  5.214373e-01 -2.049113e+00  1.601456e+00 -1.440370e+00 -1.297151e+00 #> [6641] -1.490317e+00  4.210615e-01  1.655404e-01 -3.605456e-01  1.477346e+00 #> [6646]  1.344584e+00 -4.795167e-01 -1.600385e+00  1.009175e+00  8.792870e-01 #> [6651]  5.090248e-03 -1.602330e+00  8.945731e-01 -1.258726e+00  7.788826e-01 #> [6656]  3.723661e-01  1.117272e+00  1.930982e+00  9.336303e-01  2.356824e+00 #> [6661]  5.532596e-02  9.051073e-01  1.327712e-01 -9.513573e-01  1.953468e-01 #> [6666] -2.741952e+00 -1.460573e+00 -4.990847e-02 -2.059390e+00  1.468189e+00 #> [6671]  8.458488e-02  5.826503e-01  8.421071e-02  1.451826e+00 -8.343998e-01 #> [6676]  5.156757e-01  2.033571e+00 -3.006155e-01 -3.000496e-01 -1.365801e+00 #> [6681] -7.299253e-01 -1.215707e+00 -8.030725e-02 -2.146527e-01  8.499147e-01 #> [6686] -1.291004e+00 -1.222422e+00  3.557680e-01 -2.055644e-01 -7.848414e-01 #> [6691] -1.161057e+00 -7.437775e-01 -2.479397e+00 -7.050099e-01 -1.564776e-01 #> [6696]  4.165404e-01 -1.099198e+00 -6.267906e-01 -1.438777e+00  5.360569e-01 #> [6701] -2.307557e-02 -3.991220e-01 -6.103675e-01 -8.837434e-01  1.939857e-01 #> [6706] -4.087506e-01 -5.614084e-01 -1.064447e+00  2.462741e+00  4.237570e-01 #> [6711]  8.902135e-01 -6.021966e-01  1.191992e-01  1.020714e+00 -2.595110e+00 #> [6716] -6.550198e-01 -1.536617e+00  7.462577e-01  1.886912e-01 -2.570208e-01 #> [6721]  7.364840e-01  1.202845e+00  3.913830e-01 -2.331595e+00  6.057492e-01 #> [6726]  1.247006e+00 -4.887858e-01  2.813674e+00 -5.795550e-01 -5.479849e-01 #> [6731] -5.687483e-01  6.961715e-01  1.040092e+00 -7.910137e-01 -7.195363e-01 #> [6736] -3.143113e-01  3.870817e-01  5.488765e-01 -1.943323e+00 -5.663429e-01 #> [6741] -2.021289e+00 -4.080894e-02 -2.128018e-01  1.108895e+00 -5.756238e-02 #> [6746]  7.395857e-01 -9.722920e-02  6.619805e-01  4.674379e-01 -2.395717e+00 #> [6751]  1.037270e+00  3.300884e-01  1.822635e+00 -8.444952e-01 -5.811197e-01 #> [6756] -1.581804e+00  4.410959e-01 -2.823749e+00 -5.226026e-01 -1.315373e+00 #> [6761] -5.148172e-01 -7.239108e-01 -4.503598e-01  1.322684e+00  7.022812e-01 #> [6766]  1.603944e+00  6.360039e-01 -2.547708e-01 -8.785133e-01  7.588032e-01 #> [6771] -1.675769e-01 -7.078933e-03  1.333029e+00  8.851288e-01  7.159339e-01 #> [6776]  1.051418e+00 -5.082209e-01 -1.714864e-01 -9.047404e-02  2.201849e+00 #> [6781] -9.475017e-01 -3.614817e-01 -8.285890e-01  2.759433e+00 -1.162915e+00 #> [6786] -3.174768e-01 -2.650701e-02  1.510803e-01 -6.082197e-01  4.212994e-01 #> [6791]  6.905653e-01  4.845218e-01  1.208080e+00 -1.389422e-01  1.700079e+00 #> [6796] -1.158602e+00 -1.903738e-02 -5.292334e-01  1.754525e-01  4.319089e-01 #> [6801]  6.313302e-01 -9.678568e-01 -7.242076e-01  2.038070e-01  5.108519e-01 #> [6806] -1.786090e+00  2.439674e-02  2.374255e+00 -6.312905e-01 -1.264299e-01 #> [6811] -3.758173e-02  1.417104e+00 -1.508676e-01  1.115536e+00  3.222809e-01 #> [6816]  1.479069e+00 -1.797787e+00 -5.566220e-01 -8.291720e-01 -1.578835e+00 #> [6821] -1.674257e-01  1.436288e+00 -1.257163e+00 -1.352912e+00 -1.435665e+00 #> [6826]  6.674674e-02 -4.820062e-01  1.236003e+00  6.823739e-01 -2.444459e-01 #> [6831]  2.151828e+00  1.819481e+00 -3.706225e-01 -1.303786e+00  6.142917e-01 #> [6836] -2.372192e-01  1.393187e+00 -7.716285e-01  1.447547e+00  1.014650e+00 #> [6841]  5.734338e-01 -7.965205e-01  6.188540e-02 -9.986283e-01 -8.390870e-01 #> [6846]  6.837447e-01  2.428635e-01  8.161290e-01  6.141642e-01  4.733687e-01 #> [6851]  1.124678e+00 -6.097285e-01 -8.362040e-02 -5.942262e-02  1.005361e+00 #> [6856]  9.777500e-01 -2.229059e+00  3.271761e-02  1.447851e+00  2.891384e-02 #> [6861] -6.657824e-01 -3.880702e-01  2.131176e+00  3.324728e-01 -1.540293e-01 #> [6866]  1.642527e+00  6.205306e-01 -2.663397e+00 -1.922308e+00  1.101570e-01 #> [6871]  9.366275e-01 -2.068270e-01 -8.834740e-01  1.211627e+00 -3.555210e-01 #> [6876]  1.506856e+00 -1.600688e+00  1.458704e+00 -8.734389e-01 -7.432184e-01 #> [6881] -1.173656e+00 -1.184543e+00  3.612637e-01  1.996922e-01 -5.286899e-01 #> [6886] -3.234860e-01 -5.467955e-01 -2.145197e+00  6.566008e-01 -1.917196e+00 #> [6891]  4.011846e-02  2.244872e-01  9.466540e-01  3.157868e-01  2.905155e-01 #> [6896]  2.757911e-01  2.112249e-02  1.975918e-01  4.257657e-01 -1.277083e+00 #> [6901]  2.353475e-01  1.287732e+00  3.607402e-01  9.281350e-01  3.786195e-02 #> [6906]  1.849771e-01 -3.400010e-01  4.580870e-01  2.959315e-01 -1.057399e+00 #> [6911]  3.874851e-01 -1.323071e+00 -1.502497e+00 -1.536963e-01  1.314794e+00 #> [6916] -1.016006e+00  5.198069e-01  9.984455e-01 -2.367949e-01 -5.793757e-01 #> [6921]  2.430161e-02  3.030145e-02 -1.425055e+00  3.132571e-01 -2.095581e+00 #> [6926] -3.689881e-01 -9.871181e-01  6.780682e-01 -1.953367e+00 -4.878769e-02 #> [6931] -9.658326e-01  8.786808e-01 -1.646530e+00 -1.516232e-01 -1.700527e-01 #> [6936]  1.631283e-01  2.468797e-01 -8.262942e-01 -6.603347e-01 -1.090227e+00 #> [6941] -5.015871e-01  2.084890e+00 -7.252617e-01 -8.829075e-01 -2.947762e+00 #> [6946] -1.656825e-01 -5.200001e-01  1.327325e+00  1.161404e-01  9.155480e-01 #> [6951]  9.299803e-01  2.678682e-01 -1.474872e-01 -6.549124e-02  5.769358e-01 #> [6956] -9.993783e-01  4.237876e-01 -7.630837e-02 -6.328423e-01 -2.193552e-01 #> [6961]  8.169748e-01 -7.138141e-01  5.942977e-01  1.792191e-01 -1.251857e+00 #> [6966] -6.785522e-01  1.256714e+00  9.328542e-01 -8.876299e-02  2.179407e+00 #> [6971] -1.433753e+00  4.071584e-01  1.828935e+00 -1.172489e+00 -6.316242e-01 #> [6976]  2.207370e-01 -2.858949e-01  6.753918e-01  7.671365e-02 -1.274062e+00 #> [6981] -2.147767e-01 -5.387450e-01  4.350272e-01 -5.352346e-01  7.823157e-01 #> [6986]  5.222848e-01  1.401397e+00 -8.158100e-01 -1.178583e+00  1.296753e+00 #> [6991] -3.642725e-01  1.400382e+00  7.389309e-01  1.536146e+00  6.330575e-01 #> [6996]  1.800446e+00  1.399168e+00  3.778217e-01  6.918664e-01  1.430259e+00 #> [7001]  4.411753e-01 -5.368017e-02 -4.333433e-01 -5.202502e-01  7.091997e-01 #> [7006] -6.464492e-02 -4.083382e-01 -1.182767e-01  1.651808e-01  1.394774e+00 #> [7011] -7.111876e-01  6.024467e-01  5.018830e-01  1.726947e+00  7.887292e-01 #> [7016]  9.790455e-02 -8.287847e-02  2.647338e-01  7.322848e-01 -1.075237e+00 #> [7021] -4.741003e-01 -2.008091e-01 -1.259152e+00 -5.034855e-01  1.088003e+00 #> [7026]  7.569506e-01 -4.068652e-01  7.962843e-01  7.272898e-02  8.587665e-01 #> [7031] -1.228207e+00  2.086597e-01  9.051969e-01  3.199306e-01  1.932373e-02 #> [7036]  7.706674e-01 -3.142102e-01  1.055071e-01 -8.952258e-01  1.689896e+00 #> [7041] -4.563934e-01  1.456018e-01 -1.255605e+00 -9.960531e-01 -1.131387e+00 #> [7046]  2.774028e-01  3.287748e-01  4.934107e-01 -2.089020e+00  1.227946e+00 #> [7051]  1.786122e+00  6.889471e-01  1.449095e+00  1.221474e+00  1.336219e+00 #> [7056]  1.855906e-02 -2.375061e-01  7.185709e-02  8.431976e-01 -4.840133e-02 #> [7061] -2.988946e-02  1.218414e-01  2.843896e-01  7.529910e-02 -3.443719e-01 #> [7066] -1.399311e-01 -1.255956e+00 -1.946732e+00 -1.367061e+00 -8.695209e-01 #> [7071] -2.096347e+00  1.397269e+00 -1.219304e+00 -1.375917e+00  1.259154e+00 #> [7076]  1.481938e-01 -1.259980e+00 -1.341605e+00 -1.079627e-01  1.282726e+00 #> [7081]  4.879000e-01 -5.796710e-01 -1.974275e+00 -1.280245e+00 -2.848004e-01 #> [7086]  7.636971e-01 -2.242979e+00 -1.995844e+00  3.801997e-01 -2.679837e-01 #> [7091] -8.293716e-01 -7.876328e-01  6.254352e-01  3.123195e-01 -9.827536e-01 #> [7096]  1.924295e+00  1.385802e+00  1.429296e+00 -8.518972e-01  4.925501e-01 #> [7101]  1.181990e+00  8.891197e-01  1.064228e+00 -6.477699e-01 -2.628382e+00 #> [7106] -9.493055e-02  9.343274e-01  2.934646e-01 -3.386843e-01  1.407758e+00 #> [7111]  2.233074e+00  3.536881e-01 -4.965487e-01 -4.552890e-03  1.244439e-01 #> [7116] -2.987514e-01 -6.516575e-01 -5.430953e-01  3.639276e-02 -3.587785e-01 #> [7121]  9.680236e-01  5.080865e-01 -4.123765e-01 -6.124857e-01 -9.722354e-01 #> [7126]  5.679438e-01 -1.070971e+00 -3.733080e-01 -7.153914e-01  7.112827e-01 #> [7131] -1.332238e-01 -1.028041e+00  3.497512e-03  6.157323e-01 -7.574087e-01 #> [7136] -4.099995e-01 -7.324499e-01  1.739487e+00 -5.128492e-02 -6.291338e-01 #> [7141] -6.380986e-01 -9.261977e-01  9.415258e-01 -1.270834e+00 -2.179969e-01 #> [7146] -2.202294e+00 -9.608749e-01  1.075985e+00  4.459360e-01 -3.436995e-01 #> [7151] -4.239180e-01  2.536268e-02  2.599625e-02 -2.994545e-02  3.108447e-01 #> [7156]  4.313414e-01 -3.128670e-01  1.406054e-01 -1.253927e+00  5.373817e-01 #> [7161]  5.070086e-01 -1.114635e+00  1.522947e-01  2.021261e+00  3.543392e-02 #> [7166]  3.800696e-01 -2.262219e-02  1.476005e-01  2.464667e+00  2.043804e-01 #> [7171] -4.344355e-01 -1.654697e+00 -7.992195e-01 -1.702867e-01  2.717297e+00 #> [7176] -1.102361e+00  6.112618e-01  5.727331e-01  3.926617e-01 -8.020967e-01 #> [7181]  1.497628e+00 -1.467658e+00  7.408700e-01 -1.179303e-01 -1.256035e+00 #> [7186]  1.128337e-01  4.459868e-01 -8.554059e-01  1.469502e+00  8.754538e-01 #> [7191] -8.509531e-01 -1.930114e-03  4.175962e-01  1.148126e+00 -5.369921e-01 #> [7196]  6.416007e-01  2.202115e-02 -9.596925e-01  6.622267e-01 -5.802546e-01 #> [7201] -3.354627e-01 -1.208264e+00 -2.756247e+00 -3.897591e-01 -1.370630e-01 #> [7206] -5.605497e-01 -3.179968e-01 -8.082395e-01 -1.180453e+00  3.995143e-01 #> [7211] -6.405902e-01  8.689590e-01  1.265848e+00 -7.676647e-01  6.640505e-01 #> [7216]  8.767200e-01 -3.097211e-02  1.404361e+00 -1.376746e-01  7.271818e-01 #> [7221] -8.393642e-01  5.935255e-01  1.130341e+00  8.203040e-01  5.112363e-01 #> [7226]  1.640932e-01 -7.748864e-01 -2.581108e+00 -7.718382e-01 -7.097140e-02 #> [7231] -7.129709e-01 -6.523260e-01  9.807232e-01  8.211718e-01  4.102095e-01 #> [7236]  2.503691e+00  1.448911e+00 -1.411369e-01  1.446721e+00 -1.671426e+00 #> [7241]  1.033993e+00  7.606505e-01 -6.008770e-01 -1.321319e+00 -8.455410e-01 #> [7246] -4.451570e-01 -8.374418e-01 -2.025597e-01  3.775771e-01 -1.118025e-01 #> [7251] -1.677496e-02  1.147479e+00 -4.456829e-01 -8.096935e-02  1.149765e+00 #> [7256]  2.799260e+00  3.066919e-01 -1.136409e+00 -1.108524e+00  2.405343e-01 #> [7261] -9.508999e-02 -1.877997e-01  1.346565e+00  3.882104e-01  5.018344e-01 #> [7266] -4.333036e-01 -8.911395e-01  1.567647e+00  2.419094e+00  7.592773e-01 #> [7271] -8.498817e-01  4.297659e-01  9.796464e-01  8.300279e-01  3.495370e-01 #> [7276] -4.272454e-01  1.554456e+00 -5.424422e-01  1.038402e+00  4.325051e-01 #> [7281]  1.499371e+00  1.120396e+00 -1.331095e-01 -3.592734e-01  7.723097e-01 #> [7286]  1.242348e+00  6.663059e-01 -9.161889e-01 -2.243742e-01 -9.170502e-01 #> [7291] -7.260851e-01  8.107254e-02 -1.212180e+00 -8.245267e-01 -7.817941e-01 #> [7296] -9.238522e-01  9.595228e-01 -1.119596e+00  1.087035e-01  1.520302e+00 #> [7301]  2.014646e-01  7.967726e-01  8.493639e-01 -3.189009e-01  8.087052e-01 #> [7306]  1.550453e+00 -7.534391e-02 -1.503151e+00  5.565561e-02  1.334515e+00 #> [7311] -2.557687e+00 -2.828170e-01 -7.302124e-02  2.073863e+00  1.089167e+00 #> [7316]  2.888839e-01 -9.161112e-01  1.191556e+00  1.229628e+00 -3.204523e-01 #> [7321] -1.062758e+00 -9.050421e-01  4.803427e-01  1.442594e+00 -9.528734e-01 #> [7326]  1.821879e-01  1.332854e+00  5.517560e-01  4.878252e-01 -5.771691e-01 #> [7331]  7.417762e-01  1.521154e-02  6.854974e-01  1.213584e-01 -1.334770e-02 #> [7336] -1.007845e-01 -1.669030e+00  5.688135e-01 -1.334167e+00  9.834170e-02 #> [7341] -1.127608e+00  1.243683e-01 -9.908493e-01  1.722676e-01  2.681108e+00 #> [7346] -1.088684e+00 -2.763636e+00  1.319475e+00  9.857156e-01  8.428488e-01 #> [7351]  1.900958e+00 -2.409443e-01  2.061953e+00  5.310541e-01 -1.564747e+00 #> [7356] -6.852863e-01  9.858769e-01  1.205714e+00  6.670097e-02 -1.599658e-02 #> [7361] -1.725643e+00  7.018563e-01 -1.351401e+00  4.108634e-01 -5.590264e-01 #> [7366]  1.154587e+00 -2.309350e-01 -1.225852e+00 -2.588794e-01  1.178227e-01 #> [7371] -7.840685e-02 -1.206320e+00  1.331609e+00 -2.128246e-01 -1.839984e+00 #> [7376]  8.049477e-01  5.497312e-01 -5.097462e-02 -2.642911e-01 -5.264076e-01 #> [7381] -1.739816e+00  3.423797e-01 -1.171467e+00  1.617103e+00 -1.144087e+00 #> [7386] -9.117023e-01  1.699365e-01 -1.238241e+00 -2.797392e+00 -4.627196e-02 #> [7391]  3.221030e-01  4.699610e-01 -1.813944e+00  2.969290e+00  1.357178e+00 #> [7396] -1.062822e-01 -6.755841e-01 -1.652296e+00  2.580411e-01 -1.035997e+00 #> [7401]  1.597051e+00 -1.385864e-01  1.801791e+00  7.329057e-03  1.591669e-01 #> [7406] -3.941932e-01 -7.502864e-01 -9.678553e-05 -6.162014e-01 -1.933435e-01 #> [7411] -4.184349e-01 -1.153524e+00 -8.624874e-01  2.867271e-01  8.431031e-01 #> [7416]  2.715612e-01 -3.623264e-01 -2.053172e-01 -8.229701e-01 -4.796395e-01 #> [7421]  6.087366e-02 -9.906566e-01 -1.090010e-01  5.079949e-01 -1.240113e+00 #> [7426] -4.100655e-01 -2.913123e+00 -4.636852e-01  5.953966e-01 -3.698354e-03 #> [7431]  1.107086e+00 -4.108613e-01  5.676295e-02 -2.846472e+00 -1.024190e+00 #> [7436]  6.372696e-01  7.925888e-01  5.751939e-01  1.152838e+00  2.820530e-01 #> [7441] -6.150469e-01  7.415662e-01 -1.313521e+00 -7.810319e-01  3.030001e-01 #> [7446] -1.272219e+00 -1.701582e-01  1.748512e-01 -1.970261e-01  1.578778e+00 #> [7451] -1.515992e+00 -5.848007e-01  9.792175e-01  6.046142e-01  1.229837e+00 #> [7456] -9.643912e-02 -8.643654e-01 -8.494373e-01 -3.656899e-01  1.071033e+00 #> [7461]  1.102186e+00 -2.002147e+00 -3.462991e-02 -1.307175e+00  5.772341e-01 #> [7466]  8.372707e-02 -1.264287e+00 -3.140557e-01 -5.977828e-01  4.440157e-01 #> [7471] -5.587854e-01 -1.017395e+00 -4.120870e-01  4.831426e-01  3.686836e-01 #> [7476] -1.738576e-01  3.703590e-01  1.365095e+00  1.336806e+00 -9.156150e-01 #> [7481]  2.069913e+00 -1.083201e+00 -1.655635e+00 -1.268980e+00 -2.505717e+00 #> [7486] -1.320809e+00 -6.534147e-01  6.574994e-02  1.822936e+00  2.139058e-01 #> [7491] -1.323212e+00 -9.992812e-01  3.780635e-02 -4.797747e-03 -1.473023e+00 #> [7496]  1.352630e+00  9.380154e-01 -4.277240e-01 -6.046602e-01  8.351575e-01 #> [7501] -1.253714e-01 -7.602589e-01 -3.018613e-01 -9.108343e-01  9.461621e-01 #> [7506] -5.169991e-01 -1.306272e+00 -2.199678e+00  1.335384e+00  3.826691e-01 #> [7511]  1.776243e+00 -2.423243e+00 -1.877466e+00  1.590864e+00 -1.711495e+00 #> [7516] -1.356682e-01 -4.414049e-01 -5.015079e-02  6.290962e-01 -8.283942e-01 #> [7521]  4.388566e-01  5.274101e-01  1.113165e+00  5.509624e-01  1.001769e+00 #> [7526] -1.280069e+00 -3.545090e-01  3.433994e-01 -1.474172e-01  5.979879e-01 #> [7531] -1.982607e-01  1.248235e+00  1.565167e-01  1.183112e-03  4.879636e-01 #> [7536] -9.423195e-01 -2.026146e+00  2.054349e+00 -7.776600e-01  4.131946e-01 #> [7541] -1.367211e+00  1.730859e+00  5.173698e-01 -3.496911e-01 -4.670547e-01 #> [7546]  1.120064e+00  2.785674e-02  3.602919e-01 -2.017178e-01 -7.533267e-01 #> [7551] -9.294280e-01 -1.860719e+00  1.783484e+00 -1.113126e+00  1.423692e-01 #> [7556]  4.228785e-01 -9.499105e-01 -5.461244e-01 -1.396312e+00 -1.108296e+00 #> [7561] -5.742200e-01  1.565438e+00 -1.744335e+00  4.114639e-01 -3.187408e+00 #> [7566] -2.851390e+00  7.426426e-01  1.624680e+00 -2.213469e-01  1.025437e-01 #> [7571] -1.019832e-01 -2.742986e+00  2.364717e-01  2.637821e-01  1.711175e+00 #> [7576] -8.518464e-01  8.868587e-01  1.196069e-01  9.977277e-01  3.476808e-01 #> [7581] -4.687838e-01 -3.935040e-01  2.430383e-01  3.604109e-02  4.959407e-01 #> [7586]  8.963453e-01  1.174119e+00  2.827463e-01  6.371033e-01 -1.228227e+00 #> [7591] -7.612489e-01  1.363891e+00 -9.817711e-01  1.162837e+00 -1.230906e+00 #> [7596] -3.293847e+00 -7.579663e-01 -7.461226e-01  1.013949e+00  8.874362e-01 #> [7601] -3.392312e-01  5.920049e-01 -1.881891e+00  1.332555e+00  5.941049e-01 #> [7606] -3.574811e-01  1.159810e+00  1.127133e+00  2.228912e+00 -6.324989e-02 #> [7611]  1.858140e+00  4.736248e-01 -8.980667e-01  1.059891e+00  1.210149e+00 #> [7616]  1.444806e+00  8.437766e-01  1.854531e+00 -8.171617e-01 -7.176086e-01 #> [7621] -7.225993e-02 -6.065070e-01 -1.571933e+00 -1.936987e-01 -1.027269e+00 #> [7626] -1.566364e+00  7.285854e-01 -8.782717e-02  5.315229e-01  1.122228e+00 #> [7631]  1.900138e+00  2.034114e+00  8.818234e-01 -3.294000e-01  5.038407e-01 #> [7636] -2.246271e+00  2.552236e-01  2.145353e+00  2.547721e+00 -2.285369e+00 #> [7641] -1.337711e+00  3.297511e-01 -6.650040e-02  6.132536e-01 -2.630285e+00 #> [7646]  2.804104e-01 -1.799200e+00 -6.136734e-01 -7.672231e-01  1.713906e-01 #> [7651] -3.646656e-02 -7.507159e-01 -2.339060e-01 -5.346142e-01  7.621212e-01 #> [7656]  1.236345e+00  1.233664e+00  8.704676e-01 -1.157956e+00 -1.522931e-01 #> [7661]  1.745872e+00  9.413887e-02 -1.153555e+00  4.465354e-01 -1.150928e-01 #> [7666]  6.951847e-02  5.636670e-01  1.255579e+00 -3.591368e-01 -2.394097e+00 #> [7671]  1.052708e+00  8.168392e-01 -1.711676e+00  1.538519e-01 -1.507868e-01 #> [7676] -1.519445e-01  6.595428e-01  4.255390e-01 -2.968500e-01  1.185771e-01 #> [7681]  3.127848e-01 -1.799407e+00  1.318684e+00 -8.166050e-01 -2.458038e-01 #> [7686] -9.536012e-01  1.124750e-01 -2.234707e-01 -2.434224e-01  1.906424e-01 #> [7691] -1.869060e+00  2.039348e-01 -1.203484e+00 -3.083338e-01  1.768664e-01 #> [7696] -1.368899e-01 -8.461329e-01 -7.181916e-01 -1.555044e+00  3.051717e-01 #> [7701] -4.182734e-01 -1.752962e-01 -2.375266e-01 -6.666333e-01  6.287992e-01 #> [7706] -5.360195e-01  1.085047e+00  5.372812e-01 -1.934965e-01 -1.041049e+00 #> [7711] -8.822372e-02 -1.070461e+00  1.814477e+00  1.402929e+00 -1.768885e+00 #> [7716]  1.091822e+00 -3.026169e-01  1.174160e+00  6.370950e-01 -1.256356e+00 #> [7721] -1.774019e-01  3.625446e-01 -4.060325e-01 -3.300281e-03  2.635836e+00 #> [7726] -3.737925e-01  2.874199e-01 -3.496679e-02  1.536339e+00 -9.129461e-01 #> [7731]  1.257911e-01 -8.418276e-01 -1.027018e+00 -2.933266e-02 -4.688974e-01 #> [7736] -1.614943e+00 -2.384490e+00  9.483676e-01 -3.699689e-01 -1.094367e+00 #> [7741]  1.210725e+00 -5.958914e-01 -1.458790e+00  1.629795e-01  9.664777e-01 #> [7746]  3.131196e-02 -2.814950e+00  2.126827e-01 -3.133994e-01 -6.467745e-01 #> [7751]  1.000879e+00 -8.276673e-01 -6.287301e-01 -1.268076e+00  6.817494e-01 #> [7756] -3.810936e-01  1.854173e+00  2.171790e-01  9.365231e-02  4.933342e-01 #> [7761] -1.134888e+00  5.844374e-01 -1.288896e+00 -5.916430e-02  4.062805e-01 #> [7766]  2.320748e-02 -1.965857e-01  1.179564e+00  6.545637e-01 -2.952919e-01 #> [7771]  1.433373e+00  5.354102e-01 -8.405394e-01  1.714083e+00 -1.070802e+00 #> [7776]  7.094706e-01  9.501267e-01  5.788772e-01 -2.201427e+00  7.754107e-01 #> [7781] -8.395501e-01  1.719642e+00 -5.439515e-01 -1.559678e-01 -5.294391e-01 #> [7786]  1.828622e+00 -1.274739e+00 -9.659215e-01 -4.264001e-01 -1.418387e+00 #> [7791] -4.154130e-01 -5.532079e-01  2.900878e-01 -1.002691e+00 -1.133508e+00 #> [7796] -1.016863e+00  2.184931e-01 -1.350079e+00  1.062849e+00  5.177161e-01 #> [7801] -7.493297e-01  5.967552e-01 -9.545466e-01  9.166093e-02  8.069480e-01 #> [7806]  2.549720e+00  1.472194e+00 -4.060383e-01  1.513645e+00  2.885110e+00 #> [7811] -1.339221e+00 -1.929373e-01  1.067245e+00 -4.811489e-01  2.837333e-01 #> [7816]  1.652797e+00 -3.278271e-01  1.109149e+00 -3.207053e-01 -6.491562e-01 #> [7821]  1.678176e+00  1.004283e+00  1.663375e-01 -7.689165e-01 -7.366969e-01 #> [7826]  5.167541e-01  9.007315e-01 -2.144617e-01 -7.486109e-01 -7.103389e-01 #> [7831] -1.081101e-01  4.071928e-01  6.139870e-01  2.248233e-01 -1.155688e-01 #> [7836]  9.007562e-01 -1.143230e+00 -9.626796e-02  1.908490e-01  8.252596e-01 #> [7841]  3.162795e-01  7.286135e-01  8.755580e-01 -1.971013e-01  7.709049e-01 #> [7846]  1.195515e+00 -5.435751e-01 -5.615372e-01  1.054669e+00 -2.478276e+00 #> [7851] -7.251925e-01 -4.082880e-01  3.166225e-01 -1.209713e+00 -1.379131e+00 #> [7856]  1.863395e-01 -1.369950e-01  5.182647e-01  4.260275e-01 -4.455709e-01 #> [7861] -9.223572e-01  2.481362e-01  3.241768e-01  9.379861e-01 -6.043424e-01 #> [7866]  1.768431e+00  1.608761e-01 -9.785186e-02  5.521020e-02 -8.502679e-01 #> [7871]  1.110869e+00 -1.619389e+00 -1.051537e+00 -7.963255e-01 -5.732660e-01 #> [7876]  1.699848e+00 -7.778625e-01  7.587801e-01  1.177680e+00  1.740185e+00 #> [7881]  1.129546e+00  1.105047e-02 -8.233315e-01 -1.010822e+00  1.592822e+00 #> [7886] -1.054756e+00  1.051390e+00 -1.591034e+00  1.748992e+00 -4.419885e-01 #> [7891]  1.000976e+00  7.308140e-01  1.809617e+00 -8.501255e-01 -1.897639e-01 #> [7896]  3.223089e-01  9.399940e-01  5.422227e-01  1.129880e+00 -2.232073e+00 #> [7901]  2.448964e-01  1.387064e+00 -6.659399e-01 -4.032931e-01 -6.068721e-01 #> [7906] -3.500848e-01 -1.458975e+00 -5.200169e-01 -1.242952e+00 -1.703361e+00 #> [7911] -6.015621e-01 -2.155122e+00  5.949037e-01 -1.990012e+00  5.439104e-01 #> [7916]  2.967698e-01 -3.460082e-02 -6.143554e-01  3.562234e-02 -3.834297e-01 #> [7921] -1.706370e+00 -3.063883e-01 -6.917203e-02 -5.041666e-02  8.630452e-02 #> [7926]  2.918645e-01 -7.632353e-02  1.531045e+00 -8.503089e-01  1.319817e+00 #> [7931] -7.102214e-01 -2.195451e-01 -1.534815e-01 -5.107728e-01 -5.187372e-02 #> [7936] -1.843863e+00 -2.987667e-01  1.508533e+00  8.211119e-01  1.478553e+00 #> [7941]  3.536913e-01  1.212035e+00  1.725738e+00  6.550943e-01  2.006084e+00 #> [7946] -8.431581e-02 -4.498575e-01  9.412945e-01  1.718772e+00  1.352724e-01 #> [7951] -8.524995e-01 -9.498298e-02  2.050549e+00 -1.037419e+00  2.883873e+00 #> [7956] -3.874590e-01 -1.598297e+00  4.737438e-01  1.526886e+00 -1.042418e+00 #> [7961] -5.581050e-01  2.943650e-01 -3.066828e-01  2.543438e-01  9.252376e-01 #> [7966]  4.997735e-02 -8.441955e-02 -5.854040e-02 -2.095190e+00  5.242866e-03 #> [7971]  3.124749e-01 -2.096271e-01 -8.735689e-01 -1.280628e+00  2.491492e-01 #> [7976] -6.927135e-01  9.212890e-02 -1.150589e+00 -4.145695e-01 -1.053805e+00 #> [7981] -1.302680e+00  1.824375e-01 -1.315052e+00 -8.019216e-01  4.302493e-01 #> [7986]  1.709357e-02 -1.420252e+00  8.117688e-01 -5.260915e-01  7.041385e-01 #> [7991] -1.685386e+00  3.737718e-01  1.111876e+00 -1.328033e+00 -1.132090e+00 #> [7996]  1.312744e+00 -5.053030e-02  6.407827e-01 -2.986243e+00 -2.309570e-01 #> [8001]  1.004155e+00  1.384335e-01  1.174299e+00  9.543875e-01  2.268626e+00 #> [8006]  4.389379e-02 -9.062959e-01  1.712789e-01 -1.701603e+00  1.437200e+00 #> [8011] -1.131948e+00  4.279696e-01 -1.997697e+00 -1.125074e-01 -1.591889e-01 #> [8016]  1.228424e-01 -2.388655e-02  4.138629e-01  3.589473e-01  4.892941e-01 #> [8021]  1.055168e+00  9.053447e-01 -8.266783e-01  5.785749e-01 -1.768261e-01 #> [8026]  1.178054e+00 -2.093772e-01 -1.276519e+00  1.486032e+00  1.124460e+00 #> [8031]  1.491463e-02  1.031845e+00 -4.196836e-01 -1.077532e+00  1.465954e+00 #> [8036]  7.293967e-01  3.240861e-02 -4.439518e-01  9.629811e-01 -2.314851e+00 #> [8041] -4.375494e-01 -3.931761e-01  8.815056e-02 -2.628946e+00  3.711954e-02 #> [8046] -2.130110e+00 -1.766012e+00  1.401749e+00 -8.519983e-01  1.483260e+00 #> [8051]  3.964818e-01 -7.247041e-01  1.960061e-01 -1.345228e+00  1.003992e+00 #> [8056]  5.238752e-01  6.281577e-02  1.532009e-02 -6.706031e-01 -6.751597e-01 #> [8061]  2.464153e-01 -5.384047e-01 -8.531760e-01  6.533057e-01  8.513675e-02 #> [8066] -7.473301e-01  6.093707e-01 -9.055996e-01 -1.598114e+00 -2.957853e-01 #> [8071]  4.597015e-01 -1.621918e-01  3.269686e-01 -9.881199e-01 -4.811441e-01 #> [8076] -1.881275e+00 -5.278383e-01 -1.626893e-01 -6.659264e-01 -1.337687e-01 #> [8081] -2.435103e+00  1.053844e+00 -3.115726e-01 -1.145313e+00 -1.808749e+00 #> [8086]  4.798150e-01 -1.431007e+00  1.692580e+00  3.541828e-01  5.400608e-01 #> [8091]  9.122133e-01  1.074667e+00  2.668735e-01 -1.696679e+00  6.771520e-01 #> [8096] -6.146103e-01 -1.245073e-01  7.718993e-01  1.409022e+00 -1.754307e-01 #> [8101] -1.060999e+00 -7.957819e-01 -2.780967e-01 -8.567867e-01  1.745590e-01 #> [8106]  4.765145e-01 -9.866587e-01 -7.409025e-01 -2.980180e+00 -3.747391e-01 #> [8111]  1.948833e-01 -9.652517e-01 -1.821907e+00  1.216675e+00  1.289472e-01 #> [8116] -1.061549e+00  1.515173e+00  1.118208e+00 -9.695662e-02  1.074361e+00 #> [8121] -1.991771e-01  5.755981e-01 -2.329513e+00  2.774349e-01 -3.881619e-01 #> [8126] -3.212992e-01 -2.143643e+00  1.042285e+00 -3.456104e-01 -3.599035e-01 #> [8131] -1.777816e+00  1.222134e+00  2.323162e-01 -2.815072e-01  5.859679e-01 #> [8136] -8.150989e-01  4.436066e-01 -1.030803e+00 -4.465689e-01 -5.002968e-01 #> [8141]  1.461227e+00  3.213718e+00 -5.201614e-01 -1.757164e-01  1.127388e+00 #> [8146]  2.644723e-01  1.034132e+00  6.365588e-01  1.351839e+00  1.159461e+00 #> [8151]  1.801334e+00  2.037294e-01  8.951343e-01  6.641185e-01  5.390279e-01 #> [8156]  9.200197e-01  8.422200e-01  5.473162e-01  3.760929e-01  7.694627e-01 #> [8161]  1.566355e+00  9.956507e-01  1.482333e+00  1.345038e+00  1.982337e+00 #> [8166] -6.108437e-01 -2.571910e-01  2.277589e-02  6.332697e-01  1.560516e+00 #> [8171]  7.872573e-02 -1.585114e+00 -8.564831e-01 -1.319830e+00  3.012119e-01 #> [8176] -1.568203e-01  9.753470e-01 -1.321101e+00  2.912995e-01  1.255362e+00 #> [8181] -6.062131e-01  1.264776e+00 -8.492704e-01 -2.248455e+00 -1.888076e+00 #> [8186] -2.161723e+00 -1.798516e+00  1.212376e+00 -1.115994e+00 -3.857561e-01 #> [8191] -2.103374e-01  5.161345e-01 -1.438253e-01 -6.345259e-01  1.023440e-01 #> [8196]  1.260766e+00 -1.093944e+00 -1.598220e-01  1.519892e+00  5.092801e-01 #> [8201] -1.081844e+00 -2.297179e+00 -7.727658e-01  1.462608e+00 -4.078129e-01 #> [8206]  8.401784e-01 -7.441953e-01  1.128979e-01 -3.362141e-01  7.244300e-01 #> [8211] -1.051081e+00 -1.486236e-01  1.965700e+00 -1.388369e+00 -6.276669e-01 #> [8216]  9.253372e-01  1.897667e+00  2.067764e+00 -1.393655e+00  4.043348e-01 #> [8221]  8.394465e-01  5.676284e-01  1.052724e+00 -2.578880e-01  9.577522e-01 #> [8226] -3.423868e-01 -5.658809e-01 -8.225428e-01  4.398635e-01  7.648231e-01 #> [8231] -2.091442e+00 -3.189901e-02 -1.883039e-01  7.751639e-01 -1.504784e-01 #> [8236]  1.500557e+00  2.908867e-01 -8.927595e-02 -1.676057e-01  1.477801e+00 #> [8241]  4.635418e-01 -1.707188e+00  1.756488e+00 -4.222746e-01 -5.339683e-01 #> [8246] -5.795040e-01  2.511301e-01 -7.514528e-01  2.194230e+00  2.211524e-01 #> [8251]  3.782475e-01 -5.022245e-01  1.375187e+00 -1.540936e+00 -7.245527e-01 #> [8256]  2.207618e-01  1.957576e+00  3.351141e-01  3.767976e-01 -1.042905e+00 #> [8261]  5.036649e-02 -1.784366e+00  5.822498e-01 -1.885771e+00 -6.438362e-02 #> [8266]  4.201288e-01 -8.376938e-01 -3.860256e-01  1.021117e+00 -7.332833e-01 #> [8271] -2.113707e+00  1.998409e-02  2.545329e-01 -9.411157e-01 -4.047296e-01 #> [8276]  1.145482e+00  5.745621e-01 -1.197964e+00  4.543110e-01  2.314116e+00 #> [8281] -7.444435e-01 -1.349684e+00 -7.767140e-01  1.219271e-01 -5.121830e-01 #> [8286]  1.405216e+00  8.188877e-01 -4.182087e-01  1.784040e+00  2.738460e-01 #> [8291] -1.889389e+00  3.845421e-01  3.203548e-02  8.950302e-01 -1.477738e+00 #> [8296]  5.655030e-01  1.653774e-01 -4.374985e-01  1.545722e-01 -1.694684e+00 #> [8301]  1.566424e-01 -1.670097e+00  1.326079e+00 -5.896426e-01 -1.062529e-01 #> [8306] -9.781309e-01  2.528518e-01  1.355200e-01 -9.635366e-01 -1.917894e+00 #> [8311] -1.195474e+00 -4.813145e-01 -7.725695e-01 -5.250093e-01  1.354406e+00 #> [8316] -8.725293e-01 -5.759032e-01  1.417602e+00  5.923396e-01 -1.766850e+00 #> [8321]  9.161128e-01  5.502020e-01 -7.677473e-01 -1.111853e+00 -5.197884e-01 #> [8326]  3.394058e-01  6.874005e-01 -1.436267e+00  8.302744e-01  4.658820e-02 #> [8331]  6.016302e-01 -2.899974e-02 -1.898808e+00  5.476134e-01  1.327004e-01 #> [8336] -7.548229e-01 -3.844116e-03 -2.997116e+00  5.327990e-01  1.753972e+00 #> [8341] -3.951543e-01 -1.068949e+00  1.685062e+00 -1.006007e+00 -1.503291e+00 #> [8346]  5.188365e-01  1.336918e+00  1.599484e+00  1.835066e+00 -1.135024e+00 #> [8351]  1.418963e+00 -1.036078e+00  3.907444e-01 -3.076264e-01  5.141618e-02 #> [8356] -1.510694e+00  1.277183e+00  1.015311e+00  9.275223e-01  4.452846e-01 #> [8361] -5.263096e-01  3.018409e-01 -3.148096e-01  1.987641e+00 -1.645207e+00 #> [8366]  1.955259e-01  7.439566e-01 -1.309423e+00  9.805900e-01  4.277635e-01 #> [8371] -1.143545e+00  8.771857e-01  1.063867e+00 -1.387071e+00 -1.950874e+00 #> [8376] -7.467825e-02 -9.831283e-01  6.914969e-01  1.001685e+00 -7.474341e-01 #> [8381] -1.031216e-01 -3.571599e-01 -1.693131e-01 -6.203877e-01 -9.374250e-01 #> [8386]  1.226495e+00  2.984095e-01  1.754825e+00  1.121360e+00  6.461332e-01 #> [8391]  1.137980e+00 -1.245798e+00 -1.215562e+00 -1.752177e+00  1.179375e-01 #> [8396]  1.622401e+00 -1.008464e-01 -5.754109e-02  8.686746e-01 -1.231735e+00 #> [8401] -2.637557e-01 -1.943118e+00 -3.678545e-01  8.227162e-01  1.396259e+00 #> [8406]  1.615338e-01  4.917675e-01  2.544387e-01  1.020165e+00  8.491689e-01 #> [8411] -1.514601e-01 -6.195600e-02 -1.683284e+00 -7.588074e-01  1.359604e+00 #> [8416] -5.576685e-02  7.708479e-02  1.086199e+00 -9.432283e-01 -1.054861e+00 #> [8421]  1.054613e+00  1.140445e+00  2.668591e+00  8.948655e-01  1.044827e+00 #> [8426] -1.047959e+00  4.157144e-01  1.549874e+00  2.538333e-01 -6.963749e-02 #> [8431]  1.144677e+00  2.095677e-01 -1.123529e+00  1.697048e+00 -9.266429e-01 #> [8436]  1.762029e+00 -2.163379e+00  4.474027e-01  2.397654e+00  8.109969e-02 #> [8441] -1.854731e+00  6.519903e-01  6.349158e-01 -7.905427e-01 -8.792778e-01 #> [8446]  6.506964e-02 -2.621459e+00  1.032384e-01 -3.892547e-02 -6.762022e-01 #> [8451] -6.637218e-01  1.338568e+00  1.424246e+00  1.693062e+00  8.996227e-01 #> [8456] -7.176961e-01 -1.795200e-01 -8.293753e-01  1.866924e+00  1.281813e+00 #> [8461]  6.217499e-01  8.858310e-02  5.818430e-01  7.363489e-01 -1.454744e+00 #> [8466] -9.986106e-01  1.197749e+00 -8.885836e-01 -1.367378e+00 -5.480589e-01 #> [8471] -1.712178e-01 -4.077386e-01 -1.565161e-01  3.513146e-01 -8.813943e-01 #> [8476]  9.288390e-02  1.246504e+00 -1.216880e+00  1.675184e+00 -4.049863e-01 #> [8481]  1.196995e+00 -1.350177e+00 -1.031632e+00 -9.657942e-01  1.903472e-01 #> [8486] -1.810095e+00 -1.188259e+00 -1.009404e-01  8.140510e-01 -2.664361e-01 #> [8491] -5.069757e-01 -1.197046e+00 -9.856781e-02  1.231967e+00  7.757026e-01 #> [8496] -4.830606e-02 -5.341848e-01 -1.445357e-01  8.487905e-01  9.516454e-01 #> [8501] -8.580125e-01 -6.899208e-01  8.356200e-01 -1.340118e+00  2.015017e-02 #> [8506]  6.945818e-01 -4.369204e-01 -5.507942e-01 -2.319972e-01 -6.831958e-01 #> [8511] -1.822765e+00 -9.485636e-02 -1.601892e+00  1.884048e+00  4.540561e-01 #> [8516] -3.507201e-01  1.015933e+00 -5.490449e-01 -1.883805e+00 -3.310650e-01 #> [8521]  1.283807e+00 -7.966190e-01 -1.218992e+00  2.867590e-02 -4.046891e-01 #> [8526]  4.458736e-02  5.186380e-01 -1.046230e+00 -4.020033e-01  1.092898e-01 #> [8531]  2.108663e+00 -1.334849e+00 -1.159473e+00 -7.717764e-01  7.027340e-01 #> [8536] -4.593063e-01  2.220785e+00  1.863850e+00 -1.471846e-01  4.280895e-01 #> [8541] -4.702666e-01 -3.307017e-01  4.294420e-01 -2.273997e-01 -2.184663e-01 #> [8546]  1.798256e-01 -4.522075e-01  4.870493e-01 -1.046874e-01 -8.933818e-01 #> [8551]  2.173104e-01  3.192229e-01  2.720804e+00  7.657807e-01 -4.855199e-02 #> [8556]  3.795489e-01 -1.454125e-01 -1.541847e-02 -1.913185e+00  1.140589e-01 #> [8561]  4.647183e-01  2.560034e-01  1.812956e-01  2.041558e+00  1.411927e-01 #> [8566] -2.218274e-01 -8.169438e-02  1.498823e+00  2.344904e+00 -9.870439e-02 #> [8571] -1.562818e+00  2.443343e-01 -1.459180e+00 -8.805912e-01 -5.149420e-01 #> [8576] -2.055561e-01 -3.251514e-01  1.075859e-01 -2.951710e-01  3.468029e-01 #> [8581]  1.446003e+00 -3.145864e-04 -1.903062e-01 -1.142409e-01 -1.816538e-01 #> [8586]  7.632114e-01 -4.845818e-01 -3.371695e-01  1.880715e+00 -1.343957e+00 #> [8591] -4.096395e-01 -8.220668e-01 -4.957890e-02 -1.988437e+00  1.114837e-01 #> [8596] -1.426543e+00  1.763459e+00 -1.843243e-01  2.778828e-01  3.910876e-02 #> [8601] -7.435317e-01 -1.019340e+00  1.579547e+00  2.825922e-01  2.401849e-01 #> [8606] -1.634904e+00 -8.014363e-02  1.142593e+00 -2.262955e+00 -2.648484e-01 #> [8611] -6.833630e-01  6.497558e-01 -6.580398e-02  4.596001e-01  5.159158e-02 #> [8616] -2.450488e-01 -1.415473e-01  6.814741e-01 -5.071152e-01  1.305957e-01 #> [8621]  1.174705e+00  5.900411e-01  8.292201e-01  1.823851e-01 -2.120935e-02 #> [8626] -8.214920e-01 -5.268615e-01 -1.473977e+00  7.829549e-02 -1.673017e-01 #> [8631]  4.958706e-01  1.864240e+00 -3.315235e-01  1.864288e+00  2.017134e+00 #> [8636]  3.234124e-01 -9.321109e-01  1.687995e+00  1.292774e-01 -6.196897e-01 #> [8641]  3.193588e-01  2.477288e-01  1.298286e-01  1.277137e+00  1.894543e-01 #> [8646]  4.829647e-02  1.314730e-01 -5.436887e-01 -9.359524e-01  4.477736e-01 #> [8651]  1.261159e+00 -1.873247e+00 -1.838690e-01 -1.161153e+00  8.643495e-01 #> [8656]  7.546005e-01 -2.339839e+00 -4.724532e-01 -2.155297e-01  1.422854e-01 #> [8661]  9.414634e-01 -6.084520e-01  1.656146e+00  4.675382e-01  1.008816e+00 #> [8666]  1.036285e+00 -2.263206e-01  1.761577e+00 -1.403411e+00 -4.094161e-01 #> [8671] -1.308419e+00 -3.741635e-01 -6.487068e-01 -2.955323e-01  2.175884e-01 #> [8676] -8.633570e-01  9.867953e-02  2.722181e+00  5.104778e-01  2.077932e+00 #> [8681] -3.059409e-01  3.185458e-01  5.407787e-01 -1.332808e-01 -9.735739e-01 #> [8686] -1.169204e+00 -6.338322e-01  9.645181e-01 -1.682483e+00 -9.604515e-01 #> [8691] -2.210531e+00 -3.327991e-01  2.641205e-01  4.737093e-01  2.599859e-01 #> [8696] -3.694245e-01 -3.555443e-01  3.752707e-01 -5.911739e-01 -7.548495e-01 #> [8701] -9.038085e-01 -1.864254e+00 -9.566154e-01  1.290574e-01 -6.750820e-01 #> [8706] -4.665657e-01  1.604967e+00  5.803401e-01 -1.605224e+00 -1.167602e+00 #> [8711] -7.609992e-01  4.058715e-01  1.163758e+00  6.930013e-01  6.898838e-01 #> [8716]  4.804117e-01  4.594406e-01 -1.100768e+00  1.251706e-02  1.519651e+00 #> [8721]  1.173645e+00  5.331837e-02  6.103601e-01 -1.109398e+00 -1.794013e-01 #> [8726]  2.401507e-01  5.843470e-01  1.324271e-01 -6.597964e-01 -9.975686e-01 #> [8731]  2.632384e-01  2.435070e-01  3.034075e-02  1.271453e+00  2.857955e-01 #> [8736] -2.881276e-01  1.357872e+00 -4.989300e-01  4.400190e-01  1.470164e+00 #> [8741]  1.246531e+00 -3.249304e-01 -1.514458e+00  1.749243e+00 -7.675893e-01 #> [8746] -6.835142e-01  6.256273e-01 -1.783667e+00  1.722628e+00  1.166769e+00 #> [8751]  1.670843e+00  1.598345e+00 -3.299829e-01  5.423190e-01  1.042631e-01 #> [8756] -3.980852e-01  1.643355e+00 -2.734650e+00  5.869746e-01  1.180198e+00 #> [8761] -3.141132e-02 -1.188991e+00 -6.283013e-02 -5.318131e-01  6.292344e-01 #> [8766] -1.104556e-01  1.029585e+00  1.764882e+00 -4.563237e-01  4.935427e-01 #> [8771]  3.810030e-01 -2.094267e+00  6.327859e-02  8.695769e-01 -5.021687e-01 #> [8776] -6.312429e-01  5.354109e-01 -2.857657e-01  1.552758e+00 -2.685656e+00 #> [8781] -2.103085e+00  1.625289e+00  8.305894e-02  5.356806e-01  1.256942e+00 #> [8786] -2.046977e+00  4.054154e-01 -1.992212e+00  4.296159e-01 -1.332057e+00 #> [8791]  1.959714e+00 -9.798131e-01 -1.650780e+00  2.262575e+00 -2.455175e-01 #> [8796] -2.207381e-01 -1.067272e+00 -1.259093e+00 -5.265127e-01 -5.034057e-01 #> [8801] -9.638156e-01 -4.023533e-01  9.992491e-01  5.883396e-01 -1.545409e+00 #> [8806]  2.456256e+00 -7.544056e-01  1.292805e+00  5.306037e-02 -2.916284e-01 #> [8811] -1.295806e+00  5.869779e-01 -2.323372e-01 -1.659077e-01 -2.232409e-02 #> [8816]  3.666766e-01  1.019339e-01  6.707349e-01  1.558432e+00 -1.926578e+00 #> [8821]  5.680670e-01 -1.938452e+00 -3.219974e-01  2.466579e-01 -2.062364e-03 #> [8826]  4.898627e-01  1.849855e+00  1.787684e-01 -1.107712e+00 -5.326324e-01 #> [8831]  9.518334e-01 -1.011419e+00  5.890034e-01 -8.728185e-01 -7.791443e-01 #> [8836] -1.007648e-01 -1.205595e+00 -1.149224e+00  9.123733e-01 -2.536933e+00 #> [8841] -2.560257e+00 -1.473291e+00  7.912206e-01 -5.919085e-01 -4.038169e-01 #> [8846]  3.951613e-01  1.494704e+00 -1.473244e+00 -6.025824e-01  6.420215e-01 #> [8851] -4.435930e-01  1.017874e+00  1.135570e+00  1.370865e+00 -8.367696e-01 #> [8856]  6.180078e-01  1.129112e+00 -1.921209e+00  1.578016e+00  1.379735e-01 #> [8861]  2.593981e+00  5.195728e-01 -1.708290e+00  1.389146e+00 -1.456574e+00 #> [8866]  2.699412e-01  5.296646e-01  2.594631e-01 -1.857448e+00 -2.110632e+00 #> [8871] -6.075414e-01 -1.427700e+00  4.461364e-01 -1.846903e+00  2.492386e+00 #> [8876] -1.743789e+00 -1.210397e+00 -1.059756e+00 -6.741129e-01 -4.040923e-02 #> [8881] -4.126147e-01 -1.459089e+00  2.089786e+00 -7.036607e-01  2.585551e-01 #> [8886] -2.682980e-01 -1.004712e+00 -1.700483e+00 -4.636029e-01  2.842688e-01 #> [8891]  1.343066e+00 -2.869675e-01 -2.321383e-01  8.198315e-02 -1.213070e+00 #> [8896]  2.069363e+00 -3.468392e-01 -2.749753e-02 -1.719095e-01  7.749934e-01 #> [8901]  6.806067e-02  1.541761e-01 -4.772297e-01 -1.557794e-01 -7.484664e-01 #> [8906]  9.387173e-01 -2.907211e-01  2.084098e+00  3.460931e-01  1.053291e+00 #> [8911]  1.426566e+00 -8.198551e-01  1.043464e+00  7.425901e-01 -3.620324e-01 #> [8916] -1.526717e+00 -1.143010e+00  9.593091e-01  1.347632e-01  7.128927e-01 #> [8921] -7.619714e-01  1.461696e+00  4.459302e-01 -3.955248e-02  1.317368e+00 #> [8926] -1.211876e-02  1.654722e+00 -1.743366e+00 -7.432987e-02 -2.240300e-01 #> [8931] -1.952274e+00 -2.442205e+00  8.485423e-02  6.724472e-01 -1.956564e-01 #> [8936]  2.788908e+00 -1.259719e+00  1.318224e+00  2.393328e-01 -8.508542e-01 #> [8941]  3.327002e-01 -1.429083e+00 -2.142274e-01 -1.355616e+00  1.687410e-01 #> [8946]  1.788194e+00 -1.227460e+00 -2.606027e+00  3.643090e-01 -3.843092e-01 #> [8951]  3.514591e-01 -2.261866e-01  5.952510e-01  1.776019e+00 -4.200340e-01 #> [8956]  1.860615e+00  2.812288e+00 -6.628136e-01 -8.402879e-01  1.058200e+00 #> [8961]  1.482946e+00  1.867304e+00 -1.128846e+00  6.660847e-01 -7.857064e-01 #> [8966]  1.099620e+00  7.988336e-01 -2.686296e-01  1.309675e+00 -9.102911e-01 #> [8971] -4.678958e-02  1.472925e+00 -8.892498e-01  1.224516e+00 -3.116917e+00 #> [8976] -6.242546e-01  1.721635e-01  1.325453e+00  5.339790e-03  9.207147e-01 #> [8981]  8.140709e-01  6.492360e-01 -1.108731e+00  2.845573e-02 -1.152059e+00 #> [8986] -1.308722e-01 -6.788964e-01  1.033152e+00 -8.795927e-01 -1.453167e-01 #> [8991] -1.495466e+00  1.289413e+00  7.614447e-01 -8.173136e-01 -2.868397e+00 #> [8996]  1.331620e+00  1.013232e-01  1.601146e+00 -1.247113e+00 -6.239847e-01 #> [9001] -4.012100e-01  1.842480e+00 -1.292734e+00  1.008331e+00  2.336898e+00 #> [9006]  3.837406e-01 -1.386931e+00  2.144829e-01  2.559071e+00  1.041664e+00 #> [9011]  6.531002e-01 -1.477893e-01 -2.641583e+00  2.413019e+00 -3.414189e-01 #> [9016]  5.383499e-01  3.867565e-01  1.032879e+00  5.641771e-01 -2.240260e-01 #> [9021]  7.606915e-03 -9.875526e-01 -6.441486e-01  9.261841e-01 -1.103810e+00 #> [9026] -7.808139e-01 -6.198029e-01  5.707077e-01  7.919894e-01 -3.848863e-01 #> [9031] -3.765351e-01  2.113590e+00 -4.515464e-01  1.827771e+00  1.456870e+00 #> [9036] -1.182331e+00  4.686758e-01  1.163124e+00 -1.091779e+00 -1.372891e+00 #> [9041] -1.485059e-01 -1.167008e+00  1.449705e+00  1.896271e+00  6.015370e-01 #> [9046] -9.054212e-01 -1.771755e+00  3.122556e-02 -2.938404e-01 -7.798452e-01 #> [9051]  3.389416e-02  5.888093e-01 -5.639127e-01  1.612704e-01  2.918808e-02 #> [9056]  1.087237e+00 -1.118511e+00 -1.640957e+00  3.742005e-01  2.069013e-01 #> [9061] -8.780523e-01  8.693597e-01 -4.338961e-01 -3.785733e-01 -1.645254e-01 #> [9066] -2.062816e-01 -1.530922e+00 -2.776933e+00  4.386124e-01 -1.473020e-01 #> [9071] -1.047625e+00  1.125076e+00  1.542557e+00 -8.076251e-01  2.664821e+00 #> [9076] -5.136084e-01 -5.775663e-01 -2.184856e-01  1.074307e+00 -2.272847e+00 #> [9081]  2.435196e-02 -1.884540e+00 -7.836831e-01  1.505971e+00  8.803879e-01 #> [9086]  1.448116e+00 -6.982278e-01 -1.857055e+00  1.785768e+00 -9.072422e-01 #> [9091]  1.563910e+00 -2.510256e-01  1.870196e+00 -8.028455e-01  1.093367e+00 #> [9096] -2.573520e-02  2.317308e+00  1.411917e+00  2.772732e+00  1.478332e+00 #> [9101]  7.045584e-01  9.202273e-02 -1.037846e+00  1.645169e+00  1.662033e+00 #> [9106]  5.214024e-02 -1.216910e+00  5.501321e-01  1.079236e-01 -6.083209e-01 #> [9111] -3.001753e-01  4.317288e-01  5.878002e-01  1.054264e+00  1.782822e-01 #> [9116] -3.427371e-01  1.553261e+00 -1.959012e-01  1.313704e+00  1.515185e+00 #> [9121] -4.309208e-01 -1.111760e+00  6.582109e-01  1.089538e+00 -1.552907e+00 #> [9126] -6.086467e-01 -1.229643e+00  3.588679e-01  2.526586e-01 -2.653364e+00 #> [9131]  1.490130e-01 -2.005732e+00  1.604214e+00 -6.740641e-01 -5.716763e-02 #> [9136]  3.062486e+00 -3.659963e-01 -1.128516e-01  6.112602e-01 -1.979921e+00 #> [9141] -4.082525e-01  2.555454e+00  4.180345e-01 -1.161910e-01 -2.787839e-02 #> [9146] -4.688133e-01  7.830976e-01  1.078794e+00 -1.161758e+00  2.137254e-01 #> [9151]  2.082984e+00 -2.071064e-01  1.407158e+00 -8.663927e-01 -1.414308e-01 #> [9156] -4.928655e-01 -9.880624e-01  5.943706e-01 -9.520712e-01  7.712909e-01 #> [9161]  7.959870e-01  1.409406e+00  7.101107e-01  1.445126e-01  2.388440e-02 #> [9166] -5.000500e-01 -1.569159e-01  1.023239e+00  5.338933e-01  5.674392e-02 #> [9171]  1.923909e+00 -3.118183e-01  1.579811e+00  8.121288e-01 -1.594044e+00 #> [9176] -8.649031e-01  2.009749e+00  1.130063e+00  4.702939e-01 -2.408146e-01 #> [9181]  9.424995e-01 -7.193862e-01 -8.037436e-01 -6.611201e-01 -8.170121e-01 #> [9186] -5.589130e-02  5.568731e-02 -2.043156e-01 -6.183183e-01 -2.810908e-01 #> [9191]  6.026733e-01  1.259376e+00 -2.992913e+00 -5.026271e-01  4.592602e-01 #> [9196]  1.551292e-01  1.716051e+00  9.293975e-01 -8.511987e-01  2.979966e+00 #> [9201] -4.014840e-01 -8.412664e-01 -1.337659e+00 -1.453840e+00  5.314583e-01 #> [9206]  3.333868e-01 -1.500040e+00  6.335366e-01 -1.166440e+00 -6.771478e-01 #> [9211] -8.283546e-01 -1.796116e+00  1.507152e+00  1.500350e+00  2.392575e+00 #> [9216] -2.628874e+00 -1.847427e+00 -3.315999e-01 -1.052537e+00  4.812449e-01 #> [9221]  1.180040e+00 -1.016021e+00 -1.372162e+00  1.769388e-01  7.156401e-01 #> [9226] -2.156515e+00  7.095465e-02 -2.807976e-01  3.814388e-03 -1.237136e+00 #> [9231] -7.214822e-01 -5.573380e-01  8.365366e-01 -4.357338e-01 -1.161398e+00 #> [9236]  1.378340e-01  5.223789e-01 -1.576342e-01  3.428957e-01  6.873216e-01 #> [9241] -2.566098e-01 -1.596717e+00 -1.207607e+00 -1.283832e+00  6.649160e-01 #> [9246]  5.120307e-01  7.473214e-01  3.148778e-01 -1.072947e+00 -1.246950e+00 #> [9251] -7.871586e-01  3.451447e-01  3.728248e-01  1.231476e+00  5.626782e-01 #> [9256] -6.909600e-01 -1.927769e+00  6.282721e-02  8.549500e-01 -6.184861e-01 #> [9261] -2.520273e+00 -2.823214e-01 -1.327318e+00 -3.501371e-01 -1.024231e+00 #> [9266]  1.723351e+00 -3.040161e-02 -2.070849e+00 -4.786225e-01 -1.308349e+00 #> [9271] -1.437600e+00  3.637424e-03  2.752134e+00  2.122061e-01  1.065648e+00 #> [9276] -1.229623e+00  9.337628e-01  1.548539e+00  1.350952e+00 -7.760400e-01 #> [9281]  4.967098e-01 -1.300221e+00  3.221334e-01  1.047675e+00  1.955725e+00 #> [9286]  4.039750e-01 -4.159946e-01  6.573489e-02  5.353482e-01 -1.692631e+00 #> [9291] -5.722561e-01  1.033530e+00  1.846504e+00 -5.203117e-01 -1.648575e+00 #> [9296]  9.843465e-01  9.397270e-02  1.366245e+00 -4.888454e-02 -7.527893e-01 #> [9301]  7.639871e-01  2.357947e+00  1.896150e+00  8.970428e-01  3.797438e-01 #> [9306] -3.489724e-01  1.567741e+00  5.488891e-01  1.257667e+00  5.958426e-01 #> [9311] -1.616174e+00 -3.620423e-01  1.288604e+00 -5.449758e-01  3.931722e-01 #> [9316]  5.695952e-01 -1.975493e-01  8.471441e-02 -1.010302e+00 -1.033064e+00 #> [9321] -1.739025e+00  8.619481e-01  1.267385e+00 -6.522470e-01 -1.185523e+00 #> [9326] -7.927002e-01  7.063805e-01  9.496892e-02  1.267633e+00 -1.350382e+00 #> [9331]  1.060748e-01 -1.727152e+00 -3.027887e-01 -3.644665e+00  1.490846e+00 #> [9336]  2.447623e+00 -1.993595e+00 -1.138913e-01  9.243945e-01  1.128604e+00 #> [9341]  4.471942e-01 -2.148856e+00 -4.813130e-01 -1.281877e+00 -1.221009e+00 #> [9346] -1.468341e-01 -5.479304e-01 -2.541173e+00  4.135064e-01  6.383108e-01 #> [9351]  9.887064e-03 -2.017880e+00 -9.574421e-01 -1.220222e+00  1.199849e+00 #> [9356] -3.669161e-01  2.854472e-01  3.252166e-01  5.693072e-02 -9.814312e-01 #> [9361] -1.285101e-02  1.378289e+00  1.799457e+00 -1.319244e+00  9.977332e-01 #> [9366] -6.519491e-01  2.213453e-01  1.367273e+00 -1.591045e+00 -1.453915e+00 #> [9371] -7.696420e-01  1.281838e+00 -2.135440e-02 -7.667825e-01 -2.230046e+00 #> [9376] -2.044847e-02 -2.067116e-01 -1.456342e-01  2.764391e+00  1.087381e+00 #> [9381]  5.071551e-02  5.921645e-01  7.309240e-02  1.610187e-01 -1.362343e-01 #> [9386]  4.518070e-01  9.211912e-01 -2.709855e-01 -6.120917e-01  1.217173e+00 #> [9391]  1.569613e-01 -5.301936e-01 -1.439074e+00 -1.507281e+00 -1.446098e+00 #> [9396] -6.090149e-01 -1.045735e-01  1.515324e+00  7.093428e-02  6.444024e-01 #> [9401] -2.953337e-02  2.072468e+00 -7.745969e-01 -8.659674e-01 -8.513258e-02 #> [9406] -7.630085e-01  5.145600e-01  2.135418e+00  5.749704e-01 -9.329314e-01 #> [9411] -2.048118e+00 -1.608769e+00  3.414779e-01  5.652615e-01 -1.152360e+00 #> [9416]  2.116255e+00  2.235622e-01  1.389429e+00 -1.079427e+00  9.356550e-01 #> [9421]  1.437909e+00  5.249245e-01  1.116091e+00  1.540488e+00  1.004070e+00 #> [9426] -1.704693e+00 -2.921974e+00  8.461887e-01  1.009782e+00 -9.278814e-01 #> [9431] -2.687211e+00  1.670182e+00  1.183962e+00  1.209684e+00  7.712876e-01 #> [9436] -6.243784e-02  1.111540e-01 -3.912277e-01 -2.078987e-01  1.903719e-01 #> [9441] -3.373274e-02  9.223935e-01 -1.000060e+00 -2.053292e+00 -7.893109e-01 #> [9446]  6.903513e-01  1.094805e+00  2.713219e-01  6.135065e-02  3.491387e-01 #> [9451]  7.436580e-01  6.530417e-01  9.598947e-01 -4.232085e-01  3.669909e-01 #> [9456]  1.535006e+00  3.809382e-01  7.867809e-02  2.175730e+00 -4.923327e-01 #> [9461] -4.830606e-01 -8.655700e-01  2.730666e-01  1.391770e+00  7.513280e-01 #> [9466] -1.446943e+00 -4.737936e-01 -3.910551e-01  8.249469e-01  8.476032e-01 #> [9471] -1.700118e-01  3.968122e-01  2.808062e-01 -1.447221e+00 -1.956658e-01 #> [9476]  6.666375e-01 -6.626540e-01  1.169420e+00  7.696326e-01  7.457226e-01 #> [9481] -8.651785e-01 -3.617077e-01 -9.027016e-01  2.251996e+00  5.898815e-01 #> [9486] -8.066908e-01 -9.948385e-01  2.482446e+00  1.434739e+00  1.289707e-01 #> [9491]  1.164933e+00  1.051657e-01 -9.101068e-02 -3.553452e-01  1.262581e+00 #> [9496]  1.433239e+00 -1.398002e+00 -3.669408e-01  7.099551e-01 -7.149681e-01 #> [9501]  5.305371e-01 -8.983574e-01  8.485695e-01  8.917313e-01 -1.520801e+00 #> [9506]  2.437130e+00 -6.161764e-01 -8.873210e-01  7.490320e-01 -6.993690e-01 #> [9511]  2.246622e+00 -7.964499e-01 -2.681483e-01 -1.147125e+00 -1.302777e-01 #> [9516] -1.297312e-01  2.236878e+00 -1.960563e+00 -1.449569e+00 -5.628410e-01 #> [9521] -1.470186e+00  4.874688e-01 -1.010800e+00  2.113588e+00 -9.023675e-01 #> [9526] -2.449154e+00 -3.549002e-01  2.243554e-01  5.617229e-02 -6.546154e-03 #> [9531]  1.297678e+00  5.408770e-01 -3.827188e-01 -4.412943e-01  1.017677e+00 #> [9536] -4.045545e-01 -9.447861e-01 -1.257425e+00  1.122321e+00  8.679228e-01 #> [9541]  2.506853e-01  3.842243e-01  5.537736e-01  2.592285e-01  1.758719e-01 #> [9546]  6.869443e-01  2.819222e-01 -1.915410e+00 -3.761949e-01 -3.382645e-01 #> [9551] -9.807379e-01 -5.084126e-02 -2.730196e-01  3.132472e-01  1.496657e-01 #> [9556]  1.565314e+00  1.609206e+00 -7.719221e-01  1.562098e+00 -7.930529e-01 #> [9561]  1.077344e+00  1.308521e-02  1.951575e-01 -1.857509e+00  8.425459e-01 #> [9566] -2.786418e+00 -2.107169e-01 -2.002748e+00  1.153712e+00 -2.112021e+00 #> [9571] -7.156421e-01 -5.665537e-02 -1.626164e-02 -6.461888e-01 -7.504987e-01 #> [9576] -4.271045e-01  1.929571e-01 -2.599807e-01 -7.154900e-01 -8.286989e-02 #> [9581] -9.293797e-01 -9.831950e-01  2.644253e-01  3.201810e-02 -5.589520e-01 #> [9586] -6.381794e-01  5.011333e-01 -1.269883e+00  3.205652e-01  1.382879e+00 #> [9591] -2.114539e+00 -1.602687e+00  1.497761e-01  6.555160e-01  2.550964e+00 #> [9596]  3.141776e+00  1.138423e+00  8.933575e-01 -1.464143e-01  1.282677e-01 #> [9601] -8.999501e-01  1.412072e+00  3.791398e-01  6.879513e-01  8.014448e-01 #> [9606]  3.451354e-01  1.956260e+00 -5.449451e-01 -1.745907e+00  1.198780e+00 #> [9611]  2.483672e-02  2.340811e-01 -1.004638e+00  3.002679e-01 -2.291088e+00 #> [9616]  8.651090e-01  3.339260e-01 -6.542300e-01  1.309586e+00 -5.746371e-02 #> [9621] -1.561812e+00 -7.871954e-01 -1.719788e-01  1.067777e+00 -7.753966e-01 #> [9626] -2.829494e-01 -9.804690e-02 -1.017160e-01  1.927479e+00 -8.438042e-01 #> [9631]  1.080530e+00 -2.743969e-01 -5.821737e-03 -1.165115e+00 -1.552002e-01 #> [9636]  6.392841e-01 -1.870392e-01  5.373673e-01 -2.906404e-01  6.260452e-01 #> [9641] -2.072434e+00  6.449099e-01 -6.607374e-01 -8.683087e-01  4.671523e-01 #> [9646] -7.043648e-01 -2.874266e-01  1.289139e+00 -3.590524e-01  7.860469e-01 #> [9651] -5.428825e-01  3.141707e-01  1.348267e+00  1.669579e+00 -1.374499e+00 #> [9656] -3.587291e-01 -7.311652e-01  9.662918e-03  4.423240e-02 -5.852867e-01 #> [9661]  1.532738e+00  3.398407e-01 -1.006548e-01 -1.231037e+00 -4.638923e-01 #> [9666] -5.267163e-01 -1.496804e+00 -7.363770e-01  1.666375e+00  3.350708e-01 #> [9671] -1.257064e+00  6.927677e-01  9.074097e-01  7.617374e-01  5.598254e-01 #> [9676]  1.857265e+00 -2.096628e-01 -2.656999e-01 -1.033695e+00  6.744427e-01 #> [9681]  6.426654e-01 -2.411595e+00 -1.417619e+00 -1.009233e+00 -7.520528e-01 #> [9686]  1.461918e+00  2.127157e+00 -4.085320e-01 -2.452146e+00  9.854350e-01 #> [9691] -3.796824e-01 -7.459804e-01 -1.829210e-01 -1.094778e+00 -6.253127e-01 #> [9696]  1.290673e+00  9.122315e-02  1.524902e+00  5.810396e-01 -8.435384e-01 #> [9701] -1.517831e-01  1.187257e+00  1.672612e-01  1.698503e+00 -2.497587e-01 #> [9706]  1.187367e+00  2.186413e-02 -4.075402e-02  1.333896e+00  1.022613e+00 #> [9711] -4.909997e-02 -3.986624e-01  2.439997e+00  1.416958e+00  1.557525e+00 #> [9716]  7.281270e-01 -1.189208e-01  2.935813e-01 -1.524062e+00 -1.012032e+00 #> [9721] -1.457849e+00 -1.017891e-01  1.609850e+00  2.157716e-01  4.502753e-02 #> [9726] -5.759130e-01  2.203271e+00 -1.480416e-01 -4.475384e-02 -1.203098e+00 #> [9731] -1.311913e+00 -1.996895e-01 -7.291558e-01 -1.142354e+00  2.478978e-01 #> [9736]  8.808559e-01  8.287882e-01 -4.094979e-02  1.147026e+00 -4.137678e-01 #> [9741]  2.440231e+00 -1.377046e+00 -7.209120e-01  1.276067e+00 -1.413594e+00 #> [9746]  5.178996e-01 -9.781805e-01  1.095282e+00  1.546334e-01  2.005693e+00 #> [9751] -1.844388e-01 -1.651904e-01  8.361273e-01 -2.463588e+00  3.265619e-01 #> [9756] -7.577226e-01  1.126933e+00  2.890958e-01  2.091624e+00  8.654401e-01 #> [9761]  1.503084e+00 -4.056614e-01  2.309201e+00 -2.245752e-01 -1.366313e-01 #> [9766]  5.500924e-01 -2.919175e-01 -5.228198e-01 -1.157971e+00  1.456990e+00 #> [9771] -8.525570e-01 -6.538769e-01  6.050562e-01  1.539652e+00  8.428484e-01 #> [9776]  1.473400e-01  1.747546e+00  6.043987e-03 -1.632173e+00 -1.950490e+00 #> [9781] -7.741684e-01  4.732594e-01 -7.835190e-01 -1.538974e+00  6.240079e-01 #> [9786] -2.619489e-01 -1.611491e+00  3.812163e-01 -8.174278e-01 -9.442509e-01 #> [9791] -1.239485e+00  3.295707e+00 -1.145970e+00  8.375983e-01  2.786035e-02 #> [9796] -9.028997e-01  1.993767e+00  6.670108e-01 -1.574649e+00 -1.306133e+00 #> [9801] -4.898150e-01  2.596767e-02 -1.198300e+00  1.941349e+00  7.139788e-01 #> [9806]  1.011957e-01  1.815410e+00  1.544834e-01 -5.200320e-01  1.713646e+00 #> [9811]  6.996070e-01 -9.337807e-01 -3.461684e-01  2.803642e+00  7.267971e-01 #> [9816] -1.243869e-01  1.678429e+00  4.341956e-01 -1.402922e+00 -2.045440e+00 #> [9821] -7.106132e-01  1.132408e+00  5.688215e-01 -4.502863e-02  9.396887e-01 #> [9826]  1.372211e-01 -1.396212e+00  4.118692e-01  8.872334e-01 -5.084036e-01 #> [9831]  4.756512e-01  1.745452e-01 -4.010359e-01  3.212568e-01 -8.066381e-01 #> [9836] -1.189881e+00 -9.106996e-01 -7.434074e-01 -2.246891e+00 -7.185744e-01 #> [9841]  6.234357e-01 -6.015166e-01  1.403697e+00 -1.029837e+00  1.529139e+00 #> [9846] -1.845513e+00  1.355254e+00  1.157500e+00  6.243279e-01 -6.078493e-01 #> [9851] -1.599119e+00 -5.224449e-01  3.955295e-01  5.375873e-01 -7.181559e-01 #> [9856]  1.291323e-01 -1.593002e-01 -9.381372e-01 -2.840527e+00  3.464803e-01 #> [9861]  7.453187e-02 -5.498895e-01  6.064702e-01  4.352023e-01  6.424204e-01 #> [9866] -1.494802e+00 -2.420399e-01  2.385711e-01 -8.193738e-01 -2.480095e-02 #> [9871] -2.190143e+00  6.827135e-01 -3.224765e-01  1.531924e+00 -8.482462e-01 #> [9876] -1.632071e-01  3.247835e+00  3.191965e+00  1.384751e+00  5.391447e-01 #> [9881] -6.793843e-01  1.894849e+00 -2.450065e+00 -1.419281e+00  1.362466e+00 #> [9886] -5.648473e-01 -8.892797e-01 -9.202814e-02 -1.060415e+00 -1.748448e+00 #> [9891]  8.107387e-01  9.807784e-01  2.214783e+00 -1.584139e+00  8.324074e-01 #> [9896]  6.520391e-01  1.726612e+00 -4.700422e-01 -5.899890e-01  9.136727e-01 #> [9901] -8.075312e-01 -5.863371e-01 -8.007756e-01 -5.207095e-01 -1.456840e+00 #> [9906]  4.738613e-01 -5.212170e-01  1.491829e+00 -3.979433e-01  3.534863e-01 #> [9911]  1.624373e+00 -2.902560e-01  6.927426e-01 -3.057030e+00  1.021212e+00 #> [9916]  2.757279e-01  2.454112e+00 -1.495124e-01  5.955859e-01 -3.683952e-01 #> [9921] -2.362264e+00  2.093907e-01 -4.509449e-01 -2.753246e-01 -1.968178e-01 #> [9926]  5.615313e-01  1.926809e+00 -1.850949e+00 -1.598058e-01  7.286262e-01 #> [9931]  3.439310e-01 -2.537562e-01 -4.128718e-01  5.582207e-01 -1.331880e+00 #> [9936]  2.749728e-02  8.169740e-01 -1.421054e+00 -2.711888e-02 -2.930195e-02 #> [9941] -1.380650e-01 -2.254392e+00  7.355708e-01  1.137246e+00 -4.383659e-01 #> [9946] -2.332599e-01 -9.187124e-01 -1.189100e+00  1.160086e+00 -1.647335e+00 #> [9951] -7.038117e-01 -1.219459e+00  2.773383e-01  1.129109e+00 -1.255440e+00 #> [9956]  1.149394e+00 -1.507762e+00  2.762378e-01 -3.011922e-01 -6.747689e-01 #> [9961] -7.188610e-01 -3.793807e-02 -1.549197e+00 -4.539950e-01  6.765749e-02 #> [9966] -2.471391e-01  3.403078e-01 -1.048106e-01 -1.480307e-02  8.355374e-01 #> [9971] -2.851328e-01 -3.754787e-01 -2.777084e+00 -6.281450e-01 -2.171070e-01 #> [9976] -9.078648e-01 -5.891214e-01 -1.487735e+00  5.402128e-01 -4.408180e-01 #> [9981]  1.408174e+00 -7.367722e-01  2.717828e+00  5.684213e-01  4.431641e-01 #> [9986]  7.270848e-01  1.481787e+00  1.126295e+00 -2.171349e+00  6.169835e-01 #> [9991]  1.132181e+00  2.949393e-01 -7.618276e-01  1.236819e+00  2.070506e+00 #> [9996] -7.089626e-01  1.386453e+00  2.419895e-01  1.334260e+00 #>  #> $param #> [1] \"treatment::0:ideology1\" #>  #> $N #> [1] 300 #>  #> $boot_iter #> [1] 9999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        40  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.fixest(object = feols_fit, param = \"treatment::0:ideology1\",  #>     B = 9999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> $boot_vcov #> NULL #>  #> $boot_coef #> NULL #>  #> attr(,\"class\") #> [1] \"boottest\""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/Multiple-Estimations-with-fixest.html","id":"multiple-estimations","dir":"Articles","previous_headings":"","what":"Multiple Estimations","title":"fwildclusterboot and fixest","text":"possible loop different regression specifications. example, run boottest() fixest_multi object created via sw() function: Similarly, possible loop objects fixest_multi created subset functionality: course also possible combine multiple “syntactic sugar” features fixest:","code":"feols_fits <- fixest::feols(   proposition_vote ~ treatment | sw(Q1_immigration, Q2_defense),   data = voters )  boot2 <- lapply(   feols_fits,   \\(x) boottest(     x,     B = 999,     param = \"treatment\",     clustid = \"group_id1\") )   boot2 #> $`fixef: Q1_immigration` #> $point_estimate #> [1] 0.07408892 #>  #> $p_val #> [1] 0 #>  #> $conf_int #> [1] 0.03618123 0.11376876 #>  #> $p_grid_vals #>  [1] 0.04804805 0.07007007 0.11211211 0.15315315 0.23223223 0.30730731 #>  [7] 0.39539540 0.51651652 0.65665666 0.81381381 0.94694695 0.90490490 #> [13] 0.75775776 0.62462462 0.49149149 0.38338338 0.29729730 0.22822823 #> [19] 0.16616617 0.11411411 0.07907908 0.05105105 0.03703704 0.02402402 #> [25] 0.01601602 0.01101101 #>  #> $grid_vals #>  [1] 0.03590294 0.03959050 0.04327807 0.04696563 0.05065320 0.05434076 #>  [7] 0.05802832 0.06171589 0.06540345 0.06909102 0.07277858 0.07646615 #> [13] 0.08015371 0.08384128 0.08752884 0.09121641 0.09490397 0.09859154 #> [19] 0.10227910 0.10596667 0.10965423 0.11334180 0.11702936 0.12071692 #> [25] 0.12440449 0.12809205 #>  #> $t_stat #> [1] 3.880425 #>  #> $t_boot #>   [1] -1.967775356 -2.529966679 -1.707263066  0.695000976  1.353839384 #>   [6]  0.117882623  1.228856324  0.652676850 -1.022527618  1.260523845 #>  [11] -1.079392027  0.557064081 -0.445414153 -0.600480664 -0.304051905 #>  [16] -1.518440842  2.838957403 -1.294484532 -0.313921531  1.293136444 #>  [21] -0.409392216  1.479056424  0.030249596  0.355403755  1.322837939 #>  [26]  0.949186214 -0.918583156 -0.125301260  1.221204346  1.085446635 #>  [31]  0.084453466 -2.174662352 -0.292085218 -0.334757068  2.345649853 #>  [36]  0.158222941  1.690235342 -0.161587274  0.509868014  0.081646287 #>  [41]  2.673940462 -0.642670839 -0.344399328 -0.713904877 -2.077742502 #>  [46] -1.297647169  0.524045664 -1.485288830 -1.880004643 -1.566749095 #>  [51] -2.050992030  0.174749023  1.290708778 -0.303052273  0.146892794 #>  [56] -0.583373181 -2.574182688  0.591289364  0.997593896  1.630999942 #>  [61]  1.648669357 -1.333086671  0.633460560  0.993284073 -0.106900723 #>  [66]  0.660812850  0.717275964 -0.324867969 -0.328437793 -1.123767801 #>  [71] -0.546606238 -0.330877159  0.115807568  1.211176187  0.253883578 #>  [76] -1.762210483  0.503020463  1.346061381 -0.181734106  0.192281587 #>  [81]  1.205904794 -0.058515189  1.923135786 -0.019156507 -1.637529765 #>  [86]  0.810851231  1.665669300  1.551400492  1.382457544 -0.554103277 #>  [91]  0.180844581 -0.878058396  1.399199170 -1.581981586 -0.660943814 #>  [96]  1.231501462  0.173194323 -0.649410993 -1.214089102 -0.454293981 #> [101]  0.319564815  2.110170805  1.236862399  0.116189210 -1.644305191 #> [106]  1.919285880 -0.837526608  0.420888760  0.524159385 -0.516123201 #> [111]  1.146798769 -0.379247350 -0.007717209  0.461178543 -0.711381153 #> [116]  0.522661229 -1.442155301  0.316602430 -0.891130150 -1.951038808 #> [121] -1.899384293 -1.487805550  2.070538420 -0.386666768 -1.146175939 #> [126] -0.667464856 -0.367520452 -1.156868602  0.318189556 -1.895143783 #> [131]  0.510397477  1.543046720 -0.318585866 -0.368435612 -0.071483321 #> [136]  0.573976037  0.390427739 -1.838349784 -0.444435024 -1.147017596 #> [141]  2.185890260 -0.294660859  0.375163460  0.774441692 -0.916724856 #> [146] -0.741419460  3.459924420 -0.072402799 -0.451151576 -1.149190066 #> [151] -1.734156522 -0.102144748  0.975972854  0.855970841 -0.078902102 #> [156]  1.027066218 -0.642583117  0.922964910  0.743114325 -0.313592494 #> [161]  0.631836448  0.314417571 -0.753718549 -0.290617218  0.584986607 #> [166]  0.903300269  0.911727008 -0.544116485 -0.450903698 -0.685782640 #> [171] -0.406867628  0.312271692  0.988732887 -0.541294646  1.257896458 #> [176] -1.554887874  0.729589822  1.658374980 -1.058730802 -1.066106234 #> [181]  2.628698216  2.322333991 -0.711514962 -1.219083246  0.604764915 #> [186]  0.042320598  1.211998988 -0.586305621  0.266938331  1.364457383 #> [191] -2.202588887  0.768573084 -1.687944748  0.395547346  0.635331436 #> [196] -0.119047236  0.241122164  0.215729358  0.407017273 -0.407926238 #> [201]  0.223175007  0.228169183 -1.000427907 -0.787092745 -0.386718722 #> [206]  0.032449402 -1.113846889 -0.434893676 -0.512548089 -1.362919659 #> [211] -0.078519563 -1.191053217  0.390311536 -1.362001705 -1.351628121 #> [216] -1.583144984  1.389417685  1.526983205 -0.688342733  0.064458078 #> [221]  0.933906574 -0.873563275  1.313950110  0.284924491  0.441297769 #> [226] -0.321495987 -0.206243161 -0.335534622 -0.666394985  0.094284368 #> [231] -1.148042247  0.677586740 -0.592476719 -0.772267806  1.872706980 #> [236] -1.159202643  0.325008606  0.330766171  0.457790736  0.017887925 #> [241] -0.983253292 -0.829039543 -0.128169797  0.775422475  0.037978201 #> [246]  0.067098631  1.076750840 -1.273466317  1.257072173  0.405388533 #> [251]  1.297412814 -1.531477495  2.733540365  0.557520507  1.268806406 #> [256]  0.323693562 -1.041296705 -1.413621631 -1.171416519  1.555196130 #> [261]  2.193452191  0.691979023  0.435067385  0.698402950  0.460553114 #> [266] -0.052888266 -1.080051355  1.600477673 -0.038073052 -1.135335748 #> [271] -1.438352032  0.592901180 -0.692174179  0.264549008  0.766426008 #> [276]  0.964656968 -1.076261227  0.859969103  0.861102344 -0.337682980 #> [281]  0.354855210 -1.415214146 -1.540599048  0.387049904 -1.834461583 #> [286]  2.698178918 -1.119214549 -0.417435696  0.245537935 -0.559438962 #> [291] -1.358627168  0.646630895  0.339269959  0.886596292  0.054054088 #> [296] -0.763665722 -0.274567021  0.968694569  0.734993496 -1.111305344 #> [301] -0.667936686  1.526210722  0.120629324 -1.610361229 -1.756985537 #> [306] -0.231687064  0.693536900 -0.087591842 -0.544937645 -0.134586082 #> [311] -0.377443722 -0.858956652 -1.039550250 -1.363780172 -0.669023069 #> [316]  1.174963632 -0.241255567 -0.637726995  0.249220623  0.461995798 #> [321] -1.817989821 -0.108660982 -0.518571366 -2.420816277  1.077005484 #> [326]  0.026907465  0.750482331  1.402854019  1.117321354  1.303966690 #> [331] -0.781958118 -1.719214630  1.662376787  0.073929672 -1.725615178 #> [336] -0.532986897  1.271656033 -0.512959073  0.323351644 -2.709814896 #> [341] -1.312950390  0.874740472 -0.583968782  2.138466532 -1.157150416 #> [346] -0.306651470  1.214759603  0.995311107  2.421611916 -0.373212927 #> [351]  0.802267649  1.560446638  2.249112907  0.139026229  0.748934863 #> [356]  0.392407233  1.099277084 -0.035139703  0.485142076 -0.625017020 #> [361]  0.190743647 -0.782371810  0.208762515 -0.688995829 -1.057648442 #> [366]  1.639952617  0.321999907 -0.893411600 -0.393267873  0.293616714 #> [371]  0.546354965 -0.792240378 -0.958319679  2.527616664 -0.434955251 #> [376] -1.214843304  0.283462643 -2.373545014  0.541197949  0.590842302 #> [381] -0.767360049 -0.264324304 -1.405919365  1.944819597 -0.007152761 #> [386] -0.557283835  0.962368054 -0.024970899  0.913534860 -0.219900919 #> [391] -0.064429193  0.996783582  0.376449132 -2.076724704 -0.594020193 #> [396]  0.420920078 -0.561120323 -0.729442195  0.108675713  2.019705023 #> [401]  1.376219512 -1.132534908 -1.542756706  0.381011477 -0.247237393 #> [406] -1.190028492 -0.124069794  0.097516167  0.964855617  0.772852208 #> [411] -0.746240823 -0.593433855  0.514882694  2.615418534 -0.011835523 #> [416] -0.070910597 -0.409493682 -0.843773280  0.270229775  0.242247274 #> [421] -2.225948507  0.499055295  0.923085695 -0.338049299  0.427089352 #> [426] -0.690321294 -0.561260043 -0.375384624 -0.259652143 -0.222954494 #> [431]  0.291258062 -0.119151383 -0.523212846 -0.002985950 -0.433542808 #> [436]  0.033476426 -0.545955962 -1.149538845 -0.974628038  1.285600757 #> [441] -0.431475232  0.114160091  0.161161762  0.383542590 -0.205976647 #> [446]  0.352516671  1.240690022 -0.060520146  2.623975739 -0.521321140 #> [451] -0.469155374 -0.018994285  0.391451306  2.468595193 -0.214680349 #> [456] -1.001937753  0.802814889 -1.266971006 -0.201895083 -1.344001916 #> [461]  0.490457849  0.675311180 -1.300711838  0.781718268  1.640280948 #> [466]  0.528563101  0.121099554  2.304701064 -1.795785072  0.603271886 #> [471]  0.985281368  0.373302021  0.029060657 -1.761950696  0.631616006 #> [476]  0.169687421 -1.446435511  0.137957854 -0.707611557  0.411964432 #> [481] -0.710874292  0.727579008 -0.013694281 -0.003513363  0.977590883 #> [486] -0.684498232  0.655515507 -0.194290517 -0.159451919  0.227482988 #> [491]  0.061464500  0.107322315 -1.853388022  0.495246312 -1.587414147 #> [496] -0.743384958  0.070700314 -0.619693427  0.618050214  1.619742850 #> [501] -0.169814902 -1.009874963 -1.586570622  0.201537073 -0.314006145 #> [506] -0.363739043  0.604436564  1.507610500  0.101305272 -0.307843401 #> [511] -1.727615304 -0.139936129 -1.815166436 -0.940673279 -0.025689252 #> [516] -0.418153800  0.639435205  0.414316848 -0.941216353 -1.502908154 #> [521]  0.424655730 -1.005653325 -1.309410183  0.710044757  0.395292472 #> [526] -0.585225491  1.046987065  0.642125319  0.798344539  1.862277370 #> [531]  1.185901196 -0.545968202  1.031454128  1.167532094  0.789479659 #> [536]  1.724198620 -0.185646033  0.354344934 -0.189819946  0.265903162 #> [541] -0.377557029 -0.316784225 -1.475780230 -0.397458006 -0.412055843 #> [546] -0.785369919 -0.464466003  0.733340160  1.538524514 -0.032324364 #> [551] -0.602976695 -1.031745977  1.002944249 -1.614971758  1.134227551 #> [556]  2.232206812  0.855127059  0.750974549 -0.649471135  0.608859169 #> [561]  0.356713467 -0.229067661 -1.058738936  0.642389694 -1.238044170 #> [566] -0.371729795 -0.429890353 -0.323358819  1.213789053  0.310738184 #> [571] -0.053964802 -1.001720879  0.243990203  0.323354383  1.081956911 #> [576] -1.871660355  1.070535211  0.985852872 -2.034788644  0.732966977 #> [581] -0.216303345 -0.152112171  0.938757491 -0.526100800  0.098782498 #> [586]  1.219060317 -0.191113945 -0.163626244  0.573235882 -1.404595953 #> [591]  0.609863064  0.746624425  1.025533959 -0.136816765 -1.568251648 #> [596] -0.604996743 -0.939161526 -1.078577511  0.261072583 -0.023645032 #> [601] -1.300231513 -0.224790958  0.099041330  0.146191658  0.998745173 #> [606]  0.055835873 -0.293239788 -1.394057562 -0.269251111 -0.920719613 #> [611] -2.083926424 -0.474688602  0.499277711 -0.173122729 -0.227947947 #> [616] -0.423461533  0.846240798 -0.571557679  1.622384574  0.267860489 #> [621] -0.562880376  0.957933927 -0.773732718  1.530588224  0.908344581 #> [626]  1.209252382  1.533865672  0.938063802 -0.952963984  0.635444411 #> [631]  1.016772284  0.579213970  1.281249131  1.004574255 -0.824272504 #> [636] -2.065096814  0.976159579 -0.043742466 -0.644325072 -0.103232733 #> [641] -0.502956733  0.864503993  0.173174107  0.529094378  0.192246628 #> [646] -0.934317350 -0.339040328 -0.579732580 -0.217189424 -0.388122291 #> [651] -0.330416609  0.335529659  2.364800640  1.297396025 -1.181455396 #> [656]  0.147529540  0.728509120  1.254335381 -0.837764195  1.428984457 #> [661]  0.252977877  0.917975467  1.699219846  0.659561207  0.819809007 #> [666] -0.166079837  1.674990050  0.029519915 -1.229337290  0.012312834 #> [671]  0.308831476  0.097063371 -0.684679252  0.189288106  0.234047666 #> [676]  0.819158534  0.094972171  0.434477658 -2.092443241  0.660473577 #> [681] -1.115229550 -0.920016004  0.050024389 -0.270962796 -1.034963698 #> [686] -0.939010870 -0.801567439  1.743590400 -1.801173478  0.281488024 #> [691]  0.374798231 -0.462867614  0.177361841  1.638620898 -0.209471183 #> [696]  1.315802505 -0.279637334 -0.106681101  1.925201821  0.589590767 #> [701] -0.794259540  1.409043762  1.449142805 -1.942373659  0.601958401 #> [706] -1.618501310  0.647775304 -0.946943002 -0.273239954 -1.010548234 #> [711]  0.317815566  0.792377342  0.831705694 -0.828406789 -0.636423407 #> [716] -0.743593912  0.006116526 -2.169953616 -1.376679964 -1.050306303 #> [721]  0.732678340  0.624681600  0.448000831  1.076853637  0.683699419 #> [726]  0.949067246  1.092748445  0.469005603 -0.795867592 -1.255133935 #> [731] -0.268910326  2.775810044  0.579692187  0.265830186 -1.631423768 #> [736] -1.457279556  0.453743826  0.097612996  0.183325565  0.749799677 #> [741] -1.092093554 -0.985005745  1.597653197  1.361792123  0.147277687 #> [746]  1.034561341  0.851824329  0.968680124  0.559107938  2.417969781 #> [751] -0.285908724 -1.421611056 -0.992316375 -0.368906078  0.598549520 #> [756]  0.396396923  0.234983147  1.401845093  0.883884467 -1.390995402 #> [761]  1.693830081 -0.546253478  0.206646653 -0.126263210 -0.643595859 #> [766] -0.368744336  1.462608257 -1.114632327 -0.080269961  0.554621705 #> [771]  0.817653567  0.705853761 -0.717523004  1.186111614  0.100259523 #> [776]  0.993565944 -0.014616349 -0.642367889 -0.856470904 -0.291440065 #> [781] -0.107976075 -0.399878060 -0.242479926  0.357395573  1.010244210 #> [786]  1.254173938 -0.211049543 -2.105570871  0.746839467 -0.126856255 #> [791] -0.833638188  2.489714969  1.225206887  2.044572153  0.547419701 #> [796] -0.075922426  0.579145474 -1.048199724 -0.191226485  0.491778677 #> [801]  1.003339586  1.125726539 -0.056109932 -0.413054141  0.531084796 #> [806]  0.823078929 -2.342067004  0.687179434 -0.925695808  0.534403355 #> [811] -1.218672056  0.697881717  0.329573378  0.294585064 -1.067239444 #> [816]  0.813460253  0.349718404  0.858103124 -0.956753454 -0.252600979 #> [821] -0.769675894  0.454324308 -0.140701606 -0.799212673  0.353590127 #> [826]  0.104236602  0.605885469 -0.019967738 -1.119950461  1.002779318 #> [831]  0.182508700  0.572220135 -0.588967116 -0.582349782  0.201525204 #> [836] -0.550615118 -0.706812372  1.047159071  0.609565336  1.684750030 #> [841]  0.942409374  0.071477017 -1.512236611 -1.595059042 -1.980282245 #> [846]  0.445659709  0.174477156  0.057289788 -1.454264559 -0.420771071 #> [851]  0.353842322 -1.289287068  3.171893745 -1.920837564 -0.697470761 #> [856]  0.141879177  0.625356591 -0.568532796  0.802213619  0.619341667 #> [861]  0.570604154 -0.419391724 -0.209699849 -0.032595932 -0.781797485 #> [866]  0.407287463  1.082553414  0.587813009 -0.240200785 -0.587247074 #> [871]  0.993020436  0.349997544 -0.676145307  0.423156175  0.133822443 #> [876] -0.077317627  0.473435159 -0.257260944  1.146448114  2.011200320 #> [881]  0.677866557  0.676264530  0.461413236  0.954766824 -0.619701148 #> [886] -0.739082515 -0.205038925 -0.065968622  0.422595847 -0.543884816 #> [891]  1.837575370  0.305026829  0.333152104  1.729067467 -0.224877266 #> [896] -0.496472334  0.676071254  0.229553478 -0.065468720 -0.666281440 #> [901]  1.441482641 -0.239388843 -0.620662869 -1.613602300  0.528642248 #> [906] -0.619458559  0.542466091  1.745787978  0.640402235  1.620621082 #> [911]  1.131623509 -1.956163575 -0.835831045 -1.486281616  0.185648801 #> [916]  0.068539215  1.002961065 -0.040266011 -0.249050384 -0.970308752 #> [921] -0.374013278 -1.411691909  0.863957100  0.228313978  0.617540294 #> [926] -2.608333182 -0.408158315  2.055738247 -0.050783891  0.089836949 #> [931]  1.793626724 -2.069245871 -0.571061750  0.558012157  0.383681091 #> [936]  1.168269220  1.193335725 -0.050828494 -0.662823001  0.120978677 #> [941]  0.161829954  0.561038229 -0.647910019  1.212532445 -0.203853241 #> [946] -1.491855325 -0.900922639  0.096609970 -1.762173653 -0.130809298 #> [951]  1.092160865 -1.198711304 -0.147324341  0.472115082  0.186664929 #> [956]  0.222606115 -1.168987618 -2.462805201  1.064531792  0.541206082 #> [961]  0.712725874  1.059469699 -0.242030677 -1.962668952  0.123549372 #> [966] -0.428515137 -1.250194486  0.487936182  0.675762926  0.909422545 #> [971]  0.121533581  0.240362411  0.150514975 -1.332099365  0.852784584 #> [976] -0.142934237  1.903361558 -0.728469643 -2.160350132 -0.458435069 #> [981] -0.215086329  0.276259943  1.717296905 -1.124054113 -1.244264744 #> [986] -0.520142123 -0.526273867  0.058677321 -0.849970451 -0.248970230 #> [991] -1.686338138 -0.168291002  0.315908127 -0.391046991 -0.030710447 #> [996]  0.597100191  0.586880840  0.471975575 -0.741487736 #>  #> $param #> [1] \"treatment\" #>  #> $N #> [1] 300 #>  #> $boot_iter #> [1] 999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        40  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.fixest(object = x, param = \"treatment\", B = 999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> $boot_vcov #> NULL #>  #> $boot_coef #> NULL #>  #> attr(,\"class\") #> [1] \"boottest\" #>  #> $`fixef: Q2_defense` #> $point_estimate #> [1] 0.09090384 #>  #> $p_val #> [1] 0 #>  #> $conf_int #> [1] 0.0437076 0.1359390 #>  #> $p_grid_vals #>  [1] 0.009009009 0.013013013 0.021021021 0.032032032 0.050050050 0.074074074 #>  [7] 0.105105105 0.149149149 0.218218218 0.284284284 0.372372372 0.500500501 #> [13] 0.620620621 0.752752753 0.902902903 0.947947948 0.802802803 0.644644645 #> [19] 0.527527528 0.416416416 0.304304304 0.209209209 0.152152152 0.099099099 #> [25] 0.068068068 0.046046046 #>  #> $grid_vals #>  [1] 0.02603565 0.03046513 0.03489461 0.03932408 0.04375356 0.04818304 #>  [7] 0.05261251 0.05704199 0.06147147 0.06590094 0.07033042 0.07475990 #> [13] 0.07918937 0.08361885 0.08804833 0.09247780 0.09690728 0.10133676 #> [19] 0.10576623 0.11019571 0.11462519 0.11905466 0.12348414 0.12791362 #> [25] 0.13234309 0.13677257 #>  #> $t_stat #> [1] 3.963652 #>  #> $t_boot #>   [1]  0.617941280 -1.041171648  0.504049163 -0.283249540 -0.010518047 #>   [6]  1.989804973  0.747594589  0.833134786 -0.386503211 -1.244720630 #>  [11] -0.053362293 -0.701002930 -1.267072668 -0.133522077 -0.182166866 #>  [16] -1.190295310 -0.717639644 -0.865738114 -0.472603063  1.759455428 #>  [21] -0.135678692 -0.729604842 -0.688970607  1.510830879 -0.832142976 #>  [26]  2.429693127 -1.472140327 -0.001493846 -0.888621767  0.318970516 #>  [31]  0.397016779  0.075968282 -0.675748148  0.696755739  0.616227730 #>  [36] -1.891719457  0.643510066  0.569799015 -1.756961754  2.467406025 #>  [41]  0.202542460  1.462837191 -1.500942593  0.134392975  2.023559182 #>  [46] -1.929711145  0.360904631 -0.087239068  0.873024953  1.534184509 #>  [51]  1.201121668 -1.009302161 -0.495334266  0.350084101 -0.092590582 #>  [56]  2.170243477  1.972162002  1.293929343  0.957115936  0.024872056 #>  [61] -0.358823172 -0.023642944  1.473873892  0.185056267  0.825757681 #>  [66]  1.271110517  0.588306665  1.232114750  0.838781747 -0.112761923 #>  [71]  0.713267010 -0.082869830  3.468693071  0.354408147  0.366347667 #>  [76] -0.154783938 -1.400808572 -1.048655819 -0.339200186 -2.095530233 #>  [81]  0.732751990  0.885178607 -0.866276547 -1.822151073  2.541930409 #>  [86]  0.055416255  0.098684960 -0.283523577 -0.490979635  1.296613247 #>  [91]  0.510300179  1.237230619 -0.143882685  2.727246162  0.079963441 #>  [96] -1.985078442 -0.215527574  2.169965634  2.142688298  0.203281441 #> [101] -1.019090190  0.908022441 -0.567726510  0.871453043 -0.670080808 #> [106] -1.605385700  1.545407898  0.596644629 -0.681040785  2.150884008 #> [111] -0.016754707  0.011993517 -1.731060515 -0.779113600 -0.143180053 #> [116]  1.086552174 -0.479710671  0.190665861 -0.668034855  0.912819661 #> [121] -0.223547712  0.553152400 -2.056863753  2.342563985 -0.679399501 #> [126] -0.436780560  0.077982234 -1.028331946 -0.178532283  0.257674040 #> [131]  0.612282553 -0.464828553  0.376308971  0.375756586  0.695779661 #> [136]  1.299095783  1.498301090 -2.847063653  1.038264310  0.924221795 #> [141] -0.641212721 -1.568558673  3.158705746 -0.835065907 -0.183901471 #> [146]  0.151690698 -1.740487095  2.571414075 -0.387158313 -0.656313904 #> [151]  0.336586128 -0.616124995  0.078765217 -0.375025932 -0.932049964 #> [156] -0.107444852 -0.224572422 -0.132377776 -0.953422180 -0.849569593 #> [161] -2.673670839  3.835308597  0.270504155  1.050245998  0.787189980 #> [166]  0.171138143  0.595261311 -1.051610483  0.828196025  0.592900519 #> [171] -0.783897289 -1.724200206  1.240811974  0.184695899 -0.556140565 #> [176]  0.063853378  2.109842115  0.893241542  0.416516409  0.044099561 #> [181] -0.014763303 -2.642664243 -0.790578307  0.905670241  1.055457729 #> [186] -0.262070238  0.548616088 -0.231322564  1.272988876  0.829182343 #> [191] -0.498985561 -0.155944702  1.141134469 -1.326434914  1.406272256 #> [196]  0.027701482  0.422710873  1.180972959 -0.591532650 -0.294761852 #> [201]  0.041806283 -0.847216949  0.726082963  1.923810213  0.827658606 #> [206] -0.746891867  0.751856687  2.053253875 -0.614958359 -0.376650575 #> [211]  0.058952723  0.212223793 -0.429479750 -0.336288612  1.099067916 #> [216] -0.187710914  1.120897452  0.270663243 -0.538404254 -0.609011174 #> [221]  1.572027495  1.264273635  0.472966980 -0.275484572 -0.586121758 #> [226]  2.600159043  0.883527774 -0.743690299  2.810500020 -1.291284183 #> [231] -0.190576148  1.477800311 -1.352276653  0.893427471  0.469974208 #> [236]  1.425297102 -0.145287596 -0.794502414 -0.802278406  1.373809798 #> [241] -1.605411360  0.710961970  0.338633180 -1.135234132 -0.721555362 #> [246] -0.089530989  0.822258299  1.265891566 -0.351062623  0.386268310 #> [251] -1.409990269  0.871100030 -0.412188024  1.330476284 -0.415477937 #> [256]  1.119781298  1.039602446  0.560368872 -0.323166616 -0.445389878 #> [261] -0.885779693  0.999707994 -0.586741029 -2.093457301  1.155204015 #> [266] -0.047143945  1.518290527 -0.481694440 -0.410164845 -0.147587433 #> [271] -0.840885558 -0.136359580 -1.029008845  0.623016742 -0.930925479 #> [276] -0.100312748 -0.938793532 -0.429596559 -0.986758216  1.239813010 #> [281]  0.522793074  1.195908885  0.742871139  0.377116361 -0.926251236 #> [286]  0.466707538 -0.816785715  1.304300592  1.540328773  2.500978658 #> [291]  0.033404460  2.143748467 -1.020068635  0.775134173  0.133049209 #> [296] -1.535927484 -0.204315670  0.719010580  0.142163441 -0.098897056 #> [301] -1.092923157 -0.819405763  0.475499133  0.293101565 -0.522667129 #> [306]  0.261492309  1.401312278  0.667881478 -1.540757467  0.358936366 #> [311]  0.527806543  1.214595920  0.484067373  0.027298421 -0.893258601 #> [316] -0.667767837 -1.309415133 -0.649451866 -0.597396802  1.178361984 #> [321]  0.379343425 -1.032691509 -1.341975200 -0.871508024 -1.438865885 #> [326]  0.351328489  0.686397086 -0.066523301 -2.074148321 -0.455338813 #> [331]  0.518209535 -1.279310742 -2.145090961 -0.370245822  1.103140015 #> [336] -1.633318457 -2.701524003 -0.289855973  0.038905522 -0.560136077 #> [341]  0.477713526 -0.239743922  0.398122676 -0.068046123  2.012479719 #> [346] -0.477768143 -0.169041360 -1.192433312  0.491714107  0.180367158 #> [351] -1.727720955  1.358647152 -2.110589681  1.009842366  0.877873579 #> [356]  0.183665995  0.365490501  0.017613070 -0.161006961  0.932169380 #> [361] -0.412577037  0.648294376  0.319376044 -0.870683461  0.511972921 #> [366]  1.672381504  0.070957518 -0.350540451  0.274025919  0.161684119 #> [371]  1.260837798 -1.716409518  1.403235162 -1.480665522 -0.038235183 #> [376] -0.732505005  1.204782836  1.292416559  0.149745248  0.144347886 #> [381] -1.210155524  1.269028559 -0.824351835  0.397419960 -0.291261980 #> [386]  1.638433384 -0.663051575  2.262710389  1.094235863 -0.504247722 #> [391]  0.196738187 -1.279385808  0.254740196 -1.423276234  0.021261203 #> [396] -1.969652367  2.494664268  0.248276204 -0.312410587 -0.401500442 #> [401]  0.135636117 -0.054907783  0.431557386 -0.707133908  0.304046447 #> [406] -0.924033373 -0.516951076  0.334534915  1.945949143  1.728965099 #> [411]  0.550291335  0.146130442  1.223028710  0.751438524  1.947526528 #> [416] -1.347964980 -2.517048303  0.058920090 -1.108197595 -1.242246173 #> [421]  0.689028460  0.547358548 -2.072632663  0.951894792 -0.115975229 #> [426] -0.494964121 -0.134993908  1.495569778  0.124561804  0.941567443 #> [431]  0.796019833 -1.031821306 -0.105906204 -1.138043242 -1.429912318 #> [436] -0.894921777 -0.477142124 -1.667073727  0.468538028 -0.984941261 #> [441] -0.717291183 -0.948274762  2.629104523  2.352390030  0.052572804 #> [446]  1.964784224 -1.175059989 -1.719231575 -1.117031033 -1.357006867 #> [451] -0.080094962 -0.016032384  0.770154326  1.457165517 -0.698182864 #> [456]  0.456779400 -0.552955547  0.030514627  1.240428068  1.179362077 #> [461] -1.921274219  0.182645655 -0.129123583  0.524875878 -0.605859572 #> [466]  1.089591958 -0.538692121  1.321640435 -0.123631422  0.144679643 #> [471] -1.258077547  1.392118967 -0.763740604  1.059735536  1.785852928 #> [476] -0.493526905 -0.413910965 -0.874703287 -0.617687162 -0.306640372 #> [481] -0.749032237  1.319522864 -0.687823795 -0.158260549  0.351085251 #> [486]  0.744244759 -1.458622402 -0.981543589 -2.827738770  1.083966478 #> [491]  0.206331726 -1.406239309 -0.794838311 -0.387718649  1.705821189 #> [496] -1.468921874  1.102820905  0.503427779 -0.364029739  0.752704463 #> [501]  0.383552909  0.900342592 -0.697481571 -2.167672564  1.027890195 #> [506]  0.059617166 -0.604477985 -0.049631889  0.480016532  1.609718321 #> [511] -1.742879771  0.601370726  0.706620924 -1.494501796 -0.253505716 #> [516] -0.999589550 -0.347050059  0.612210439  0.431348314  0.169695984 #> [521]  1.247630206 -0.129601120  0.007939159  0.074703458  0.493030360 #> [526] -0.043807960 -0.691870625 -0.009342941 -0.581644022 -0.068203757 #> [531]  0.026495552 -0.081465400 -0.179391510 -1.019204544 -0.426405160 #> [536] -0.877959474  0.476499651  0.051683223  0.994337345 -0.367117825 #> [541] -1.689652458  0.552146053 -0.791192140 -1.176613565  1.019353585 #> [546] -1.340573342  2.341872799  0.286811291  1.146662448  0.163072626 #> [551]  1.153179889 -0.320857330  1.323650689  0.550715258  0.401735019 #> [556]  0.167845776  1.312324101  0.825515629 -1.938358058 -0.298964384 #> [561]  0.067927119 -1.024327104  0.252059411 -0.514591342  1.380355477 #> [566]  0.319594768  1.611004053  0.954522374  0.211058607  0.813163279 #> [571] -0.629593719  0.009001088 -0.038737883 -0.113205605  1.740544378 #> [576]  1.452887670  1.196957309 -2.149630718  0.493303404  0.775723610 #> [581]  0.213668676  1.664196807  0.820301758  0.565561447 -3.322762538 #> [586]  2.286817330 -0.841957847  0.482524772 -0.964997661 -0.916714472 #> [591] -0.353081967  1.213661002 -1.279648493  1.425179706 -0.223679438 #> [596]  1.083733884  0.937703657  0.862637725  0.261158177  1.048001031 #> [601]  1.092926066  0.717855629  0.195166239  0.499721381 -1.146618190 #> [606]  1.852511924  0.381594985 -0.318180951  0.864175727 -1.012978650 #> [611]  1.369777992  0.768429089  1.028526201 -0.407586762 -0.252301925 #> [616] -1.509943730 -0.922244917 -0.009449816  2.268704940  1.385719821 #> [621] -0.063136344 -0.512619926 -0.932888074  1.486165810 -0.832511304 #> [626]  0.236486599 -0.729735109  1.321711085 -0.493201453  1.632586150 #> [631]  0.698429027  0.921099933  0.452206983  0.429142042  0.685347388 #> [636]  0.328037778  0.533442672  2.619454213  1.355224473  1.196209202 #> [641]  0.584668850 -0.964453410 -1.724150873  2.069804183 -1.433451600 #> [646] -0.847668763 -0.087008805  0.394878361  0.311689510  1.071914327 #> [651] -1.082646180 -0.480217954  0.264378697 -1.393586130 -0.076642302 #> [656] -0.258562721 -0.389599409  0.042741303 -0.279775496  0.051860217 #> [661] -0.215953028 -0.817124698 -1.011493848 -0.413570691 -0.473034787 #> [666]  0.308036738  1.996272251  0.253772688  0.753441478  1.942893333 #> [671] -1.074049495 -0.886304893  0.336234195  1.463506464 -0.950260298 #> [676]  1.091498222 -0.493937220  0.442264710  2.741034287 -1.188725077 #> [681] -0.153835721  0.688722321  0.043757783  0.658297499 -1.340466164 #> [686]  1.735078428 -0.940626361  0.782048651  0.182371190 -1.449829920 #> [691]  0.611933131 -0.162819845 -3.393761717  0.271002571  1.076132000 #> [696] -1.311141321 -2.294557843 -1.262791905  0.077041054 -1.297951909 #> [701] -0.123691307 -0.542275194  0.276157920  1.005960929 -0.593029193 #> [706] -0.705085555 -0.224104274 -0.275544328 -0.720343731 -0.472743092 #> [711]  0.584764196 -1.580491074  0.389694870  1.623206187  0.115717770 #> [716] -0.530283383 -0.105129259 -0.683126141 -0.070950998  1.261317850 #> [721] -1.847708215  0.696443338 -0.303672503  1.137245996 -0.143534487 #> [726] -0.887562104 -0.813290048  0.401480125  1.544159413 -0.626389048 #> [731] -0.437292581  0.545479328  0.497088908  0.612462793  1.558345523 #> [736]  0.471248181  1.039698238 -0.220022688  1.245616430 -2.275081341 #> [741]  0.026042299  0.025078753 -0.039666495  1.693906221  0.381936987 #> [746] -0.024731508 -0.647064225 -0.435243706 -0.445863750 -0.518271615 #> [751]  1.360895700 -0.503315194 -0.842172275  0.771590535 -0.218417986 #> [756]  0.766168453 -1.401530037 -0.861450145 -2.189871787 -1.214969732 #> [761] -2.087580031  0.419513408  0.997042660  0.868250286  0.279359719 #> [766]  0.396755655 -0.548412227  1.666578368  0.266756602  0.645112839 #> [771] -0.831893508 -1.954573024  0.552615189 -0.480104046  0.227513686 #> [776] -0.162352244 -1.237735485  1.068236371  1.210717453 -0.434798318 #> [781] -0.293536261 -0.304511473 -0.027783833  0.657714014 -1.810696222 #> [786]  0.449060976 -0.726757102  0.725122126 -1.628104021 -0.515949801 #> [791] -0.151964597 -0.066278071  0.532359359  0.443180054  1.357268812 #> [796] -0.032405449  0.949359059 -0.509878965 -0.473543724 -0.770365814 #> [801] -1.327365013  0.224828468  0.347761554  0.098084056  0.360772044 #> [806] -0.730902269  0.331304072 -0.073824205 -0.281134110 -0.068790629 #> [811] -0.076948124  1.047994057  0.991917887  1.100508254 -0.889605102 #> [816] -0.934303869 -1.295913790 -1.073021128 -0.079638788 -0.151065869 #> [821] -0.212167607 -1.106608610 -0.930012651  2.311849304 -0.879868120 #> [826]  1.147926273  0.075312305 -0.632857654 -0.437653390  0.724033403 #> [831] -0.719662924  1.754872705  1.025255174 -1.675085809 -0.987489867 #> [836]  0.772090491 -0.118428463  1.529355244 -0.357561070  0.352490137 #> [841]  1.000609064  0.540933104  0.544511942  1.124775155 -1.440502349 #> [846] -1.750824957 -0.165366573 -0.010487927 -0.037835070  0.176607229 #> [851]  0.546373883  0.751685703 -0.597424984 -0.378906160 -0.478162781 #> [856]  0.575135510 -1.294182701  0.008874770  1.181631696 -0.395139339 #> [861] -0.298577963  1.676263334  0.780937634  0.691428858 -0.857457466 #> [866] -0.378308374  1.983574630  1.259565426  1.485253004  0.215551516 #> [871] -1.886418206 -1.782481650  2.205001405  0.631338693 -0.932085514 #> [876]  1.248284283 -0.512269971 -0.164097483 -1.755666262  1.522273497 #> [881]  0.133609445  0.678789831  1.634276587  1.410833382 -1.506885955 #> [886]  0.300045641  0.261365870 -0.573586889 -0.862171758  0.984684265 #> [891] -0.211207488  1.223045116 -0.327813432 -0.801219401 -0.242876038 #> [896] -0.712437187 -0.188288883 -0.826527026  0.274462949 -0.146531456 #> [901]  1.072922312 -0.318269408  3.255867117 -0.540250595  1.105098777 #> [906]  1.425643846  0.890978717 -0.735263921 -0.018050000 -1.797359568 #> [911] -0.079339395 -1.956246557  1.053873374  1.489343157  1.049472942 #> [916]  0.687886444  1.211206048  1.413832594  0.288863693  1.175393828 #> [921]  0.017488309 -0.746013294  2.033780990 -0.999344758 -1.907334357 #> [926] -2.448475046  0.303480170 -1.147068171 -0.517834921  0.883792083 #> [931]  1.265278902 -1.474083984 -0.431479101  0.483406179 -1.420375952 #> [936] -2.311022574  0.130037520 -0.493123957  0.783712961 -2.620921335 #> [941]  0.245293690  0.009821818 -0.354223282 -0.694288403  1.997988193 #> [946]  0.011082437 -0.347364420  1.330128556  1.331495954 -0.975228831 #> [951] -0.662347481  0.378688652 -0.431827936  1.179955406 -0.558087501 #> [956] -0.508906733  0.345057171  1.462463046 -0.209691946  0.627440658 #> [961]  0.647529011 -1.237116508  0.120430053  0.552421529 -0.190090038 #> [966]  0.051779332  0.542635695  0.309181402  0.084275934 -0.849936059 #> [971] -0.426069191  0.120388928 -2.631001588  1.057130585 -0.815357619 #> [976]  0.301847170 -0.209457454 -0.536298230 -0.596771336  0.279909615 #> [981]  0.421452672 -0.021144485  0.547853333  0.181760636 -0.259484759 #> [986]  1.334531305  0.639483240  0.595579550 -0.144888008 -0.388908064 #> [991]  1.470135380  0.027732701 -1.424858971 -1.968839517  0.418342512 #> [996] -1.081630079 -0.070186988 -0.355292946  0.604273051 #>  #> $param #> [1] \"treatment\" #>  #> $N #> [1] 300 #>  #> $boot_iter #> [1] 999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        40  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.fixest(object = x, param = \"treatment\", B = 999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> $boot_vcov #> NULL #>  #> $boot_coef #> NULL #>  #> attr(,\"class\") #> [1] \"boottest\" voters$split <- sample(1:2, nrow(voters), TRUE)  feols_fits <- fixest::feols(   proposition_vote ~ treatment,    split = ~split,    data = voters )  boot3 <- lapply(   feols_fits,    \\(x) boottest(     x,     B = 999,      param = \"treatment\",     clustid = \"group_id1\"     ) )    boot3 #> $`sample.var: split; sample: 1` #> $point_estimate #> [1] 0.07333333 #>  #> $p_val #> [1] 0.04404404 #>  #> $conf_int #> [1] 0.003736453 0.141213202 #>  #> $p_grid_vals #>  [1] 0.009009009 0.014014014 0.020020020 0.035035035 0.048048048 0.073073073 #>  [7] 0.110110110 0.147147147 0.203203203 0.282282282 0.375375375 0.490490490 #> [13] 0.596596597 0.755755756 0.890890891 0.942942943 0.791791792 0.651651652 #> [19] 0.520520521 0.398398398 0.307307307 0.223223223 0.153153153 0.103103103 #> [25] 0.065065065 0.047047047 #>  #> $grid_vals #>  [1] -0.023056328 -0.016474431 -0.009892533 -0.003310635  0.003271263 #>  [6]  0.009853161  0.016435058  0.023016956  0.029598854  0.036180752 #> [11]  0.042762650  0.049344547  0.055926445  0.062508343  0.069090241 #> [16]  0.075672139  0.082254037  0.088835934  0.095417832  0.101999730 #> [21]  0.108581628  0.115163526  0.121745423  0.128327321  0.134909219 #> [26]  0.141491117 #>  #> $t_stat #> [1] 2.15187 #>  #> $t_boot #>   [1] -0.173405478  2.197641237 -0.697781939  1.093648257 -0.228699543 #>   [6]  1.221376242 -1.013627752  0.447744538  0.741789717 -0.766861237 #>  [11] -0.454975496 -0.953789607 -0.051903541  0.348697265 -0.020070443 #>  [16]  1.763632477  1.046741025 -1.171323886 -0.422503353 -1.681141663 #>  [21]  0.993340605 -0.391077722  0.948283778  0.287154778 -0.865325480 #>  [26]  0.165129152  0.140286480  0.270520998 -0.277777499  0.525142685 #>  [31] -0.741630641 -0.198145834  0.213504957  0.921693237 -0.188401214 #>  [36]  1.612436529  0.060457934 -0.451655275  0.778754357  1.573140885 #>  [41]  0.044627134  0.972983684 -0.270335973 -0.244287438 -0.553948935 #>  [46]  0.372668261  0.384029583 -0.044340575  1.319509615  1.395453182 #>  [51]  0.544239420 -0.355931678 -0.197665720 -1.147733602  0.204809991 #>  [56]  1.988075149  0.028667005 -0.069207284 -1.424142923 -1.575609489 #>  [61] -0.123622705  1.259473147  1.853315199 -0.430031380  0.220821711 #>  [66] -0.835815476  1.148575048 -0.541349096  0.246755709  1.034240974 #>  [71] -1.443576654  0.028075183 -0.196272707 -1.278774423  2.090303291 #>  [76] -1.850011549  0.701859466 -0.093401178  0.254873517  0.188371003 #>  [81]  0.373076909 -0.244924734  1.726486924  0.044224583  0.810929618 #>  [86] -0.778805091 -1.075672947 -0.060626065  0.548271929 -0.202238530 #>  [91] -0.636977699  1.125181434 -0.900611794  0.986615823  0.392056095 #>  [96] -0.663031812  0.629053744 -0.790092545 -1.416439119  0.076499611 #> [101] -0.762050149  0.511935490 -1.089559381 -1.683857082  0.004032360 #> [106]  1.029896091 -0.012050805 -1.090328810  0.446469655  1.838641466 #> [111] -0.785160572  1.157683282 -1.116385526  0.028021546  2.190423637 #> [116]  0.399503519 -1.053164565 -2.058214202  1.072275517 -1.335340908 #> [121]  0.361141457  0.451418715  0.881877722 -1.575268226  0.186583545 #> [126]  1.548429425 -0.405944547  0.575896950  1.848527120 -1.613385873 #> [131]  2.020575240 -0.461724839 -1.062942694  1.342143071  1.259570627 #> [136]  0.181060832 -0.555897334 -0.428468386 -0.390311074  2.875887726 #> [141]  0.100464309  0.472822737  0.956819004  1.579291712  0.060297628 #> [146]  2.843270547  0.389632026 -2.424219958 -0.969620462  0.622168422 #> [151]  0.365334197 -0.303722770  0.849894672 -0.785203664 -0.181235718 #> [156]  1.113138974  0.367465174  0.832636762  0.004028089  1.714900278 #> [161] -0.642872729 -0.559336516  1.358425539  1.263577715  1.249460494 #> [166]  0.638466001 -0.409142743 -0.863204363 -0.834617200  0.394306283 #> [171]  0.308793686  0.991647334  1.855398442 -2.200558135  0.052770597 #> [176] -1.012264339  0.197039579 -0.341752842 -0.606290578 -0.727533606 #> [181] -0.388627481  1.181338750  0.092496500  2.015829332  0.879873649 #> [186]  0.508609129 -0.601875873 -1.577402785 -2.361608254 -1.330092023 #> [191]  0.708591424 -0.487740545  0.759204210 -1.443028986  1.306660721 #> [196]  0.905144690 -0.724467202  0.410057363  0.342590920 -0.859594410 #> [201] -1.082777350  0.258500124 -0.141285705  0.505767397 -0.925561232 #> [206] -0.044557599  1.983273565 -0.481064312  0.967811498 -2.483890070 #> [211]  0.770620641 -1.073600449  0.636998282 -0.351378621  1.101581625 #> [216]  0.020220572 -0.933193711  1.441215063  0.260219595 -0.076340946 #> [221]  0.752433057  0.986431112 -1.100941360 -1.669029167  0.004046986 #> [226]  1.313800924  1.989029194  0.634755605  0.874009975  0.871501204 #> [231]  0.645755391 -1.967599941  1.784909004 -0.246629101  0.924104481 #> [236] -1.030804041 -0.085839198 -0.469261340  0.045152377 -0.173857655 #> [241]  1.115379681 -0.360820481  1.616697611 -0.897703642 -0.921910726 #> [246]  0.913562469 -0.288216141  0.406332879  0.448604753 -1.670731883 #> [251]  0.012057917 -0.835727098  1.264476736 -0.980258951 -1.164046541 #> [256]  1.232559660  0.694252037 -0.355508481 -0.727998394 -0.673201818 #> [261] -1.668091964  0.157548716  0.303428164 -0.156960824 -0.995494600 #> [266]  0.851491876  1.080521639  0.515137280 -0.385335272 -0.872344897 #> [271] -1.891765811  0.375413507 -0.100326380 -2.392263607  0.205023561 #> [276]  0.488007253  0.357775094  1.515124847  0.117700605  1.017351943 #> [281] -0.456765287 -0.369265612  0.333471840 -1.088936066  1.068679682 #> [286]  1.033441724  1.201456703 -1.253902089  1.112401092  0.004041397 #> [291]  1.463411261 -0.278843552 -1.217430388 -0.254999250  0.084134802 #> [296]  0.561975062 -0.579923614 -0.390718792  1.087770085  1.173487266 #> [301] -1.546155706  1.135636069 -1.015952112 -0.149355357  0.206248444 #> [306]  1.843903960  1.364209231  0.044178516 -0.091975530  0.285424866 #> [311] -0.012080702  0.326585209  1.439555380 -0.436175317 -0.350973018 #> [316] -0.400614895  0.604271982  0.681734955  1.770520943 -1.262169591 #> [321]  1.450430473  1.064990452 -1.086324954  0.108669400  0.702271586 #> [326]  1.292075880  0.181359210  0.591648878  0.856562333  0.300739850 #> [331] -0.140060910  0.848126770 -0.802033500 -0.948377460 -0.573419075 #> [336] -0.279097485  0.499356266 -0.679488814  2.606068892 -0.101390823 #> [341] -0.589068258 -0.093692291  0.274421827  0.292714156 -1.880323319 #> [346] -0.419090422  1.012716475  1.521703301 -0.943474882 -0.789611320 #> [351] -1.544251918 -0.708779318  0.591658817 -0.485020691  0.647988102 #> [356] -0.448296267  0.133391196  0.044713868  0.905189795  0.921039390 #> [361]  1.773790251  2.686072239 -1.568229722 -0.757675807 -0.875960938 #> [366]  0.788476078 -0.036206715  0.523281672 -1.159776333 -0.590818229 #> [371]  0.374252329 -0.255208567 -0.793638673  1.866635297  0.068390104 #> [376] -0.839281263 -1.167878145  0.852601213  0.204315237 -0.799841881 #> [381]  0.108291912 -1.209096722 -0.084856639 -0.084345449  2.270467231 #> [386] -0.687904937  0.230681318  0.100241418 -2.598182748 -1.191279119 #> [391] -0.841399214  1.068444402 -0.044193908 -1.130249068  0.152385375 #> [396] -0.671969371 -1.033323693  1.897129610 -0.076854633  1.244827858 #> [401]  0.338943578  0.904956421  2.457825035  1.071345152 -0.836189503 #> [406] -1.697805050 -0.431097383  1.046855472 -1.829937564  2.297673804 #> [411] -1.395457028 -0.374197720 -0.052370271 -0.180688919  1.269053300 #> [416] -1.724646710  1.380579039  0.697659992 -1.519739946  0.911795005 #> [421] -1.485131317  0.317426242  0.816675944  1.231378508 -0.936044912 #> [426] -0.253573463 -0.190471702  1.061496908 -0.714494050  0.148727048 #> [431] -1.434116916 -0.845566524  2.521626503  0.324531417 -0.774759620 #> [436] -1.138565078  1.626127007 -0.317204361  0.350313929  0.595752200 #> [441] -1.126757731 -1.093676187 -0.535261651  2.944511942  0.892430750 #> [446] -0.100364230 -0.213411518 -1.184073070  2.001847162 -2.209110325 #> [451]  0.630451985 -1.214289421 -1.134861972 -1.233557465 -0.965783265 #> [456]  0.180208046 -0.473662574 -1.137481601  0.320313675  0.239135903 #> [461]  2.185056128  0.586831196 -0.561377770  0.020135926  0.109651624 #> [466]  0.677601247 -0.045154896 -1.414991291 -1.076653525 -2.370053353 #> [471]  1.942545663  0.252779506  1.173031548 -0.194775560  0.855760348 #> [476] -0.639143499 -2.449245925  0.739105091 -1.153944933 -0.336306409 #> [481] -0.060354014 -0.577975014 -0.579683569  0.165385829  0.497577817 #> [486]  0.290607450 -0.172720544 -0.326669831  0.156604915  0.140738455 #> [491]  1.330100624 -1.729806166  0.845468849  0.125158197  0.783748289 #> [496] -0.181690441  1.316238262  0.861839945  0.754558476  1.254674028 #> [501] -0.904905175 -0.437056060 -0.527182333  0.809448495 -0.602542248 #> [506] -1.546486262 -0.176329875  1.071371275  0.100443816 -2.172497171 #> [511]  1.475767314 -0.588568069 -0.012084490 -0.687439721  2.004019426 #> [516] -0.558870892  1.316998080 -0.181283263 -1.057490340  0.092759565 #> [521] -0.973694746  0.447373815 -0.157053676  1.192921445 -1.746931168 #> [526]  1.481924380 -1.268181742 -1.043906612 -1.096438485  2.417417978 #> [531]  0.700787338 -0.493976562  0.476041643 -1.173292960  0.467243158 #> [536]  0.052412967 -0.586289724 -0.012356660  0.076737468 -0.020283980 #> [541]  0.293969132 -0.582224012 -1.256601804  1.369318239  0.052134222 #> [546] -1.645217799 -0.556898286  0.331083392  0.661231196 -0.249670435 #> [551] -2.423352859 -1.289318284  0.143578552 -2.112716655 -1.043672070 #> [556]  0.285572732  0.060170737  0.751005016 -0.796539001  1.350824884 #> [561]  0.221621087 -0.044186300 -0.314457670 -0.713784240  0.076425210 #> [566]  0.365374010 -0.450490472  0.197837872  0.215638416 -1.649924027 #> [571]  0.781487341 -0.176185629  0.165242203 -0.465661725  0.612236493 #> [576]  0.207033492 -1.123898090 -0.961797456 -1.411517988  0.426796610 #> [581]  0.974106872  0.611274579  0.052992362 -0.093090863 -0.268827742 #> [586]  0.769820527 -0.335933968 -0.635323560 -0.497272907 -0.028726965 #> [591] -1.064903566 -1.219195520  2.417527301  0.269501945  0.339774803 #> [596] -0.578991477 -1.831317308 -0.116306453  0.108347395 -1.067722129 #> [601]  1.186494141 -0.962660541 -0.778654661 -1.612205875 -2.757853575 #> [606] -0.440153523 -1.356432639 -0.718521635 -0.925629028 -1.938171471 #> [611] -0.290303046  0.672931982  0.116985153 -0.742644320  0.012058215 #> [616] -0.029463101  0.310839703 -0.455888751  1.101687106  2.999881969 #> [621]  0.333250754 -0.068432063 -0.582573690  0.770983650  1.962991287 #> [626]  0.116500251  1.220657667  0.485030751  0.718474413 -1.031159196 #> [631]  0.888782194 -0.441279000 -1.365310029  0.341667446  0.153524771 #> [636]  0.004026926 -0.804369000  0.721419107  1.561039951  0.028216345 #> [641] -0.757872628  0.052477595  0.182562687  1.946111842  1.044433278 #> [646]  1.052769313 -0.833581005 -0.286527961  1.328241961 -1.637999585 #> [651] -0.583387120 -1.676016020 -0.462503357 -0.948268039  0.592487051 #> [656]  0.336802319 -1.529849734  0.326168318  0.799295665  0.433680546 #> [661]  1.197838848  0.676096814 -0.518416123 -2.469022931  0.945387354 #> [666] -0.237087254 -0.069453334  0.028080769  0.278071402  0.264593299 #> [671] -0.406428349  2.080405242  0.230271368  1.147633024 -2.494129582 #> [676] -0.135872497 -0.204505632 -0.132680095  2.045875243  0.317181401 #> [681] -0.481716059  1.972792289  0.416763507  0.601496853 -0.261570705 #> [686]  0.927427198 -0.836741829 -0.317179244 -1.339101992  0.665888921 #> [691] -0.838850078 -0.732213210 -0.554353868  1.244320815 -0.706541218 #> [696]  0.441580200  1.626027579 -1.933485077 -0.301637398  1.105875137 #> [701]  0.028131361  1.421975036 -1.798129218 -2.707269496 -0.044315625 #> [706] -1.828553667 -0.869836543  0.835859736 -0.683140509 -1.698887077 #> [711] -0.795915761  2.319072116 -1.339429472  0.637752954 -0.174364187 #> [716]  0.725149833 -0.052638169 -0.164213091 -0.189389129 -1.944027766 #> [721]  0.101093077 -0.101589197  0.549714724 -0.173703316 -0.909365966 #> [726]  0.028882683 -0.553443000 -0.918154669  0.060192931  0.564053812 #> [731]  0.466131670 -1.895568146 -0.503210295  0.740653508 -0.441866705 #> [736]  1.514603126 -0.304913920  0.441097716 -2.844135261 -0.928529025 #> [741] -0.273817156  0.545682423  0.220755704  0.846950096 -0.374971401 #> [746]  1.755271816  1.725611410  1.034882154 -1.920933118  0.847628946 #> [751]  0.718634739 -0.294439305  0.317878768  0.919791753  0.297549095 #> [756]  0.012137239  0.261894476 -0.100595040  0.507674474  0.875234492 #> [761]  0.585955026 -0.618213034  0.963831610  1.090116078 -2.199530018 #> [766] -0.948828004 -0.553634144 -1.323062221 -1.601768710 -0.108604353 #> [771] -0.506132165  0.812616920  0.279445064  1.261728788 -0.256413645 #> [776]  1.361117957 -1.519460874  1.406945352  0.348992715 -0.700361012 #> [781]  0.759296133  0.229526980 -2.061110209 -0.576824417  0.165304442 #> [786]  0.246402428  0.528651289 -0.825499034 -0.239709337  0.386282920 #> [791] -0.563956754  0.380078243 -0.574036683  0.560733072  1.924581313 #> [796]  0.682146487 -0.384582953 -1.556516986  0.699774866  1.542800212 #> [801] -1.230727043 -1.863132638 -0.430122721  0.957882793  0.044398432 #> [806] -0.099986611 -0.151302472 -0.653952246  0.084456667 -2.681763224 #> [811] -0.493427742  0.801069648 -1.068231482  0.726923626 -0.775367824 #> [816]  1.408145955  0.118320849  0.092558345  0.935872211 -1.098662497 #> [821] -0.284180797  0.444807919  1.241574890  0.012177507 -0.762683926 #> [826] -1.415794045 -0.878102625  1.629119031 -0.878013627 -0.205660571 #> [831] -0.758380412 -1.123527902 -1.635854999  0.054001319 -0.189146628 #> [836] -0.680950633 -0.605791932  0.052021237 -0.746243662 -1.255012997 #> [841] -1.182816229  0.036158830  0.288562364  0.450640625  0.173310985 #> [846] -1.288377193  0.535646043 -0.958265595  1.597904241 -0.157522403 #> [851] -0.872240675 -0.172728482 -1.231635818 -0.909376690  1.204193886 #> [856] -1.636056271  0.711321844  0.892561841 -1.377247905 -0.452148711 #> [861] -0.368645408 -0.028127851 -0.070346906 -0.976196201 -0.326098337 #> [866]  0.781272815 -3.307621690  3.503521440 -0.310032114  0.918797241 #> [871] -0.583968532 -0.393284823 -0.547750086 -1.318993384  0.101817736 #> [876] -1.770440797 -0.739462980  0.857593814 -0.305684875  0.539915155 #> [881] -1.535179495 -0.608880386  0.804735325 -1.751689806  0.803187805 #> [886]  1.359979154  0.207153160 -0.092694001  0.299536855 -0.381005050 #> [891] -0.426552806 -0.012151305  0.053614241  0.911554463 -0.326594778 #> [896] -2.355295573  1.934603648  0.228375675  0.441798707  0.221437878 #> [901] -0.415712662 -0.913249784 -1.515475422  1.022377713 -0.551780820 #> [906] -0.549774303 -0.101992852  1.885697545  0.205187331  2.155429762 #> [911] -1.107816897  0.450559204 -0.173980353  0.148701342  0.715729206 #> [916] -1.208820612  3.447371407  0.020171984 -1.046584020 -0.888529293 #> [921]  0.794686227 -0.284980956 -0.628799345  0.649343725 -0.192048418 #> [926]  0.950327178  0.554993552 -0.425561553 -0.839855066  0.135210492 #> [931]  1.413326587  2.266283470 -0.622175819  0.293181576  0.932483297 #> [936]  0.500608925 -1.194668775 -0.808844829 -0.012104619  0.132555882 #> [941]  0.052300668  1.612258008  0.601969637  0.164932136 -1.336806459 #> [946]  0.272926892 -0.293631958 -0.860434201  0.245808825  1.227147414 #> [951] -0.544077023 -0.020112348 -1.350232326 -0.934532787  1.657208351 #> [956]  2.751765252  0.205782713 -1.310284737  0.020345678 -1.440588449 #> [961] -0.807785569 -0.124594460  0.157635600  1.113425363 -1.997745511 #> [966] -1.122882985 -0.310677319 -1.603551841 -0.060351661  0.362814575 #> [971]  2.511016117  1.186864604  1.546363922 -0.918500588  0.946255555 #> [976] -2.161523261  0.869431107  0.036274015  1.163895588  0.454827638 #> [981]  0.248749850  0.084381941  1.803040252  1.983984530 -1.632633033 #> [986] -1.578832679  0.580958730 -2.535021130  0.196772953 -1.167807634 #> [991]  1.148905579 -1.482830613  1.309338088  0.662114204  0.858026786 #> [996] -1.266147102 -0.682125356 -0.294434098 -0.182887058 #>  #> $param #> [1] \"treatment\" #>  #> $N #> [1] 165 #>  #> $boot_iter #> [1] 999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        40  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.fixest(object = x, param = \"treatment\", B = 999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> $boot_vcov #> NULL #>  #> $boot_coef #> NULL #>  #> attr(,\"class\") #> [1] \"boottest\" #>  #> $`sample.var: split; sample: 2` #> $point_estimate #> [1] 0.1054862 #>  #> $p_val #> [1] 0.009009009 #>  #> $conf_int #> [1] 0.0286192 0.1840056 #>  #> $p_grid_vals #>  [1] 0.011011011 0.017017017 0.030030030 0.046046046 0.070070070 0.100100100 #>  [7] 0.156156156 0.235235235 0.344344344 0.463463463 0.596596597 0.750750751 #> [13] 0.923923924 0.921921922 0.741741742 0.571571572 0.440440440 0.320320320 #> [19] 0.208208208 0.139139139 0.098098098 0.067067067 0.051051051 0.028028028 #> [25] 0.016016016 0.007007007 #>  #> $grid_vals #>  [1] 0.002340981 0.010592596 0.018844211 0.027095827 0.035347442 0.043599058 #>  [7] 0.051850673 0.060102288 0.068353904 0.076605519 0.084857135 0.093108750 #> [13] 0.101360365 0.109611981 0.117863596 0.126115212 0.134366827 0.142618442 #> [19] 0.150870058 0.159121673 0.167373289 0.175624904 0.183876519 0.192128135 #> [25] 0.200379750 0.208631366 #>  #> $t_stat #> [1] 2.892621 #>  #> $t_boot #>   [1]  1.448643007 -0.650979660 -0.952833277 -1.802894812  0.804171004 #>   [6] -0.038552390  1.384415572  0.559803630  0.569767737 -0.257652247 #>  [11]  0.720364223 -0.864348435  0.581136041 -1.006996456 -0.704702610 #>  [16]  0.171127627  0.541945226 -0.160727735 -0.204033595  2.066434944 #>  [21] -0.372355221 -0.640991279  1.653139420 -0.713973000 -0.033474131 #>  [26]  1.189247181  1.147611420 -0.625764766 -0.017818915  2.044143926 #>  [31]  0.410281426  1.307612597 -0.998651886  0.323293754  0.248408574 #>  [36]  0.901303620 -0.110931554  1.077416102  0.611400852 -1.221398014 #>  [41]  0.810277273 -0.809064203 -1.876439745 -0.764455524  0.007639808 #>  [46] -0.564915112  0.125935676  1.515122019  0.976312244 -1.148032368 #>  [51] -0.271197399  0.988026777  0.877178174 -1.217213297  1.017881357 #>  [56]  0.716297264 -1.085251807 -3.091137779  3.165326036 -2.672063106 #>  [61] -0.322229604  0.613261068 -2.548214599 -1.213097209  0.153398012 #>  [66]  0.648886978  0.018139956  0.895041294  1.657438073 -0.667794068 #>  [71]  1.455301045 -0.596039484 -0.531760856 -0.080138070  0.728065659 #>  [76] -0.707633834 -1.605107303  1.880187412  1.126071169 -2.228544793 #>  [81]  2.251240208 -1.101139542  1.273185710 -0.432309354  0.795698549 #>  [86] -2.222305150  0.126030329 -0.321434880  1.201421171 -1.316281754 #>  [91] -0.189168547  0.378963760  0.033917000 -1.591713873 -0.099303197 #>  [96] -0.054333847  0.042931438 -0.507324948  0.690063805 -0.702447113 #> [101] -1.014836104 -0.598973938 -0.744273273  0.530792500 -0.970092299 #> [106]  0.926812027 -1.084522214  1.847156062  0.179013426 -0.685733845 #> [111]  1.487350006  1.883425345 -0.792861455  0.723458564 -1.650018473 #> [116] -0.505007887 -0.094029194 -0.582069779  0.159081430 -0.916135641 #> [121] -0.104001847 -2.179531295  0.544495824  0.002812729  0.038761338 #> [126]  0.509892508 -0.226697257 -2.467385643 -0.152664027 -0.614207010 #> [131] -0.210185139 -2.245291667 -0.201938203 -0.180970505  0.194042825 #> [136]  1.116680482  0.440747653 -0.878320954 -0.230256617  1.771611016 #> [141]  0.008234186  0.911162974  1.607817104  0.170045877 -0.085420257 #> [146]  0.110205352 -2.666838848  1.479516360 -0.002784630 -0.730905767 #> [151] -0.988203622  1.919454785  1.574904022  0.902320846  0.967408003 #> [156]  0.116443985 -1.053108181  0.469360003  0.610083606  1.937813204 #> [161]  1.160787302 -0.677647416 -1.011107550 -0.250019640  1.421210101 #> [166] -0.790851844  0.203638829 -1.948486579 -0.054243590  0.402140263 #> [171] -1.067253050  1.034354679 -0.340065684 -0.147027397  0.080414808 #> [176] -0.855425259  0.012349204 -1.437056501  0.705984715  0.069793715 #> [181]  1.096963553 -0.007609800  2.000512115 -0.594297440 -0.708147202 #> [186]  1.058498118  0.691954811  0.218400425 -1.375516150  0.269927539 #> [191] -2.444248605  0.688609048 -0.228041467  0.574409979 -0.955868366 #> [196] -0.043168970 -0.063474141  1.307547606 -1.826056799 -0.044173964 #> [201] -0.028578141 -0.069715309 -0.627498742 -0.013134653  0.830305884 #> [206] -0.702943840  1.788924827  0.185981226 -1.525806378  0.759227754 #> [211] -1.121898090 -0.947428571  0.966591532  1.597905183  0.474869458 #> [216] -0.022852088  0.431410329  0.737695360  1.044734528  0.609006387 #> [221] -1.579711751  1.475628146 -0.094897835 -1.773455966  1.568640070 #> [226]  0.661741627 -0.090580876  0.811444253 -0.303925308  1.657952466 #> [231] -0.435146551  1.664338048  2.017276620  0.348133077  1.776692977 #> [236]  0.719517399 -1.585954188 -0.147028953 -1.558501817 -0.156473331 #> [241] -1.124673292 -2.251174292 -0.017864122 -1.955797291  0.176235141 #> [246] -1.037884531  0.013202517 -2.802031056  1.952609864 -0.584742184 #> [251] -1.521117117  2.251875725  0.163202138 -0.084825774  3.770893737 #> [256]  0.624517370  0.650338992  0.778033837  0.341724945 -1.122689212 #> [261]  1.741048084 -0.598711519 -0.498724907  1.773922081 -0.324034748 #> [266] -1.275842761  1.175679577 -0.435328940 -0.818375227 -0.987503842 #> [271]  1.308291585 -1.212552692  1.386456166 -0.129795482 -0.173532955 #> [276]  0.121056624  0.395384907  1.556375738 -2.634351789  1.745434042 #> [281]  0.657028313 -0.081084029  0.669162043  0.268950876  0.907352827 #> [286] -0.122175858 -0.775660913 -0.146227084  1.305740309 -0.078951404 #> [291]  1.983083768  0.911619413  0.038111554  0.757645688 -0.813340442 #> [296]  1.072811688 -2.216666087 -0.852456828 -1.680476368 -0.152684652 #> [301]  0.008278101  0.445468752 -0.598789137 -1.972204405  1.526797243 #> [306] -1.656133671  0.484318270  0.677710524 -0.209078369  0.023625591 #> [311] -0.821871740 -1.115815884 -0.420603421  0.579117780  0.446687773 #> [316] -0.316224689  0.152813535 -0.553635915  0.220076781 -0.481871403 #> [321]  0.114840180  0.252359712  1.136456797 -0.869167279 -1.327994803 #> [326] -0.399359886  1.182615546 -0.680684188  0.156803979  0.739777930 #> [331] -1.281837454 -0.768891297 -0.225990367 -0.758553940  1.724605554 #> [336] -0.252563218 -2.121332036 -0.232116507 -1.368476261  1.019473884 #> [341]  0.122417468  0.145293422  0.070847547  0.683479127  0.954860949 #> [346]  0.048269181  1.656022205 -1.765631210 -0.177561583  1.360191341 #> [351]  0.333005418 -0.904979287  1.317572636  0.764199572 -0.194111378 #> [356]  0.742910072  0.767514473 -0.616590297  0.884154330 -1.049041371 #> [361]  0.237124905 -0.842990566 -1.583748617  0.619779748 -1.631955968 #> [366] -0.854593007 -0.094248358 -0.564333661  0.772693200  0.215042506 #> [371]  0.578367621 -0.832112859 -0.828390550  0.540392935  0.940269588 #> [376]  0.028927122  3.205145268  2.979855434 -1.721315781 -1.163225282 #> [381] -0.750425288  0.943657802 -0.243789487  1.511040178 -0.609887612 #> [386]  0.692436844 -1.182228282 -1.095980336  1.653561868 -0.982451076 #> [391]  0.451259404  0.755575408 -0.282931621 -0.515603382  0.313708166 #> [396] -0.378958962  1.210896063 -0.602998353 -0.033402305  0.445116256 #> [401] -1.439373329 -0.801334942  0.085751133  1.798557186  1.124077919 #> [406] -1.070159902 -0.286730650 -1.174938295 -1.506699131 -0.090127967 #> [411] -0.835318066  1.127060717 -0.256423323  1.138874875 -0.207597600 #> [416] -0.751418356  0.263639029  0.332638148  0.214395671 -0.613735877 #> [421]  0.827936753 -0.288670880  1.155030880 -1.503917823  0.287839360 #> [426]  0.013676867  1.983695477  0.916781581  1.524846716 -0.058393822 #> [431]  0.171570184 -0.430550871 -0.940772049 -0.245095781  1.606095198 #> [436] -0.815276185 -0.411558334 -1.884226220  1.206604171 -0.275277909 #> [441]  1.674824641  1.167128827 -1.012363731  0.272334708 -0.105840376 #> [446]  0.655035160 -1.717801649  1.851996769  1.466103305 -0.540113640 #> [451] -0.882193134 -1.776036356 -0.141480555  0.686345977  0.216841185 #> [456] -0.510681376 -1.778857629  0.638726279  0.242605974  0.404118873 #> [461]  0.134494149  2.382172605  0.837209205 -1.095265724 -0.080369092 #> [466]  0.076525660  0.496288863 -0.507462642 -1.378285333  0.896611888 #> [471] -0.286187751  1.290980726 -0.874684503 -2.264731524  1.799451608 #> [476]  0.138084891  0.336328377 -0.048079321  1.215587700 -0.080313815 #> [481] -0.790497523 -1.652298121 -1.306307293 -0.198560721 -0.749869644 #> [486] -1.091859308  0.602817638 -0.632342708 -0.279743794 -0.491878532 #> [491]  1.441043962  0.013163652 -0.871345990 -0.002195007 -0.342387318 #> [496] -0.770973300 -0.017332627 -0.114479322 -1.274539511 -0.784220908 #> [501]  0.137243433 -0.152808720  1.867044234  0.140547303 -0.819468108 #> [506]  0.163228077  0.669900269 -1.198522292 -0.293089279 -0.094621471 #> [511]  0.888827392  1.146623063 -1.660258576  1.468592194 -2.917279083 #> [516] -1.574278372 -0.368858562 -1.016741017 -1.367025715  0.479103478 #> [521]  0.398982760  2.125482435 -0.397618446 -1.619023239 -1.652209356 #> [526] -0.910478643 -0.992694229 -0.261177681  1.765097678 -0.883712778 #> [531] -1.308367293 -0.603565036  0.149206573  1.939477441 -1.721003156 #> [536] -0.105446562 -2.393452353 -1.193261432 -1.596382896 -1.791071417 #> [541] -0.478573534 -0.356871053  2.312704127  0.645837530  0.555129070 #> [546] -0.984141561  1.199269546 -0.735546360 -1.901752553 -2.173775674 #> [551] -0.532952193  0.370433024 -0.607944501 -0.104335975 -0.721538495 #> [556] -0.080307470  0.167895182  0.860740812 -1.859256365 -1.336667759 #> [561]  0.888576643  0.120795081 -0.218450935 -2.736094419  1.580856589 #> [566]  0.486376902 -0.934873580 -0.467260159  0.064317450 -0.158751995 #> [571] -1.239616440  0.967190816 -1.072010724  0.801473238  0.413586513 #> [576]  1.737298063  0.692965058  0.814057278  1.043366970  1.799369050 #> [581] -0.795827281  2.859604886  1.586726304 -0.264760447 -0.200595546 #> [586]  0.770791287  0.899660475 -1.021449182 -1.013825208  0.755030916 #> [591]  0.413136236  0.393561783 -0.120476279  0.721202780 -0.180503012 #> [596]  0.282083322 -0.717209113 -0.394657621 -1.087112517  0.375575648 #> [601] -2.225106996 -1.419807447  0.002762335 -1.740232821 -0.206016331 #> [606] -0.256783173 -2.359067122  1.278207770 -1.578444703  0.631172077 #> [611]  0.656814628 -0.821644599  0.841503127  0.701678992  2.677184479 #> [616] -0.252002153  1.665643717  1.924011294  0.017969003 -1.855832681 #> [621] -0.696441474  0.723715880  0.095851850  0.794878429  0.066761585 #> [626]  1.168694921  0.288075727  1.748263557 -0.533383827  1.102310880 #> [631] -0.069209064  0.800373672  0.252748337  0.986254788  0.817491968 #> [636] -1.186636347  0.496170113  0.698138126 -3.209455826  0.058817739 #> [641] -0.214888240  0.710852844 -0.792197017 -0.191869840  1.013806410 #> [646]  0.893296846  0.947371232  2.053569797 -1.342531319 -2.815799081 #> [651]  0.790039356 -0.114865244 -0.114787672 -1.296592843 -0.243957945 #> [656]  0.048148711 -0.463044607  0.903596805 -0.017342794  0.413597662 #> [661] -0.867798355 -0.012744944 -0.483419447  0.022983736 -0.002475358 #> [666]  0.532921259  0.204390719  0.022838576 -0.464888664  0.604736756 #> [671]  0.251178921 -0.909561426 -1.574521814  1.105839721  0.750208380 #> [676]  0.177262378  1.057615537  1.171991123 -1.843243177  0.261676912 #> [681] -0.877215681  0.562349252  0.141539540  0.044493973 -0.294150900 #> [686]  1.438642963 -1.778918558  0.899316456  0.410806441  0.673865798 #> [691] -1.576569470  0.632985619  1.714411337 -1.090949295 -0.568359041 #> [696] -0.905275510  0.924668675  2.531051886  0.123346428  0.376858735 #> [701] -2.166790995 -0.694828143 -0.485130177  1.372651825  1.511396736 #> [706]  1.370011214  1.316092445 -0.855902493  0.325957154  0.709761977 #> [711] -2.747790329  0.191043944 -1.400236476  0.807726281  0.520757210 #> [716] -2.410806010  0.737702884 -1.574508942  1.741672217  0.304469270 #> [721]  0.705729332  0.132525382 -1.339764538  1.891016630  1.114766902 #> [726]  2.480658151  0.520346327  1.817703227 -0.184145417  0.680335550 #> [731] -1.170189043  0.171189202  0.779733918  0.854145690 -0.972249976 #> [736] -0.064703670 -1.263764374 -0.920110634  1.070289469 -0.157706469 #> [741]  0.013203906 -0.196978844  1.287521313 -0.962058562  0.151666950 #> [746]  0.567533217  0.700612395 -0.538125396 -0.754885294 -0.670168192 #> [751]  0.126923870 -0.145763675  1.575882557  0.830021382  1.376350938 #> [756]  0.322876304 -1.045256115  0.502107971 -2.425262591  1.429062799 #> [761] -1.337642647  1.117193733 -0.017341630 -1.339010484 -0.043785370 #> [766]  0.523269339  1.006926544  0.572619610  1.653927260 -0.131155305 #> [771] -0.927997848  0.653660925 -1.007166877  0.327818800  1.820098192 #> [776]  0.793074047 -0.235455925  0.783320612 -1.214176505 -0.105302187 #> [781] -1.304494724 -0.742979194  0.348129268 -0.301979591  0.785879128 #> [786] -1.327011134  1.285034259  1.047950631  1.508117001 -0.629094537 #> [791] -0.852304486  1.137081535  0.405770174  0.292833417 -1.420760860 #> [796] -2.065944245 -0.064890319  0.879793621  2.279528522  0.817565123 #> [801] -1.722628096 -0.924465519 -0.746300897 -1.743414764 -1.713965640 #> [806]  0.208474491 -0.126342769  0.161990101 -1.117366033  0.859890175 #> [811]  1.193651010  1.145146673 -0.819597005 -0.830768375  0.131477214 #> [816] -1.501118933 -0.845977434 -0.898557333 -0.012584917  0.496012988 #> [821] -0.691494975  0.451305792  0.693603095  0.805886054 -0.697405830 #> [826] -0.090162215  1.392348961  0.591267203 -0.814663991  1.234364948 #> [831]  0.918445153  0.641923354  0.198017221 -0.569668138 -0.301403680 #> [836]  0.089473398  0.779647325 -0.007628220 -1.118497991 -0.966196410 #> [841]  2.131339852  0.766826795 -0.013126351  0.881232466 -1.673409572 #> [846] -0.986780485 -1.081510020 -0.740754563  0.505787884  0.388082529 #> [851] -0.955274288 -1.040487755  1.292038120  2.050212561  1.704498746 #> [856]  0.843808007  0.461649826  0.313929797  1.060986160  0.095522958 #> [861] -0.741157540  1.420446632 -0.256926112  1.332471679 -0.450071608 #> [866]  0.200255630  1.435234217 -0.012588015 -0.173162216  0.783279997 #> [871] -0.281604455 -2.132777069  0.098204476  1.283010424  0.622022921 #> [876]  0.340250220  0.306477009  1.015987513 -1.076000504  0.837166820 #> [881]  0.516264972 -1.812892298  0.420883917 -0.616819829 -1.682288629 #> [886] -0.918826142 -0.844406076  0.898690713 -0.213987244 -1.320881044 #> [891]  0.267977815  0.631581769 -1.998186566 -1.892906057  0.865551222 #> [896]  1.658289862  0.271602544  0.599591603  0.205441560 -1.138948142 #> [901] -0.205650146  1.115181265 -1.619590728  2.846783008  1.717585550 #> [906]  0.762689143  1.166115689  0.180685678  2.000492544 -3.349243681 #> [911]  0.527448557  0.974861128  0.981744237  1.086041653  0.343883356 #> [916]  0.696262580  1.860764062 -0.060083945 -1.035471545  0.497540692 #> [921]  0.915434980  0.201759318  1.299062022 -0.095149823  0.665626407 #> [926] -3.138923422  0.494723681 -0.027686415  1.277266413  0.491685091 #> [931]  0.833165790 -1.094765994 -0.935784243 -1.224746026 -0.973658863 #> [936]  1.627655190  0.784629456  0.266244298  0.670458190  1.714042703 #> [941]  0.744627775  0.851358312 -1.420774741  0.490442348  0.781790212 #> [946] -0.990457016 -0.013131018 -1.127627932  0.150604950 -1.751478900 #> [951] -2.528673569 -0.007614238 -0.711628917  0.681998952 -1.286750180 #> [956]  0.188767165 -1.215425049 -0.333511552 -0.684438080  0.282444098 #> [961]  0.059004638  1.310613245  0.415983102  0.770503593  0.002094354 #> [966] -0.220975462 -0.599635000 -1.197369821  0.771326754  0.583585811 #> [971]  0.460559015  1.509233517  1.334982058  0.142622367  0.511527659 #> [976]  1.385287776  0.240376121  1.231045951 -0.651136599  0.784514010 #> [981]  0.351869312 -0.648146004  0.238117421  2.068572335  1.152453277 #> [986] -0.614245048 -0.420866954  0.942344961  0.453042799  0.675877368 #> [991] -0.823549776 -0.094172067  1.888406750  0.988675858  1.078582233 #> [996] -0.687575476 -0.836219702  1.306157525  0.534344609 #>  #> $param #> [1] \"treatment\" #>  #> $N #> [1] 135 #>  #> $boot_iter #> [1] 999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        39  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.fixest(object = x, param = \"treatment\", B = 999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> $boot_vcov #> NULL #>  #> $boot_coef #> NULL #>  #> attr(,\"class\") #> [1] \"boottest\" feols_fits <- fixest::feols(   proposition_vote ~ treatment | sw(Q1_immigration, Q2_defense),    split = ~split,   data = voters )  boot_4 <- lapply(   feols_fits,    \\(x) boottest(     x,      B = 999,     param = \"treatment\",      clustid = \"group_id1\"     ) )    boot_4 #> $`sample.var: split; sample: 1; fixef: Q1_immigration` #> $point_estimate #> [1] 0.08173608 #>  #> $p_val #> [1] 0.01001001 #>  #> $conf_int #> [1] 0.02428395 0.13596065 #>  #> $p_grid_vals #>  [1] 0.01201201 0.01401401 0.02402402 0.03703704 0.05005005 0.06706707 #>  [7] 0.10110110 0.14514515 0.20820821 0.27527528 0.37337337 0.48648649 #> [13] 0.62162162 0.76976977 0.91991992 0.95495495 0.80280280 0.67667668 #> [19] 0.51851852 0.40240240 0.30430430 0.22122122 0.15715716 0.10910911 #> [25] 0.07507508 0.04204204 #>  #> $grid_vals #>  [1] 0.002796945 0.008187246 0.013577547 0.018967849 0.024358150 0.029748451 #>  [7] 0.035138752 0.040529054 0.045919355 0.051309656 0.056699958 0.062090259 #> [13] 0.067480560 0.072870862 0.078261163 0.083651464 0.089041765 0.094432067 #> [19] 0.099822368 0.105212669 0.110602971 0.115993272 0.121383573 0.126773874 #> [25] 0.132164176 0.137554477 #>  #> $t_stat #> [1] 2.928643 #>  #> $t_boot #>   [1]  0.6116300183  1.4417256647  2.7613573078 -0.7882293032 -0.5948656798 #>   [6] -0.9869594569 -0.0614730469  1.7833488802  0.1218472474  0.0687146736 #>  [11]  0.6669713389  1.4993453525 -1.0436264382  2.1982420741  0.6659131260 #>  [16] -1.4046982440  0.0467289415 -1.7102837347 -0.3479725632  1.2148950740 #>  [21]  0.9708358959  0.3700282867 -0.8478123269  0.5894970880 -0.2132999919 #>  [26] -0.2706625136  0.0562298024  0.4190213692 -0.1297995794  0.3504346767 #>  [31]  0.2800357605  0.7478399467  0.5542433914 -2.6793372471  0.1614752959 #>  [36]  0.4459419405 -0.5482467927  1.2724231319  1.0459643968  0.7412539864 #>  [41] -1.3032871537  0.8333758348  1.2611723289  1.7233573894  0.9515779473 #>  [46]  2.0926288799  0.8221408644  0.2009505188  0.5087636603 -0.7187210278 #>  [51]  1.2704414464  0.4883821646  0.6032292582  0.9105362480 -1.0019871754 #>  [56] -0.5956233742 -0.5594933636  1.3990876572 -0.3009940237  0.5585418776 #>  [61] -2.6050258553  0.3659951062 -1.1952549027 -1.1499947782  0.0759394061 #>  [66] -1.0910517534 -0.1039509813 -0.3271422478 -0.5548500937  1.4956713546 #>  [71]  1.1676369067 -0.0489346575 -0.0431026145 -0.8566232232 -0.2857849603 #>  [76] -0.1185498289  0.2681742902  0.3736068956  0.4251036392  1.3062744211 #>  [81]  0.4769501591 -0.1253486799  0.4335042952  2.5736319784 -1.3813107707 #>  [86]  0.2454207455 -0.3036024723 -0.1159557303  0.0268949879 -0.2650971719 #>  [91]  1.9919499748  0.4484498302 -0.1807857784 -0.1177061462  0.5906993973 #>  [96] -1.0139302120 -0.1311707595 -1.4060080655 -1.5368812185 -0.2944833919 #> [101]  0.6533196948  0.1551102700  0.1844076794  0.3564556143  0.2359965732 #> [106]  1.3540508773  1.9086109173  0.9551425524  1.1256827913  1.9716755935 #> [111] -1.5032651379 -0.3063615142 -0.5103172798 -0.7049526439 -0.0392122995 #> [116]  1.6709545647  0.2559705195  1.6324849082  0.7338662230 -0.5991975973 #> [121] -0.7000043079 -0.3571007096  1.1737572338  0.0330395855  1.0138230259 #> [126] -1.2377509759  1.4271797516  0.2178904241  0.7833261914  0.4744554334 #> [131] -0.4889182440  0.5443428458  0.5160429076 -0.0001150103 -0.4576826390 #> [136] -1.8585177768 -0.5046452701  0.0030359797 -0.5565106912  1.6020304800 #> [141] -1.2606580195 -0.0403062643 -3.3597990717 -0.3313853589  1.2002546402 #> [146] -0.4359936753 -1.1071127075 -1.8011598607  0.1972133154 -0.5624501866 #> [151] -0.3881939227 -0.9483740235  1.8545569825 -0.5500902645 -0.0204532557 #> [156]  0.0952522831 -0.6775081161  0.5801045812 -0.3130564329 -0.6621366999 #> [161] -0.1914367780 -0.4721246841  0.5994205150 -2.0326785197  1.3022377961 #> [166]  0.7637231766  0.3461870112  0.6535344246  1.4587767439 -0.1548224817 #> [171] -0.1094490095  0.9668057251 -0.8929004907 -1.1131561171 -1.1482382112 #> [176] -0.7905382264 -0.8127646795  2.3676498978  0.0143192571  1.0935886068 #> [181]  0.0393793097  0.6368552841  0.8663498755  0.5364102575 -0.6942303570 #> [186] -0.1475454316  0.0652022445 -3.7336911337 -0.1507106063 -1.2355836099 #> [191] -0.7075984966 -0.4630698319  0.1031457966 -0.9924890412  0.7970161643 #> [196]  0.6032032263  0.8267718176  0.5914473734  0.2885033439 -2.5900620027 #> [201] -1.0690936403  0.3029820372  1.0407225019 -0.5314993563  0.1000068398 #> [206] -0.7175675794  1.7164279127 -1.0415072308 -0.4093078528 -0.7556785121 #> [211] -0.2644307612 -1.9847379812  1.4147763590  0.6150529011  0.8324414488 #> [216]  1.2908294403  0.5071738949 -0.7853247551  2.1291798739 -0.9659608301 #> [221] -1.3527227368 -0.9699718841  0.4894557671 -0.9569451530 -0.2925757597 #> [226]  0.5895180108  0.9777597539 -0.8058805713 -1.3997124353 -1.0090532612 #> [231] -0.3971514922  1.1289327901  0.5462644369  1.3431965063  0.5553875725 #> [236]  0.3650851125  0.2759033098 -0.1506634798  1.2165618164 -0.8969026082 #> [241] -0.4662410470 -0.7531880300  1.5810561162  1.2968088981  0.4720065578 #> [246]  0.4746719165 -1.7891402395 -0.5732035712 -0.3704686072  0.8609265426 #> [251]  0.0754021493 -1.3438677407  0.9934317995  2.4312650119  0.1624196984 #> [256]  0.7972600893  0.2188320621  1.3628302020 -0.6801319282 -0.9322594820 #> [261]  0.1985680872  0.1288131264 -0.1508758754 -0.6847401932  1.0666960130 #> [266]  0.1101201459 -0.1448418879  0.0005488657  1.2233617439  0.7910008847 #> [271] -3.4121447319  0.1012649324 -0.9049235833 -0.7830090369 -0.3335215981 #> [276] -1.3733082158  0.0904780214 -1.6672638340  0.7980480404 -0.5558028044 #> [281] -0.3765013644  0.0527337456  1.1939346850 -0.4558515970  0.1959200252 #> [286]  0.0949766059 -0.8188592795  0.2833594700 -1.1567896062 -0.6912414183 #> [291] -0.0069683748 -0.0017444971 -1.1718761515  1.1117703744 -0.9025490845 #> [296]  0.8204804426 -1.2398763393  1.3238034710 -0.8591310978  0.2216656735 #> [301]  0.2793064267 -0.8905523729  0.6224126680 -0.2665610793  2.3672707301 #> [306] -0.6827685543 -0.4756231644  0.9346738935 -0.3531436186  0.8143448286 #> [311]  0.1476207951 -0.7290815453 -0.2254579053  0.0680341372 -0.0587925344 #> [316]  1.1163620254  0.3691672135  1.8675487355 -1.1922869356  1.2215243915 #> [321] -0.1439345983  0.3193039317 -2.9405522663  2.3172636092  0.6526926735 #> [326]  0.0653448713 -1.0771039342  0.3552322034  0.4209401671  1.9160753096 #> [331]  0.4061858641  0.4961370545 -0.3096828952 -1.2325797683 -0.4356696471 #> [336] -1.6608875612 -1.2675763549 -0.3028712011  0.1782840600 -1.6401149718 #> [341] -2.3572222652  0.6882153832 -1.1054778651  0.1554382818 -0.4928876355 #> [346] -0.0926506055  1.2557463419 -0.6647828242 -1.2897276047  0.6120171378 #> [351]  0.1702355908 -0.0211688112  1.2439065627 -0.4671999528 -0.2387264208 #> [356] -0.2577392382  1.0461878207  0.3709859319 -0.9331310805  0.3779331614 #> [361] -0.1532639424  1.1135271215  0.6540210389 -0.0049265799 -0.0489696491 #> [366]  0.5577592642 -3.1257601720 -1.0188699399 -0.2836491015  0.1577069977 #> [371]  0.3814056999 -0.6874614991 -0.2902886362 -1.5202122678 -0.0765545672 #> [376] -1.4805533133 -0.4086977208 -0.1496110348 -0.9822906022 -0.7877022431 #> [381]  2.2815854601 -0.7075658368 -1.4724178512  2.3730758422  0.3112841939 #> [386]  0.8485697976  0.7989163661 -1.4130789341 -0.4108643345 -0.2067057038 #> [391] -3.2336552996  1.6111370178  0.9206547030  0.1437696015  1.8261370976 #> [396]  0.8291742154 -1.4200233656  1.0938586321 -1.5952111019 -0.4276004246 #> [401]  0.8129167057  0.0898187443  0.5933619841  2.6889242261 -0.5940003330 #> [406] -0.0532022301 -0.3980208346  1.0865413711  0.9040307417 -0.7009422173 #> [411] -1.0998874253 -0.5065884714  1.3356945383 -1.9129436815 -0.3351158098 #> [416] -0.3867316288  0.9764211997  0.6793411550 -0.6180116597  0.7424498637 #> [421] -0.9136463345 -0.5235253107 -0.0740661407  0.1773980747 -0.7004163126 #> [426]  0.3255231367  1.5709795669  0.6860216535  2.0276050117 -0.2616788066 #> [431]  2.0942471165  0.6868391667  1.0958155032  1.0528703700 -0.0789529135 #> [436] -0.0896859253  0.9294126007 -0.1860828457  0.1777721683 -0.1024880057 #> [441] -1.9151521271 -0.0939403239 -0.7422421011  0.1732880635  0.3283406904 #> [446]  0.0814073549  0.4919733601 -0.8909680984  1.5339660599  1.8105937223 #> [451]  1.5424546654 -0.8389973689 -1.4293261233 -0.7605759619 -0.6840929036 #> [456]  0.4549798467  1.2000263841  0.6111500830 -0.7650225382 -0.9050479884 #> [461]  1.5542740695 -2.8650820748  0.7416946264 -0.8991373056  1.5334951118 #> [466] -2.3378167320 -0.2566621476  0.8600709927 -1.1666365577 -1.6851793697 #> [471] -0.2252800805 -1.7401095870  1.1871648539 -0.0797683407  0.7933417386 #> [476]  0.2034924533 -0.5493019199 -0.0908770095 -2.2801000397 -2.3235223341 #> [481]  0.5564840833  1.4581616096 -2.2494869323 -0.4826027019  0.9302629366 #> [486] -1.0858490585  1.2084017864  0.0638749276  0.1289425383  0.8139084781 #> [491]  0.9560719088  0.0195402904  0.8772606193  0.5727381548  1.4975267735 #> [496]  1.8109941328  0.9884801558  0.3411457927  0.8827683160  1.0724579360 #> [501]  0.8558613511  0.0670744285 -0.2029819691 -0.5552836570  1.2709594803 #> [506] -0.3245029951 -0.0389689863  0.1872927555 -0.3339274810  0.5031471464 #> [511]  0.0765434109  0.2232820227  1.1650085020 -1.0769130563 -0.4332518770 #> [516]  0.8587279111 -0.5164151555  0.1172604324 -0.6338001687  0.2434582102 #> [521]  2.2806783603 -1.2767802209  0.9396142143  0.3600237511  0.3150765226 #> [526] -1.0090487291 -1.4068235713 -0.6176646137 -0.9547254032 -0.1040213548 #> [531] -1.5466663570  1.0844331460  0.7397255433  0.9886059785  1.2224045998 #> [536] -0.2124598799  1.1703325862  2.1638968637  0.6552922634 -1.9213278773 #> [541]  2.3626486946  1.3278247693  0.4521559389  1.7201060866  1.3247894659 #> [546] -1.7546743075  2.0312357243 -0.1540324919 -0.0652305278 -0.2283203572 #> [551] -1.2726422874  0.5853269561 -0.2060634631 -0.2322127734 -2.0771396873 #> [556] -0.8732199623 -0.6187707740 -0.2887426193  0.8180382568 -2.4747056201 #> [561]  1.1739269263 -0.0715920694 -1.0392299600  0.9341639222  0.3260014465 #> [566]  1.7916550132 -1.1966627106 -0.3833220014  0.1378682057  0.5193108044 #> [571]  0.8739586616  0.1796053639  0.6782382545 -0.0827945585 -0.5775083331 #> [576]  1.4867676637  0.5076300791 -0.1557301005 -1.1469376365  1.1649310902 #> [581] -0.0449597066 -1.1741696463  0.4820862875  0.9422406716  1.7645224643 #> [586]  1.3125656793  0.1724197411 -0.3688457015  0.2819839848  0.1620053970 #> [591] -1.2773800598  1.0413345117 -0.0151163034 -0.6014881503 -1.1759584559 #> [596]  0.2362316018 -0.8705466352 -0.4978829669 -0.3535445610 -0.3782436162 #> [601] -0.1930739498  0.1437345890  0.4171462559  0.6882187533  1.3397295650 #> [606] -0.0760686036 -0.0963438427 -0.1335630144  1.1205131569 -0.3085364220 #> [611] -0.4109007892 -0.9693601956 -1.4303569095 -1.0000991994  3.2011842518 #> [616]  2.1026903608 -1.5855434036 -0.2733408172  0.4174828800 -0.0831973289 #> [621]  0.0797282528 -2.3327583353 -0.9294007651  0.9644625374  0.2444095569 #> [626] -1.4569688113  1.5597858614  0.0891504646  0.2587688700  0.5985327799 #> [631] -0.8642068232  0.8187323072  1.1918665508 -1.9043271048 -1.4231513373 #> [636] -0.3156386692 -0.0928044226 -0.4223525712 -1.7310176662  0.2089153478 #> [641] -0.9793239125  1.1969745809  0.2384270873  0.5585001862  0.0468920936 #> [646] -0.6224648490  0.9965845722 -1.2936885617  1.2842663636 -0.2195944406 #> [651]  0.0827912156  0.9379547778 -0.2213878862  1.0221111598  0.6943119012 #> [656] -0.3342948393 -0.5003296075 -1.1114730169  0.3133913201  0.0251684783 #> [661] -0.2360042386  1.4885920555  0.5956261953  0.2446769290  0.5201445299 #> [666] -0.0920331824  0.3454260093 -0.8487141446  1.3445575645  0.9633196770 #> [671]  0.4144190677  0.3858440928  0.0257704725  2.2942134274 -0.5037114393 #> [676]  1.1234148206  1.0754089536 -1.6030456877  0.4341769894  0.4895071679 #> [681]  0.2923943784 -0.4753412114  0.8193498767 -0.2797792154  0.4207727605 #> [686] -2.6317142411 -0.7234110789  0.7999522403 -1.4372587627 -1.2801000804 #> [691] -1.2760559033 -2.1170815226 -0.9265438883  0.2184379237 -0.4491479732 #> [696]  0.7522742509 -1.4788268893  0.6809052754  2.8543205009  0.7275967503 #> [701] -0.4541355510 -0.4309292580  0.7573939311 -1.0785141160 -0.0635526850 #> [706]  1.4949320679 -0.6710564950 -0.0744923491 -0.6900902986 -1.3117137453 #> [711] -0.3539351849 -1.5243374598  0.6967147543  1.0352461692  0.3834033741 #> [716] -0.2748537051 -0.9218526510 -0.8044839960  0.4103097765 -0.4896168375 #> [721]  0.4478280625  0.6462841402 -1.2004300279 -0.8484292193 -0.6072170505 #> [726]  1.3686372266 -0.8719058756 -0.2317433831  0.2238841818  0.1363071276 #> [731] -0.3313772646  0.4376949404  0.5191118672 -0.9764164946  1.3743781043 #> [736] -0.6176574549  0.2189736000  0.9400473337  1.3141894958 -2.0881024259 #> [741] -2.1859340707 -0.2084794113  0.4208366688 -0.3955741222  0.0448907559 #> [746]  1.3399168006  0.0225335399  1.2093671372 -0.0714160720 -0.4900213537 #> [751] -1.1874454531  1.1190761515 -0.4490713594  0.4183306832 -0.5541495239 #> [756]  0.4932965208  0.6994243635  0.8280414669 -0.9617059698  0.5539898527 #> [761]  0.1696322650  0.0534170279 -1.6949889432  0.0960698724  1.6753916948 #> [766]  1.1942706495  1.1013633153  0.1067997366 -0.1404584459 -1.8788081641 #> [771]  0.0131613428 -0.6527017779 -1.6623835503  1.1720192556  0.8056273649 #> [776] -2.1007622673  1.7908261030 -0.0302339280 -0.5591821523 -1.9353458620 #> [781] -1.0005287465  0.0337857754  1.1827293969 -0.0843377871 -0.0775290825 #> [786] -1.7493752430 -0.4277916196 -0.5100732317 -0.9629910594  0.0155948155 #> [791] -0.8657407984 -0.9815404714 -0.1938806854 -1.5127226064 -0.4476150839 #> [796] -2.1259588698 -0.3524692201  0.4036312576 -0.4874858281 -0.5391161331 #> [801] -1.5674103516  1.2316322675 -0.7664068342 -1.0144756951  1.1289162375 #> [806] -0.3616175396 -0.7995321527 -0.4559702328 -1.3728084466 -0.6813672561 #> [811]  0.5770927732 -0.2190383645  1.8887113181  1.1359481527 -1.1915441847 #> [816] -1.2200814978 -0.1220074019 -0.3712922370 -0.0140676432 -1.2289619910 #> [821]  2.0044763537  0.7332854024  1.4298037978  0.3400636751 -1.6952940022 #> [826]  0.6399243892  2.2437013064 -2.5354831812  1.5332467589 -1.1781265771 #> [831]  1.2853734225  1.4216961963  0.0306720072  0.5267427775 -1.1369148113 #> [836] -0.0781567572  1.6341797855  0.6004656574  0.9134117146 -0.2421364828 #> [841]  1.1919584140 -2.1380270142  1.0164578715 -0.5075404904  0.4645487312 #> [846] -1.1048085816 -1.7185213823 -0.9715850986 -0.7757197967 -0.1857275899 #> [851] -0.1347490353 -0.3264017315 -0.2393249273  0.5304302369 -0.8744903903 #> [856]  0.6324782791  0.6734265195 -0.8602121416 -0.9482774474  0.1211390214 #> [861]  0.1442780931 -1.0995776717  1.2376441129 -0.5402751371  1.6315038403 #> [866] -1.0916000066 -0.3950663887  1.6644587198 -2.9421448050  2.5286321641 #> [871]  1.2474778872  0.6462093795  0.4296726971 -0.3663782664  0.2762140122 #> [876]  0.0858471691 -0.0707708991 -1.6074718408 -0.7873688240 -0.1097738316 #> [881]  0.8419175397 -0.5698747577 -0.7960044962  0.0740469722  0.6700704933 #> [886] -0.5784090619  3.4452087519  0.7723277835  1.3961903437 -0.3137970857 #> [891]  0.4474986688 -1.5830883682  1.3411658582 -0.2337543409  2.1694513164 #> [896]  2.3855411278  0.0340037915 -0.8184380244  0.7076221919 -0.7302342250 #> [901] -1.5977282357 -1.0526294041  0.1702056468 -0.0897433326 -0.6250206323 #> [906]  2.1663370307 -0.5996093049 -1.6883753806 -3.0097233518  0.3284184613 #> [911]  1.1572235437  0.2005529340  1.6872315587  1.1917868688 -0.0130768079 #> [916]  0.6922039662  0.8889753756 -0.4874891588 -0.2320974893 -1.2511808498 #> [921]  0.0011237936 -1.6768006409  0.6098813419  0.0815475933 -2.2748702379 #> [926]  1.2366038385  0.2095898742  0.2508277934 -0.7884645663  0.1731123781 #> [931] -2.4520447591 -0.1924248354 -2.2968638040 -0.3375648527  1.4372310644 #> [936]  1.6977157775  0.1094343333  0.7352569306  0.5663559136 -2.2986695625 #> [941]  0.6916315454  1.5834401378  0.2885972624  0.1818077932  0.5613606390 #> [946] -0.1372376086 -0.6736733431 -0.0761154802  1.5367061807 -1.1006925166 #> [951] -0.5307234087  0.5502093322 -0.7092658670 -1.7987193124  2.2153653591 #> [956] -1.4375540382  0.1868625176  0.3756011338 -0.1955025531 -0.6706747892 #> [961] -1.3148902918  0.3167527838 -1.9556958770  0.3615510446  0.3705766553 #> [966] -1.3865180352 -0.2120998467 -0.2429913011  0.5835778013 -0.8039038162 #> [971] -0.5478816832 -0.9644830499 -0.7563658423 -0.5245226383  0.7256796426 #> [976] -0.7521098445 -0.2748073767 -0.8597245510 -0.6991429037 -0.3118386011 #> [981] -1.8828898539 -0.5051893549  1.3379068745 -0.1478112636  0.4525995776 #> [986] -0.0382769454 -0.2861026208 -2.0920195559 -1.1781059290  0.0416416467 #> [991]  0.4617158165 -1.7308827242  1.5499886352  1.2041857151 -0.3993366844 #> [996] -0.0924466380  0.4285167005  0.3405288236 -0.7853944687 #>  #> $param #> [1] \"treatment\" #>  #> $N #> [1] 165 #>  #> $boot_iter #> [1] 999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        40  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.fixest(object = x, param = \"treatment\", B = 999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> $boot_vcov #> NULL #>  #> $boot_coef #> NULL #>  #> attr(,\"class\") #> [1] \"boottest\" #>  #> $`sample.var: split; sample: 1; fixef: Q2_defense` #> $point_estimate #> [1] 0.08058523 #>  #> $p_val #> [1] 0.02802803 #>  #> $conf_int #> [1] 0.009608787 0.151005355 #>  #> $p_grid_vals #>  [1] 0.004004004 0.016016016 0.029029029 0.043043043 0.074074074 0.104104104 #>  [7] 0.142142142 0.203203203 0.316316316 0.446446446 0.580580581 0.738738739 #> [13] 0.917917918 0.913913914 0.753753754 0.581581582 0.442442442 0.311311311 #> [19] 0.221221221 0.148148148 0.100100100 0.068068068 0.045045045 0.026026026 #> [25] 0.016016016 0.010010010 #>  #> $grid_vals #>  [1] -0.0149918987 -0.0073457286  0.0003004416  0.0079466118  0.0155927820 #>  [6]  0.0232389522  0.0308851224  0.0385312925  0.0461774627  0.0538236329 #> [11]  0.0614698031  0.0691159733  0.0767621435  0.0844083136  0.0920544838 #> [16]  0.0997006540  0.1073468242  0.1149929944  0.1226391646  0.1302853347 #> [21]  0.1379315049  0.1455776751  0.1532238453  0.1608700155  0.1685161857 #> [26]  0.1761623558 #>  #> $t_stat #> [1] 2.38477 #>  #> $t_boot #>   [1] -1.165710185  0.050859355 -0.351880343  2.338765391 -0.583945891 #>   [6] -2.308963784  0.220971268 -0.143001569 -1.250783597 -0.045063349 #>  [11]  1.884976527  0.709221435  0.796796416  1.038912096 -0.288085574 #>  [16] -0.967098993  2.885014744  1.076401364  0.828126819  0.755400235 #>  [21]  0.091654627 -1.251384533  1.084438946 -1.604285471  2.407585368 #>  [26]  1.572795693 -0.098860761 -0.245703847 -1.049126409  0.528246836 #>  [31] -0.701226034  0.152166326  1.267429757 -1.076560877  0.127031117 #>  [36]  1.198797160 -0.872286441 -0.470206711  0.058872817  0.488214059 #>  [41]  1.380202146  0.845719686 -1.147903443 -0.286039312  1.842329793 #>  [46]  0.549577462  0.384707748 -0.001134617 -1.197576507 -0.189224067 #>  [51] -1.571939239  0.248092386  1.618234944  0.390537713 -1.305052799 #>  [56] -0.274175190 -0.533821677 -2.044456113 -0.956263633 -0.801770619 #>  [61]  0.442227578 -0.682474352 -2.566789716 -0.544394107 -0.909789706 #>  [66]  0.558078426 -0.856026823 -2.628165450 -1.459380199  0.777390169 #>  [71]  0.797210694 -1.311304816 -0.164679820  0.709942585  0.425712750 #>  [76] -0.003002438 -0.972282605  0.378614149 -1.864784080  0.263648383 #>  [81] -1.369211223 -0.110514679  0.394378552 -1.063428549 -0.597535305 #>  [86] -0.395040096  1.441813719 -0.761530753  0.244830946 -1.136689263 #>  [91]  0.910207386  0.720843000 -0.653432585  0.658033042 -1.116695320 #>  [96] -2.068070182  0.860253623 -0.966836994  1.334953835  2.939930265 #> [101]  0.178365646 -1.262676103 -0.553822556 -0.350976159 -0.441958535 #> [106] -0.162014777 -0.528643623  0.055539776  0.400710997  0.120638686 #> [111] -0.128087325  0.107018062  0.211514596  0.484358271  2.326210272 #> [116]  0.588028674 -0.509083067  0.611504814  1.204230741 -0.109333487 #> [121]  0.000750616 -1.232488536  0.501058629  0.894535565 -0.975184452 #> [126] -0.711292078 -1.458721582 -0.320887460  0.178057819 -0.262027602 #> [131] -2.812267188 -1.189284431 -0.759872698  0.045575999  0.887655791 #> [136]  0.242542330  0.928077939  0.813536462 -0.127589377 -0.340500497 #> [141] -0.530598100  1.175729330  1.531270843  0.336839792 -0.425480942 #> [146] -1.491119711  0.561181323  1.028777263 -1.025498668  2.336587186 #> [151] -1.460252083 -0.078906533  0.548820449  1.096342818  1.077052409 #> [156] -0.741625974  0.904020376  0.977667906  2.082446287 -0.667720581 #> [161] -0.066689917 -1.261935621 -0.628199492 -0.448110960 -0.447284217 #> [166] -0.342667681  0.659384612  0.365659221  2.083311343  1.676554996 #> [171]  1.640939646 -1.049437166  0.255253209 -1.513724262  0.181803389 #> [176] -0.378939229  0.147598024 -2.520282363 -0.895317238 -0.219685094 #> [181]  0.807217735 -0.933525106 -0.467728320 -1.160548711  0.704888149 #> [186] -0.481128143 -0.221353817  0.131858399  0.400671605  0.264048247 #> [191] -0.542363434 -1.023043783  0.096273355 -0.566334637 -1.156119099 #> [196]  0.575363059  1.021521220  2.696456244  0.084613971 -1.153768065 #> [201]  0.521312648 -0.794590322 -0.081149004 -0.384229045 -0.016175994 #> [206] -0.378265716 -1.348746306  0.922198759 -2.756582249 -1.243779353 #> [211] -0.632444829 -0.119923022  0.997943766 -0.851951468  0.406058323 #> [216] -0.654755351  0.179077965  0.645175543 -0.056259273  0.588164124 #> [221] -0.144102223 -1.078257475  0.411696266  0.024619769  0.168134945 #> [226]  1.806026042 -0.282042695  0.192282968  0.402165882  0.793129148 #> [231]  1.000284787 -0.137924002  0.890135549  1.383910843  1.241479383 #> [236] -0.359184724 -2.036882184 -1.395964224  0.260600118  0.672801921 #> [241] -0.614811396  1.103927776 -0.050269355  0.454852230 -0.098664436 #> [246] -0.404367401  0.188070121 -1.423565746  0.144576969 -0.889850616 #> [251] -0.347925155 -0.855363367 -0.025425681  0.426275033  2.018945664 #> [256]  0.222437920 -0.583004170  1.186247089  1.352493562 -1.944774134 #> [261] -0.412730946  0.065030387  0.378390603  1.547298113  1.708271303 #> [266] -0.160685673 -1.043415318  0.843433583 -0.338996068  1.900438679 #> [271] -0.885207433  1.045942482 -0.813467942  0.898831307  0.135174793 #> [276]  2.820722024 -0.187916676  0.372462725 -0.422621210 -2.647258565 #> [281] -1.743253111 -1.180092717 -0.235065359 -0.566606747  0.160482670 #> [286] -0.660444777 -1.438382637 -0.909775047  1.333628799  0.686520556 #> [291] -0.103023016  0.443884544  0.613867618 -0.619641343 -1.241621709 #> [296] -0.787699136  0.481019556  0.883589797 -0.357205999 -0.023102278 #> [301]  1.222667023  0.029871207 -0.431656403 -2.100690788  0.356074907 #> [306]  2.493757022 -1.487940861  1.357410351  0.588177751 -0.973168389 #> [311]  0.497780684 -0.395101264 -0.233489896 -0.770077912  1.959388662 #> [316] -1.192344700 -0.180499609  1.433167100  0.191778756  0.930560055 #> [321]  0.987949577 -0.095747597 -0.365781487 -0.337234026 -0.947337232 #> [326] -1.047399550 -0.338883465 -0.185587567 -0.854771000  1.216839618 #> [331] -0.317984638  0.260371800  0.781224192 -0.370207910 -0.679930639 #> [336] -0.223969057  0.717654231  0.370796928 -0.225329895 -0.529391591 #> [341] -0.390357148 -0.578474505  2.110961937  0.787154698 -0.611157491 #> [346] -1.245086887 -0.743964800  0.725970370  1.264727890  0.251328287 #> [351]  0.297404722 -0.240040128 -0.692161766 -0.695831256  0.303375740 #> [356] -1.740801946  0.601780267  0.669094578 -0.667439700 -2.061368716 #> [361] -0.988151405  1.087538883 -0.780152346  0.992008448 -0.765907406 #> [366]  0.680044170  1.197807806  1.778026538  0.175088960  0.130175580 #> [371]  0.288109684  0.359333172 -0.744106640 -0.773582866  1.102537506 #> [376]  1.181393842  2.370291131 -2.627074398 -0.006800402  0.331820604 #> [381]  0.708568459 -0.143105671  0.556267772  0.709914052  0.808640811 #> [386]  0.736724471  0.388206797  2.139849097  1.133371913 -0.250133882 #> [391] -0.268958063  1.155948488 -1.043094312 -0.255276784  0.298851318 #> [396]  0.229536485  1.211315570  1.252931540  1.214902750  0.909417509 #> [401]  1.027903741  2.411367479 -0.537980512  2.772378344 -0.112734810 #> [406]  1.472838059 -0.382407202  1.493831481 -0.199013317  0.658290483 #> [411]  0.814032711 -0.181200707  0.530900400  0.300001073  0.052037882 #> [416] -1.188254841  0.518437814  1.073785432 -0.505874499 -2.789068325 #> [421] -0.749017297 -0.903049557  0.152593605  0.378865114 -0.274586386 #> [426] -0.058925633 -1.091375715  0.915500562 -0.843536423 -0.569182485 #> [431]  0.107432700  0.508127369 -0.156540965 -0.126266641 -0.327967527 #> [436]  0.047995250 -0.866157926  0.970436482  0.717489025  0.593617076 #> [441] -0.239929952 -0.853819860 -1.233601299 -0.248110398  0.002600392 #> [446] -0.958660791 -0.124472663 -0.105894766 -1.774369733 -1.951107267 #> [451] -0.882912852 -2.197457785  1.054952172  0.915581693 -1.310040236 #> [456]  1.714092509  0.842779285 -0.717732671  0.175909500 -1.783623036 #> [461] -0.343539532  0.855686896 -0.918505133  0.012531375  1.282963538 #> [466] -1.749393219  0.904907936 -0.255861375  0.633308590 -0.772102950 #> [471] -0.354067445 -0.613317536 -1.437457369 -1.464472822  0.067527066 #> [476]  1.305218875 -0.731816416  0.401382374 -2.404305438  1.601795702 #> [481]  0.856945997  1.674424187  2.321956875  0.672422338 -1.853260511 #> [486]  0.526935277 -1.141622674 -0.045580064 -1.819932864  1.697267505 #> [491]  0.159735334 -0.702784452 -0.709981461 -1.400228941 -0.982687740 #> [496]  2.285753468 -0.110362662  1.541534644  0.023522513  0.286962737 #> [501]  0.345459385  0.254575701 -0.275620207  2.313564775  0.812272871 #> [506] -2.176652517  0.256811944 -0.241324009  0.452760034 -1.265706492 #> [511] -1.873135198 -0.202498264 -0.921501161  1.167014121 -2.121242114 #> [516]  1.100239021 -0.938765674 -0.288894567 -0.836689733  1.302323429 #> [521]  1.418520449  0.180029105  0.652971957  0.509354047  0.685740953 #> [526] -0.324224174 -0.204357938  1.120392651  0.149229817 -0.609606368 #> [531]  2.376431792 -0.602430890 -0.024749561  0.434715190 -0.077096148 #> [536]  0.404093228  0.985530719  0.008376432 -0.776923441 -0.802205065 #> [541]  0.224374992  0.934579708 -0.246566185  1.014776039  1.247573855 #> [546] -0.973494657 -0.687495832  1.040698858 -0.495842912  1.463833688 #> [551]  0.236218326 -0.056583493  2.022140947 -0.147310189 -1.137914261 #> [556]  0.199759995  0.308266583 -1.377539934 -1.699138325 -0.718268260 #> [561]  0.392797279  0.365698338  0.861662275  0.498944413  0.837833163 #> [566]  0.124256917  1.624416644 -1.081417073  1.349147518 -0.043524015 #> [571] -0.100395787 -0.034585256  0.257062373 -0.048688549  0.336979035 #> [576]  1.001265606 -1.306904225  0.033619868 -2.384540294 -0.431267191 #> [581] -0.111539586 -0.953782793 -1.244535016  0.219941675 -1.055075756 #> [586] -1.407533639 -0.491370481 -0.520953822  2.229690927  0.590600293 #> [591]  0.123210616  0.661357954 -1.038960803 -1.067711205 -1.286879549 #> [596] -1.184794550 -0.981786078  0.044489968  0.452117499  0.128651792 #> [601]  1.006462194 -1.162658736  0.437863597 -0.606390580 -0.507466821 #> [606] -0.953786251 -0.704922322  0.678123480  0.737024237 -0.829287012 #> [611]  0.151298072  0.547979877  0.083272498 -0.195108655 -1.440413619 #> [616] -0.016368364 -0.500709164  0.579398055  0.160060534 -0.466818871 #> [621]  0.350068486  0.020120907  0.128928594  0.204112992 -0.083726918 #> [626]  1.122862865 -0.073738597 -0.084802339 -0.701641685 -0.474397415 #> [631]  0.486838201 -0.003179224 -0.152116665 -0.966599033  1.237793612 #> [636]  0.495902457 -0.503229452 -0.769361427  1.115635177 -0.539227006 #> [641] -1.477968366  0.840172139 -0.254255031 -0.731175568  0.500040547 #> [646]  0.275090744  0.469645207 -0.744878889  1.282421153 -1.399281073 #> [651]  0.253994331  0.689210890 -0.782393841 -0.157096850  0.292791326 #> [656] -0.381499954  0.172217776 -0.600343793  2.031958523 -0.968282343 #> [661] -0.253398884 -0.452229207  1.169864959  0.228053344 -0.061059052 #> [666]  0.904170554 -1.890128991  0.449258562 -0.116174841  1.444270107 #> [671] -0.220901023 -2.103254808 -0.363613924  1.651219358 -1.607532805 #> [676] -1.274623294 -0.749244401 -0.730501517  0.736890488  0.905292493 #> [681]  1.951396421 -1.751128066  0.225542258 -0.152477196  1.967349357 #> [686]  2.537452827  1.666474054  1.876967361 -0.856500649 -1.896946145 #> [691]  0.624295552  0.907061522 -1.431683142  0.082896330 -0.909739811 #> [696]  1.654420162  0.462729187  1.137092959  1.193651273  0.543303349 #> [701]  0.839267863  0.353919199  0.583189379  0.772538889  0.370676903 #> [706] -1.908043801 -0.672980753 -1.633080184 -0.540722661  1.907334560 #> [711]  0.206419011 -0.101651539 -0.186310770  0.746363313  0.904528411 #> [716] -0.347879624 -0.076350427  1.950269958  2.628950789 -0.462670468 #> [721] -2.146490193 -0.040634325  0.821747857  0.050628075  0.690112570 #> [726] -1.518758010  1.004736629 -2.526451531 -0.597885033 -0.385031805 #> [731]  1.481429793 -0.656567026 -0.218718886  0.494441724  0.306539407 #> [736] -1.111154454  1.738134554 -1.055607975 -0.145467640 -1.884985141 #> [741]  0.877273049  0.769602562  1.266210366 -0.304106373 -0.295975457 #> [746] -1.421448250  1.440377004 -0.204285543 -0.535631142  1.214754358 #> [751] -1.260012365 -0.409038035  1.150327180 -0.362648612  1.545693183 #> [756]  4.757254021 -0.278508288 -0.570501184  2.457811563  0.156046518 #> [761] -0.786801286 -1.050520755 -1.023312365 -0.199308382 -0.762348981 #> [766] -0.706735627  0.303426967 -1.993539220  0.521851207  0.651705423 #> [771] -1.263151411  0.375887677  1.752420507 -1.657280338 -2.333252731 #> [776] -0.073668223  0.942410544  0.610556752 -0.062283331 -0.493149952 #> [781] -0.032541700  0.200655112 -0.518722866  1.309285202  1.510380533 #> [786]  0.220619697 -0.013982871 -0.467587030 -2.099486903 -1.631297368 #> [791]  0.210166061 -1.021371806  0.441463683 -0.869434211 -0.404941802 #> [796] -1.210506174  0.617601885  0.045263321 -0.930893241 -0.434699799 #> [801]  0.538594133  0.184148851  0.302155065 -1.018918283  0.311916926 #> [806] -0.379907811  0.323282982 -0.649110861 -0.459967187  0.688314169 #> [811]  0.263395299  1.957478959 -1.390385135 -0.549757371 -0.541194553 #> [816] -1.456606955 -0.575646273  0.519637104 -0.903743197 -1.307409810 #> [821]  0.973198570 -0.867303225  0.576215160  0.547297177 -0.171129794 #> [826]  1.913318485 -0.925519916  1.587658356 -1.686795072  0.580935081 #> [831] -0.888839327  1.094950695  2.285544194  0.178541418  0.397304727 #> [836] -0.285915380  0.754119487 -1.071899133  1.629692391  1.303194566 #> [841]  1.268188395 -0.277301396  0.911113334  0.290048099 -0.251273846 #> [846] -0.145700844  1.259225263  1.261708593 -2.678099745 -0.797835548 #> [851]  0.696973314  0.869399144  0.239472505  0.385224174  1.376598808 #> [856] -0.682177074  0.220035039 -0.044280595  0.185555409  0.194196084 #> [861] -0.658758333 -0.374878935 -1.114148044  0.202126019  1.640185532 #> [866]  1.098248071  0.969123970 -0.658912077 -0.975451492  0.970048183 #> [871]  0.223528889  0.241309134 -1.599402511  0.637669385  2.316554402 #> [876] -2.064503030 -0.271857861 -0.562296201 -1.408876584 -2.070870063 #> [881] -0.651314770  0.250166573 -0.456448246 -1.338938384  0.028014895 #> [886]  0.170306850 -0.372368988  0.768010705  1.008876130 -0.803704333 #> [891] -0.162905556 -2.836837964  0.104782906  0.612504590 -1.159888408 #> [896]  0.664415784  0.373983002  1.263528310  0.139845114  0.309937658 #> [901] -1.118079828 -0.693778904 -0.563341634  0.460429184  0.506678903 #> [906] -1.730095512 -1.500832552 -0.716144614  0.734760637 -3.106592871 #> [911]  0.737271794 -0.391774505 -0.526295301  0.361427964 -0.175292332 #> [916]  1.416411268  0.208860539  0.447873308  1.518184976 -0.308420346 #> [921]  0.318867471 -0.397616119 -1.685362606  2.440771297 -1.653691166 #> [926] -2.018914450  0.567959682  0.995188765  0.789808941 -0.908811876 #> [931]  1.104555294  0.404674158 -0.739288612  1.446135019 -0.010351992 #> [936]  0.662510266 -0.350151796 -0.206902273 -1.560325027 -1.526658470 #> [941] -0.965738223 -0.507392268  0.767332660 -0.033086580 -2.417118987 #> [946] -1.035566419  0.249385386  0.598515968 -1.689286845  0.367398145 #> [951]  1.357087857  0.488169151 -1.120853902 -0.697708041 -1.709441490 #> [956]  0.179268393  0.064519634  0.586964097  0.839450049  0.627718970 #> [961]  0.506967558  0.342318943  2.006236537  0.099840560 -1.527788284 #> [966] -0.905677614 -0.753977303 -1.718492878  1.112400037  0.698201649 #> [971] -0.422230727 -1.771786465 -1.016675016 -0.447476034  2.183202236 #> [976] -1.134600023  1.296542372  0.018678360 -1.101606808  0.513615220 #> [981]  0.069080816  1.711860261  0.362885427  1.191515337  1.808515397 #> [986]  0.476833319  2.645324272  0.597473509  0.723785637 -1.313937917 #> [991] -1.121545376  0.554892120 -0.240727994 -0.528891533  0.149679887 #> [996] -0.870511566 -0.186257381 -0.977230065  0.383111184 #>  #> $param #> [1] \"treatment\" #>  #> $N #> [1] 165 #>  #> $boot_iter #> [1] 999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        40  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.fixest(object = x, param = \"treatment\", B = 999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> $boot_vcov #> NULL #>  #> $boot_coef #> NULL #>  #> attr(,\"class\") #> [1] \"boottest\" #>  #> $`sample.var: split; sample: 2; fixef: Q1_immigration` #> $point_estimate #> [1] 0.07890386 #>  #> $p_val #> [1] 0.01601602 #>  #> $conf_int #> [1] 0.01608621 0.14587352 #>  #> $p_grid_vals #>  [1] 0.006006006 0.013013013 0.024024024 0.040040040 0.060060060 0.092092092 #>  [7] 0.154154154 0.225225225 0.331331331 0.445445445 0.577577578 0.736736737 #> [13] 0.911911912 0.904904905 0.744744745 0.592592593 0.453453453 0.331331331 #> [19] 0.227227227 0.165165165 0.115115115 0.073073073 0.047047047 0.033033033 #> [25] 0.023023023 0.015015015 #>  #> $grid_vals #>  [1] -0.009922589 -0.002816473  0.004289643  0.011395759  0.018501875 #>  [6]  0.025607990  0.032714106  0.039820222  0.046926338  0.054032454 #> [11]  0.061138570  0.068244686  0.075350802  0.082456918  0.089563034 #> [16]  0.096669149  0.103775265  0.110881381  0.117987497  0.125093613 #> [21]  0.132199729  0.139305845  0.146411961  0.153518077  0.160624192 #> [26]  0.167730308 #>  #> $t_stat #> [1] 2.51247 #>  #> $t_boot #>   [1] -0.510465159 -1.415607281 -1.196094668  0.940452267 -0.689289495 #>   [6] -0.028541853 -1.575270150  1.604110401  0.585137693 -1.022986095 #>  [11]  1.022843775 -1.069889503  0.030517466  0.213451558  0.086726559 #>  [16]  0.389788993  0.789110285 -1.422226973  2.171975669  0.273533928 #>  [21]  0.125837568 -0.479119106  0.289424577  0.100580194  0.526713055 #>  [26]  0.191357027 -2.936532693  0.117499196 -0.309620709 -0.157285744 #>  [31]  0.680870268  0.062863782 -1.504393386  0.104866982 -0.479855809 #>  [36]  1.889096173 -0.909714836  0.452113526 -0.174554121  0.069246344 #>  [41]  0.470442144  1.581176393 -0.371087124 -1.005275428 -0.642178629 #>  [46]  0.413768837  0.012840096 -1.306964582 -0.664997904 -0.887186653 #>  [51]  1.126314332 -0.497247768 -0.071422921 -0.590851064 -0.119744662 #>  [56] -1.265182394 -0.152580688 -0.611520472  0.022931955 -0.417314715 #>  [61] -1.377485812 -0.757888394 -1.313400185 -2.671600612 -1.534432553 #>  [66]  0.304080358  0.725779726 -0.668951895  0.081280139 -0.422889773 #>  [71] -0.582609808  0.303999024 -0.726984248  0.181980955  0.336551250 #>  [76]  0.122520307  0.267230427 -1.327846454 -0.225313308 -0.047542657 #>  [81] -0.305953346 -2.397868671  0.727798752  0.700678169  0.718340661 #>  [86] -0.032659327 -1.899297773 -0.934525809  0.306883032 -1.138470594 #>  [91]  1.481970749  1.152480654  0.085833390 -0.157447070  0.248546993 #>  [96]  1.575140615 -1.146222087  0.182802707  1.697239799 -0.446870831 #> [101] -1.170854289 -0.578142038  0.102042914  0.238824293  1.123275619 #> [106]  1.156297318 -0.604184262  1.227314583  0.318905965  1.805437909 #> [111] -0.400241994  1.070690903  1.038201637 -0.790350256  1.803699943 #> [116] -0.742383129  0.354527472  0.885655200 -1.812924300  0.427699069 #> [121]  0.426481711 -1.531638807 -0.030234429  1.027235739 -2.147008752 #> [126]  0.766401728 -0.279384777  1.005688794  0.958972799  0.375219857 #> [131] -0.407816796 -1.503166023 -0.098949797 -0.420965684 -0.779418292 #> [136] -0.143649152  0.560818569 -0.326627620  1.270833857  0.355109786 #> [141]  2.377633754  0.843405751  1.275902912 -1.748197514 -1.566659245 #> [146]  0.065029236 -0.764232609 -0.209561388 -1.602190437 -1.625728083 #> [151]  0.282700575 -1.234887575 -0.027576339 -1.092466411 -0.562778911 #> [156]  0.361276138 -1.322570823 -0.164545336  0.206943680 -0.659500256 #> [161] -0.031128262 -0.027437781  0.067415723  1.883629683 -1.354190277 #> [166]  0.628785294  1.158486362  0.969464094  1.431902150  1.794951657 #> [171]  0.528736210  0.729607359 -0.578448419 -0.454356250 -2.084834602 #> [176] -0.744633280 -0.600365368  0.280669067 -0.581929536 -0.145964015 #> [181] -1.817888333  0.456918917  0.961912591 -0.863755311  0.503498317 #> [186]  2.084852022  1.528239495  0.671910241  0.204369883 -1.531627341 #> [191]  0.136442519 -0.672040635  0.876087363 -0.128082555  0.229927541 #> [196] -1.174008181  1.271908594  1.801208084 -2.079134267 -1.840177076 #> [201]  1.301895265  1.522139826 -2.329055140 -0.189656355  0.955168143 #> [206] -0.971082970  1.676875413 -0.309101288 -0.528659672 -1.863739939 #> [211]  1.445477912  1.647236654  0.482832166  0.344596182 -0.482318708 #> [216] -0.669820431 -0.457183155 -1.708633775  0.840394687 -0.383874052 #> [221]  0.905801089  0.312403913 -0.161417555  0.356008219  0.301965253 #> [226] -1.035150744  1.246886436  0.377476642 -0.800117094  2.064533792 #> [231]  0.426107983 -1.351434898  1.037158237  0.533933625 -1.627441031 #> [236] -1.412970865  1.448411572 -0.535282371  0.065847795 -0.358319788 #> [241]  1.003310782  0.102651137  1.380802307  0.344537151  2.504581695 #> [246]  0.175370478 -0.120767554  1.030767380  0.473719588  0.342853434 #> [251]  0.453032244 -1.367944263 -1.550267825  0.963622679  0.995929130 #> [256]  1.184108504 -0.736380108 -1.198577250  0.353394732  1.321950403 #> [261]  1.279426143  0.050479704 -0.880385548  0.081899530 -0.066862377 #> [266] -0.405298262 -0.757393430  1.451889771  1.093856081 -0.287238434 #> [271]  2.254642810 -0.924246828  0.325348783 -1.358558117 -0.011430520 #> [276]  1.300648279  1.390384463  2.039581663 -0.536824970  0.659740404 #> [281]  1.023167781 -0.476262381  0.050530960 -1.096776621  0.112695690 #> [286] -0.451386732 -0.346551323  0.871962894 -0.611490047 -0.197978252 #> [291]  1.597461669  0.849692755 -0.941381007 -0.924814737  1.274013056 #> [296] -0.246830056 -0.112066381 -0.648269098  1.319707462  0.644940691 #> [301] -0.195531971 -0.533777495  0.796813481 -0.228214991 -0.029941529 #> [306]  1.098106750  2.285158485 -1.269910329 -0.685479339 -0.940314052 #> [311]  0.627486792  1.307853741 -0.795823795 -0.907576719  1.476426966 #> [316] -0.943782345 -0.504184376 -1.043966429  0.555677056 -1.937228159 #> [321] -0.371384617 -1.311965171  0.518979364 -0.321772894 -0.556102757 #> [326] -1.147782414  1.402781276  1.348015582 -2.160251629 -0.731144303 #> [331] -0.653185485 -1.540834195 -1.661215121  0.223917173  1.430578202 #> [336] -1.569345585 -0.011313238  2.539251370  1.270948811 -0.006767359 #> [341] -0.166207456 -0.167105884 -1.105231507 -1.145726524  0.760284805 #> [346] -0.743406473 -0.547364434 -0.532613497  1.116962329 -0.258931646 #> [351]  0.096640627  2.267008691  0.991066434 -0.346147021  0.065962960 #> [356]  0.471212504  0.573894900  1.037834084  0.218907536  0.202737952 #> [361]  0.879553406  0.048696739  0.712470638 -0.506323988  0.162463594 #> [366]  0.188736932 -0.256864669  0.121720333  1.726636698  2.517515072 #> [371]  0.662544520  0.986791387  1.501909355  0.809167853 -0.826472441 #> [376] -0.183711122 -0.997422208 -1.269016466 -0.143847593  1.087828356 #> [381]  0.263249646 -1.411796228  0.772391838 -0.364751307 -0.028302873 #> [386] -0.544355616  0.717177817  0.293891232 -0.571587825 -0.505939605 #> [391] -0.527897515  1.642551920  1.080262411 -0.207785022  0.196932752 #> [396] -0.582433917  0.700858878  0.486368422 -0.113438259  0.812414700 #> [401] -0.046024936  0.030169305 -0.638928462  0.010051459 -0.064738124 #> [406] -0.277169070 -1.329650408  0.180010113 -0.325393251  0.898141450 #> [411] -0.119569612  0.133732560  0.459481252 -0.795593323  1.160408096 #> [416] -0.251252442 -0.376329297 -0.065322073 -0.108773434 -1.621786556 #> [421]  0.914081392 -0.509443072 -1.172074786  0.989157268 -0.161008046 #> [426] -0.717657576 -1.331642620  1.843570954 -0.383305313  2.408421213 #> [431] -0.265072314 -0.252963096  1.168557489  0.244507603 -0.575218531 #> [436]  0.496788338  0.304070987  0.124728315  0.723143005  0.990101737 #> [441]  0.006660286 -0.291549815  1.143819925 -0.578310962 -0.380944212 #> [446]  0.023267410 -1.352230821 -0.985278000  0.578946489  2.915666876 #> [451]  0.030332264  1.739341366 -0.008900162  0.780883775 -0.103523351 #> [456] -0.644171326 -0.119505153 -1.462601756 -0.786587069 -0.562807758 #> [461]  0.259206839 -1.859012484  0.116461525 -0.407435248  0.005285885 #> [466]  1.431829913  0.601996376  0.117872037  0.044779157 -0.176845036 #> [471]  0.162194726  1.587236168  0.837864663  0.401050803 -0.120007538 #> [476]  0.620350649 -1.019295875 -0.580193118  0.162362579 -1.990643522 #> [481] -0.770979660  0.325066599 -1.162072613  0.364519864 -0.628947022 #> [486]  1.487670606 -1.333720792 -0.176897199  1.089474720  0.229841407 #> [491]  0.849616134 -0.771024979 -0.178006499  0.448966641 -1.445177893 #> [496] -0.986877652  0.008656013  2.278762222 -0.369093679 -0.204443422 #> [501]  0.562327650  2.300658650  0.141988611  0.103756892  0.504744777 #> [506]  1.834376880  0.719065092  0.842423110 -1.021539725  1.107962196 #> [511] -1.795105343 -0.144981141  0.795628212  0.273215756  1.047958013 #> [516]  1.436489577 -0.933504104  0.044628833  0.209064425 -1.906794892 #> [521]  0.296932731 -1.567334671 -0.122020952 -1.298389931 -0.293396785 #> [526] -0.233023121 -1.498982721 -0.361729464  0.406659109  0.590604082 #> [531]  0.654084876  0.448459762 -1.234984196 -1.833784965 -0.381784093 #> [536]  1.352554087  1.337997502  2.315215309 -0.028159282 -0.523438123 #> [541]  0.247465913 -1.582776357  2.156770459 -0.626534021  1.847325518 #> [546]  0.085906154 -0.165036710 -0.428302668 -1.267779634 -2.902140662 #> [551]  0.410224431  0.408405666 -0.469504990  0.900531674  2.085100093 #> [556] -0.320091759  0.247663539 -0.159509452  0.688533507 -0.168810636 #> [561]  0.762088967  0.029347635 -0.316266940  0.803915812 -0.645648335 #> [566] -1.584207846 -1.507643999  0.286217100 -1.213844012  0.911996073 #> [571]  0.065998993  2.529807959  0.009884989  0.324175684 -1.115698898 #> [576] -0.179286478  0.285520147  1.994249070 -0.087370226  1.619045331 #> [581]  0.045742359 -0.397432444  0.256999018  1.640686602 -0.198544321 #> [586]  1.916049616  0.506714953 -1.013736779 -1.746578959  0.940668058 #> [591]  0.140432651 -1.195979682  0.719313268  1.808416593 -1.022669490 #> [596] -0.824477754  1.137994508  0.413294562  1.363167452 -1.818962829 #> [601]  1.821265520  0.221894372  1.089072580 -1.637757318  0.157419007 #> [606]  1.824330648  1.174841955 -0.881654467 -1.166943962 -0.101324720 #> [611]  1.297577235  0.192183004 -2.310643166 -0.627883969  1.191267588 #> [616] -0.289536664 -0.447759128 -0.433548180  1.098474798 -1.587567870 #> [621]  0.656975212 -0.528265444 -0.920986213 -0.859545087 -0.620073598 #> [626] -0.408328809 -0.871892280 -0.632373856  1.525458166  1.277704103 #> [631] -0.669527989 -1.799841311  0.565509486 -0.731325998 -1.053824804 #> [636]  0.119784531  0.023609988  0.964922453  0.616799598  2.985428090 #> [641]  0.301156656 -1.453968960  0.386929325 -2.812190586  0.186929473 #> [646] -1.052238393 -0.722371997 -1.629362295  1.279589878  0.071723779 #> [651] -0.776533971  0.396483908 -0.252522239 -1.302583943 -1.382420940 #> [656]  0.996999173 -1.820092344 -0.292430199  1.426076578 -1.280330894 #> [661]  0.570945636  1.931787144  1.459388716 -1.988751016  0.751900844 #> [666]  0.063818085 -0.010442992  0.420558734 -2.141934308 -0.977240046 #> [671]  2.719734016  1.191552646 -0.162388073 -1.747376255  1.937473995 #> [676] -1.070146629  0.419184826 -0.839780421  0.893829378 -0.262284987 #> [681]  1.152978941  1.002166195 -0.720460284  0.401840788 -0.085796021 #> [686]  1.233941529 -0.981437755 -0.597158264 -0.699041068  2.048209943 #> [691] -0.818632432  1.324827574 -0.136580952 -0.605638358  0.025322816 #> [696] -2.796014299  2.397439585  0.145664183 -0.011903525 -0.468600020 #> [701] -2.387778741  1.198984297 -0.938935956  0.159333000 -0.949608100 #> [706] -0.250831839 -0.846071336 -0.228905455 -0.247906623  0.624268324 #> [711] -0.798585233 -0.178199842  0.672371227 -1.217470394 -1.260827428 #> [716]  0.631854778 -0.501422148 -0.105612858  0.398439139 -1.190417341 #> [721] -0.459625638  0.730089929  0.292326787  0.565036316 -0.008619011 #> [726] -0.784996113 -0.348125736 -1.010532226 -0.843569779 -2.643300224 #> [731] -0.119000041  0.478928984  0.962182712 -0.459760160 -0.457958221 #> [736]  0.264189804 -1.231734995 -0.458522438 -0.961638590  0.170284214 #> [741] -1.041107183  0.283375348 -0.893167169  1.431312823  1.544962167 #> [746] -2.028310813  0.715023696  2.346168001 -0.491261384 -0.262011939 #> [751]  1.058954507 -0.526769345  0.162140008 -0.398049272 -0.225391920 #> [756]  0.903541740 -1.761893791 -0.025154314 -0.546104730  1.232214911 #> [761]  0.347089048 -1.421377652  1.567050048 -2.076892782 -1.566418397 #> [766]  0.174519847 -0.516897279 -0.672099544  0.308254093  1.278311279 #> [771] -0.157657725 -0.586738111 -0.751196001 -2.096616931  1.041347391 #> [776]  0.406885683  0.072112799 -0.205277696 -0.937779658  1.492604195 #> [781] -0.278322502 -0.420328554  1.231100393  1.884493192  0.352524864 #> [786] -1.961287669  0.887031441 -1.697708282  0.398154056 -0.495877057 #> [791]  0.707155614  0.330495324  0.995427412 -0.835698339  1.116065968 #> [796] -0.349043915 -0.933311619 -0.620290247 -1.013758189  0.122805974 #> [801] -2.801689448  0.123617455 -0.260168063  0.904924361  0.505995116 #> [806] -1.000666599  0.641667096 -0.308802724 -1.163273164  0.040599523 #> [811] -0.157749733  0.422633467 -0.144766060 -2.158037497  1.102144020 #> [816] -0.826752752 -0.721695913 -0.841005255 -0.049753018  0.676232709 #> [821] -1.692344187 -0.953183700 -1.922449460 -1.019328596  0.118457071 #> [826]  0.502061523  2.060531614 -0.278789221  1.493853474  1.289189798 #> [831] -2.338299513 -0.495387517  0.481208068 -0.558654002  0.214004108 #> [836]  0.919805443 -0.908115653  1.985460335 -0.145791306 -0.369077726 #> [841]  0.959869479  0.008131588 -1.525888084  0.282010084  0.848640931 #> [846]  0.340031234  2.770594975  0.117213466  0.076029800  1.676134434 #> [851]  0.815102178  1.329211275 -0.832590913  2.311429227 -0.821826179 #> [856]  2.373974997  0.158927244  1.166073912  0.928179273  0.719502926 #> [861] -0.027862006  0.380317554  0.269475529  0.456702302 -0.522177375 #> [866] -1.267181318 -0.174684661 -0.109081040  1.155851142  1.797263574 #> [871] -0.429290360 -1.488657026  1.096070970  0.481230849  0.523628334 #> [876]  0.200448108  0.122953386  1.203629757 -0.278231315 -0.761210687 #> [881]  0.205274848 -0.479473190 -0.868771529 -1.328936444  0.068442926 #> [886]  1.209606169  0.613836362 -1.456451549 -0.433036896  0.590658694 #> [891] -0.949662307  2.250034600  0.771395197  0.011084905 -0.322221211 #> [896]  0.475778855  0.514482808  1.353204646  0.265377226 -3.104615645 #> [901] -0.390147539 -0.625332388  0.223644741  0.726808892 -0.804171483 #> [906] -0.866441245  0.841921092 -0.742016847  0.256507052  0.600845604 #> [911] -0.689120798 -0.834811570  0.212816516 -1.275382012 -0.763710483 #> [916]  1.215201957 -0.768155240  0.398789585 -0.087439613 -0.378026123 #> [921]  0.298483078 -1.653221247 -1.275695682 -0.586165220  0.215534490 #> [926] -0.955654901  1.479557496 -0.825093210  1.623580457 -0.468524489 #> [931] -0.675037294  2.020399765 -0.991979371 -0.763780274 -0.774707297 #> [936] -0.165550608 -0.837937342 -0.317953841 -1.430672306  1.088362325 #> [941] -1.475857932 -0.123139579 -0.850199249  0.145675364 -0.708800971 #> [946]  0.012168332  0.291926788 -1.226996202 -0.820420291 -0.791976281 #> [951]  1.380950889  0.431549410  0.729517625  0.930916988 -0.986823066 #> [956] -0.326302919  1.821332196 -1.431755511 -0.117771180  0.758313793 #> [961] -0.360225968 -0.103800967  1.101555834  0.512702550  1.465329157 #> [966] -0.987313679  1.359020714 -0.340051477 -0.733308894 -0.407186652 #> [971]  0.558133255 -2.698401622  1.885425720  1.213964703  0.891951860 #> [976] -0.696942546 -0.487739983 -0.983065601  0.701735056 -0.064157602 #> [981]  1.576704386  1.593556208  0.818007440 -0.083502775 -0.657851762 #> [986]  0.581582301  1.017059707  0.028220295  0.007132007  0.293649437 #> [991] -0.060839251  0.447251434  0.865723850 -0.858355536  1.408930757 #> [996]  0.560326978  1.497329354  0.119894744  0.732058949 #>  #> $param #> [1] \"treatment\" #>  #> $N #> [1] 135 #>  #> $boot_iter #> [1] 999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        39  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.fixest(object = x, param = \"treatment\", B = 999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> $boot_vcov #> NULL #>  #> $boot_coef #> NULL #>  #> attr(,\"class\") #> [1] \"boottest\" #>  #> $`sample.var: split; sample: 2; fixef: Q2_defense` #> $point_estimate #> [1] 0.1099772 #>  #> $p_val #> [1] 0.001001001 #>  #> $conf_int #> [1] 0.04428093 0.18010092 #>  #> $p_grid_vals #>  [1] 0.04604605 0.06906907 0.11611612 0.16916917 0.23923924 0.32632633 #>  [7] 0.42842843 0.54954955 0.67267267 0.80980981 0.95595596 0.90890891 #> [13] 0.77177177 0.63663664 0.50850851 0.40240240 0.29429429 0.21221221 #> [19] 0.15315315 0.11311311 0.07607608 0.05105105 0.03703704 0.02202202 #> [25] 0.01601602 0.01101101 #>  #> $grid_vals #>  [1] 0.04230398 0.04883908 0.05537419 0.06190930 0.06844440 0.07497951 #>  [7] 0.08151462 0.08804972 0.09458483 0.10111993 0.10765504 0.11419015 #> [13] 0.12072525 0.12726036 0.13379546 0.14033057 0.14686568 0.15340078 #> [19] 0.15993589 0.16647100 0.17300610 0.17954121 0.18607631 0.19261142 #> [25] 0.19914653 0.20568163 #>  #> $t_stat #> [1] 3.250242 #>  #> $t_boot #>   [1]  1.271033880 -1.004752858  0.106021700  1.705720228 -0.062544690 #>   [6] -0.253193473 -0.116966358 -1.573500801 -0.057354657 -0.658259726 #>  [11] -0.775824490 -1.422066050 -0.811030343 -0.649692921 -0.584122538 #>  [16]  0.384307606 -0.241435518 -1.024828593 -1.012147726 -0.098040527 #>  [21] -1.080336065  1.526623391 -0.205190483 -0.144697449  0.252716503 #>  [26]  0.373003363 -1.859612254  1.008042238  1.860870622 -0.787166170 #>  [31]  0.576076839 -0.683787598  0.745007065  0.461240962  0.720285500 #>  [36]  0.633358979 -0.234902364  1.240146297 -0.466333261  2.271742307 #>  [41] -0.642415626  1.028073006  0.309178018  3.097285456  0.955596188 #>  [46] -0.674353794 -0.973572564 -0.300154100 -0.884593199  1.315184520 #>  [51]  1.056207901  0.293244801 -0.187450992  0.379875255  0.051352280 #>  [56]  0.675773406  0.974038061 -0.972794686 -0.782536917  0.685523259 #>  [61]  0.855642956  0.616697834  1.827331794 -2.046070801 -0.727580191 #>  [66] -0.686378083 -0.186507956  0.757831328 -1.524523177  0.063208959 #>  [71] -0.154227192  0.281975117 -1.465117365 -2.375891437 -1.217491533 #>  [76] -0.189527886 -0.989141236  0.336905706 -0.495455732  0.191316228 #>  [81]  0.593750699  0.342180819  0.461308080  0.366930948 -3.648634790 #>  [86] -0.931754297  1.476324583 -1.168550454 -0.865825736  0.738696615 #>  [91]  0.265509101 -0.468606593 -0.005825791 -0.014700721 -0.219288750 #>  [96]  2.396464466  1.200417313 -1.533469626  1.139001631  0.156972878 #> [101]  0.170011242  1.965163211  0.849936300  0.045432534  2.517818237 #> [106]  1.087214767 -0.148067038  0.277200140 -0.353427153 -1.335422134 #> [111] -0.155472007  1.715766050  0.717913004  0.682285178 -1.208455910 #> [116] -1.052593175 -0.715027780 -0.463864282  0.825003668 -0.870655388 #> [121]  0.096927064 -1.680384461  0.479023007  0.721014135  1.559335299 #> [126] -0.050240351  0.292530097  1.064929226  1.402293635 -0.916870873 #> [131] -1.913667709  2.278251976 -0.219135911  2.633109198  1.841793745 #> [136]  0.298501759 -0.452831329 -0.018995965 -0.686217786 -0.201308427 #> [141] -0.325273925  0.875233487  1.608712885  0.029237854 -0.630627083 #> [146] -0.176706186 -1.006875111  0.615916234 -0.258213337  1.114377925 #> [151]  0.057232476  0.657772915 -1.484318883  0.525325690 -0.014165482 #> [156]  0.135575181 -2.190576448 -1.391135179  2.010716550 -1.273291130 #> [161] -0.820581017  1.544763417 -0.596869789 -1.307704438 -1.125378724 #> [166] -1.234265962  0.668515961  0.469634447 -1.531774528 -0.711826201 #> [171]  1.002995131 -0.561001244  0.578049978 -1.201516660 -0.314545136 #> [176]  0.594145509 -0.473322285 -1.348417311 -0.845222059  0.236355431 #> [181]  0.817705914  0.188278677 -0.234412997 -1.243102111 -0.961435352 #> [186]  0.103234827 -0.734459319 -0.680555320  0.047869637 -0.890561508 #> [191]  0.646899993  1.256294441 -0.134504973  1.613367227  1.736478003 #> [196]  0.791105787  1.086523431 -0.907078336 -0.515836783 -0.194881733 #> [201] -0.477524138 -0.469672783  0.174460323  1.053865121 -0.634767039 #> [206]  0.139830657  0.867797256 -1.820338718  0.099632611 -0.134526128 #> [211]  1.466703518 -0.190466465 -0.354935825 -0.167177257 -0.475906190 #> [216] -0.727315463 -1.951420073  1.360947603  1.677005194 -0.513132313 #> [221]  2.448319968 -0.977940038 -0.605779708 -0.321353223 -1.453752863 #> [226] -1.025486440  1.001994045  1.305120932  1.606772002  1.703798237 #> [231] -0.098229416  0.079122954  1.269197066  1.198044739 -0.679272973 #> [236]  0.127066970  0.315392791  0.977674827 -1.268759157  1.417386664 #> [241]  0.745586633 -0.727861600 -0.796715500 -2.924267002 -1.007991820 #> [246] -1.737107984 -0.537262728 -0.433863023  1.187481564  0.431858280 #> [251] -0.950663853  0.540440879  1.059668724  0.995390705  0.660223429 #> [256] -0.127478299  0.401371826  0.031301692  1.559830472 -0.062576274 #> [261] -1.351369371 -2.098513609  1.617157589  1.379083173 -0.445861045 #> [266]  1.452965083 -0.448034563  0.817733188  1.530894744 -1.750521016 #> [271] -0.824869572  0.434717372 -0.152730847  0.726940957  0.363120009 #> [276]  1.040915218  1.189231044 -0.991744213 -0.184890495  0.802067985 #> [281] -0.669541689 -0.283221861 -0.677154643  0.828690872 -1.492224835 #> [286]  0.923079909  0.650018435 -1.691618922 -3.021103330  1.816111120 #> [291] -0.232171789 -0.485476147 -0.895345881 -1.638690255  0.262502870 #> [296]  0.871538113  0.388452913  0.735484900 -1.028992862  1.802397822 #> [301]  0.880147541 -1.204470864 -0.360683895  0.022072587 -0.066743171 #> [306]  1.641907394  1.427829018  1.859039028 -1.541819484 -0.102741606 #> [311] -0.889117849 -0.996288913  0.661031030 -1.184201305  0.573145089 #> [316]  0.125122735 -1.116080268 -0.790605145  0.162579565 -0.399158764 #> [321] -1.744659133  0.616903955 -1.140242813 -0.588791868 -0.177108050 #> [326]  0.745957877 -1.224858169 -0.657298026  1.474988932 -0.664206702 #> [331]  0.552686275 -0.131207287  0.104211783 -0.482537598 -0.027856742 #> [336] -0.076293774 -0.508174354  1.751039238 -1.513860263 -0.593480207 #> [341]  0.050019189  0.770035143  0.130905926 -0.904619626  0.248596198 #> [346]  1.283766121  0.223856504  0.017971160 -1.292340510  1.013012705 #> [351]  1.048718943 -2.134393090  0.442183130  2.010431957 -0.032165156 #> [356]  1.012837177 -0.801180756 -2.137177188  0.808262692 -0.264573469 #> [361]  0.527948332 -0.971797268  0.514375918 -1.025584370 -1.007733599 #> [366]  1.882051625 -0.537867828 -0.032621108 -0.206550976 -1.082214647 #> [371] -1.030947161  0.319154961 -0.976092688  1.068304478  0.904008524 #> [376]  1.611882480  2.407009347  0.861821356  0.745282926  0.386328874 #> [381] -0.828696826  0.027550725  0.163232435 -1.020309216 -0.287356252 #> [386]  1.931029081 -1.686197281 -0.716510522  1.329435754 -1.084760871 #> [391]  0.076884059  0.626063647 -0.404736950  0.494420596 -0.221712447 #> [396]  0.140588011  0.823690024 -0.329917728 -0.233554070  1.474996499 #> [401]  0.946556375  0.637429008 -0.578664118 -0.110817815 -0.813616943 #> [406]  1.880006499  0.591172772 -1.097895774  0.786738303 -0.239441022 #> [411] -0.941245238  1.435253072  1.243780430 -0.780987140 -1.103775913 #> [416]  0.610831764  0.690733325  1.258852860 -0.921109606  1.918762866 #> [421]  1.495325618 -0.873141727  0.406214585 -0.222151175 -1.642817673 #> [426]  0.955507249 -0.870586861 -0.871405099 -1.136025776 -1.640193404 #> [431] -1.515923032 -1.481038094  0.155505513  0.188789038  0.094298830 #> [436]  0.739570179 -2.179268401  0.328317528 -0.679610151 -0.323757899 #> [441]  1.231572161 -1.184989133  0.436925176  1.289991936 -2.414271149 #> [446]  0.792494176 -1.187179469  0.058470470  1.814021174  0.413971309 #> [451] -0.552946203  0.225634469  0.329927138 -1.354962589  1.671527109 #> [456] -0.085477898  0.441562576 -1.438244431 -0.750393083 -0.923538344 #> [461] -0.581284784  0.172648271 -0.202672948 -0.403441447 -1.256376674 #> [466] -0.189494464 -1.817747212 -1.443155003  0.140138826 -0.128551771 #> [471] -0.320211884  0.541449845  0.321226093  1.386126278 -0.316433869 #> [476] -0.038372194 -0.907334500 -1.520345730  2.313222000 -0.887193427 #> [481] -0.838415024  0.454878195 -0.234688722 -0.641902957 -0.087959308 #> [486] -0.780299156 -0.130487310  1.938515019 -0.950921872  1.221977128 #> [491]  0.237712150  0.175601995  0.407254128 -0.872324985 -0.902185630 #> [496] -0.080130825  0.646589522  0.418364904 -0.919885277 -0.668814958 #> [501] -0.267848697  0.574453317  0.641708627  0.183552147 -0.610063157 #> [506] -0.075773758  0.602818682  2.363568134 -1.035288457 -1.530716367 #> [511] -0.784412828  0.601440205  0.142938292 -1.522389995 -2.083378251 #> [516] -1.060658973  1.480573765  0.564096059 -0.304086942 -0.749364219 #> [521] -0.773277797  1.284498568  0.127339735 -1.822185284 -0.620272488 #> [526]  0.719112895  0.047538535 -1.251404832  1.319127301 -0.529023153 #> [531] -0.859292463 -0.657515782 -1.448197877  1.112403924 -0.787689521 #> [536]  0.757687370 -2.190605447  0.440689295  0.646859770 -0.643620484 #> [541]  0.349023786  0.090448425  0.042769174 -0.244554886  0.623147467 #> [546]  1.923970865  0.207217415  0.683047239  0.068179271  0.263958041 #> [551] -0.114012548  0.992167155  0.338229611 -0.466427775  0.924361500 #> [556]  0.163681435 -0.846780641  1.915926965 -1.163058097 -0.489686126 #> [561] -1.591409809 -0.796991946 -0.907237848  0.661114908  1.523078758 #> [566]  0.492181619  0.058055064  1.925988873  1.643536234  0.166035728 #> [571] -0.119456995 -0.287003133 -1.495291636 -0.029598512 -2.039464985 #> [576]  0.538719125  1.229189543  0.191095969 -1.176923886 -2.109210726 #> [581] -0.506961051  0.472932520 -0.117763990 -1.618235539  0.677189890 #> [586] -0.325945725 -0.544049978  0.279872245 -0.361569504 -1.323291815 #> [591] -0.028345862 -0.210844930  0.723050299 -0.486980429 -0.514508333 #> [596] -1.198409898  0.049510272  0.615209537 -0.805238473 -0.617196970 #> [601] -1.376827449  0.768066099  1.250536580  0.416742267 -1.290593211 #> [606]  0.091571328 -0.559264197 -0.670571074  1.196784500  1.725666965 #> [611]  2.081703572  0.184228625 -0.362388862  2.239042573  0.101330052 #> [616] -1.208046483  1.509214769  1.172422909 -1.065805839 -1.474543173 #> [621]  0.439955771 -1.506390428  1.111594905  1.501928019 -1.401408278 #> [626] -0.222715871 -2.033008770  0.933386974 -0.886985127 -0.028817708 #> [631]  0.343428511 -1.741499766  0.616480213 -0.138460858  0.520496416 #> [636] -0.477075244 -0.559380940  0.477048052  1.271847303  0.396455913 #> [641]  0.301202472 -2.376043121  0.883797081 -0.472190879  0.594297259 #> [646]  0.822505335  2.942409537  1.047130575 -0.244087311 -0.234558026 #> [651]  0.806716425  0.390802746  0.951524360  1.898539350 -0.515405350 #> [656] -0.134069731 -0.288959360 -0.624620088 -0.101616706 -1.178170071 #> [661] -1.122465862 -0.346328213  1.043176578  0.325992802  0.383727515 #> [666] -1.517773543 -1.708954463 -1.192645226 -0.547628586  0.293518602 #> [671]  0.157377571 -1.483505285  1.356496298  0.822907392 -0.752826877 #> [676] -1.475382557 -0.368642383  0.272537853 -0.257396954 -0.246941646 #> [681] -1.962194138 -0.362666603 -0.662722199 -0.100501234  0.274216876 #> [686] -0.249254240 -0.624361021 -1.245017907  0.565628000  0.955273935 #> [691] -0.014009895 -0.138677113 -1.646904146  1.914838995 -0.273976563 #> [696] -0.159941205 -1.450185135 -1.365648834 -0.350567456 -1.300939849 #> [701] -0.164890696 -0.675333091  2.909909332 -0.755018099  0.323490604 #> [706] -1.697650945  0.882870010 -0.716773239  0.938398014 -0.093786425 #> [711] -0.095018770 -0.793187757 -0.218871887 -0.170440667  1.276413291 #> [716]  0.202772419  0.663058822  0.539251520  0.445983209 -0.384638252 #> [721]  1.045939891 -0.428753750  0.131932988 -0.804670011 -0.051739510 #> [726]  0.931416578  0.875143432 -0.178620529  0.430436741  0.773476884 #> [731]  2.356829731 -1.127044982  1.273956341 -2.196983795 -0.501773800 #> [736]  1.344289494  0.280183236 -0.601905860  0.096708941  0.283552618 #> [741]  0.445096143  0.808443430  0.676792617 -1.843673424  0.356877842 #> [746]  2.486898725  0.881017738 -0.149155203 -1.099642884  0.533570959 #> [751] -1.321048105 -1.644638862 -0.905554463  0.383996931 -1.043798607 #> [756]  0.202462347  1.166109971  0.445667181  2.772773205  0.953391803 #> [761] -0.283144711 -1.342575306 -1.880267599  0.383839861  0.516277426 #> [766]  2.415503050 -0.254815900  0.514390823  0.103350500  0.258516227 #> [771]  1.094165236  1.354036000  0.188603051  1.047861617  1.890391562 #> [776] -1.398602139  0.071000048  0.194303700  0.524643008 -0.542004965 #> [781]  0.532412592 -0.054481426  0.538258820  0.441163264 -2.296359461 #> [786]  0.071819432 -1.663552151  0.037960900 -0.044274326 -0.333243252 #> [791] -0.716476635  0.586412218  0.682564920 -0.549033928  1.107582489 #> [796] -1.542630745 -1.757764563  0.351205828 -0.203388007 -1.647545652 #> [801]  0.982421957  0.454317310  0.369167453 -1.583835452 -1.231843678 #> [806]  1.099496889  1.003232855 -0.599659169 -0.713444478  1.394636593 #> [811] -0.983832696 -0.370028802 -0.355002328  0.181958646  2.284212668 #> [816]  1.370072701  0.008160320  0.219133072 -0.783770909  0.309305346 #> [821]  1.749739354 -1.419592035  0.255471635  1.523223687  0.447907304 #> [826] -1.280049708 -0.790906157 -0.350659532  0.163613303  1.501766390 #> [831] -0.834863032 -0.495757688 -0.163847954  0.154998709  1.400191863 #> [836] -0.047678014  1.212111620 -0.683478262  1.777693030  2.444244817 #> [841] -1.091158146  0.933355575  1.389840541 -2.086963046  0.541738852 #> [846] -1.378235660  0.457297605 -1.109247101  0.813147739  1.299188502 #> [851]  1.350104840 -0.311472448  0.438899935 -0.016162918  1.297062631 #> [856] -1.710335772 -0.943951622  0.939938040 -0.801534515  0.153869525 #> [861] -1.780739720  1.093577934 -0.226025251  0.795040837 -0.329477933 #> [866] -1.050251502 -0.148990001 -1.546955176 -2.267987912 -0.609089279 #> [871]  0.225836015 -0.958994575 -0.340138955  0.089511161 -1.399987744 #> [876] -0.020577963  1.159922962 -0.725733414 -1.870530020 -0.052644994 #> [881] -1.155665008 -0.569038883  0.492755381  1.295512247 -1.077585121 #> [886]  1.366607721 -0.095040769 -1.482954431 -0.717782023  0.455750286 #> [891] -0.356441839  1.219706359 -1.621319840 -0.390485599 -1.136751073 #> [896] -0.146094360 -0.566396468 -0.993076148  1.295445935  1.382056105 #> [901]  0.370897854 -0.882980263 -1.507274778 -1.567771333 -0.833098522 #> [906]  1.467814800 -1.186078740  0.053087923 -0.237134566 -0.619364699 #> [911]  2.716923625  0.870547485  1.522866238 -1.525482698  1.282531187 #> [916] -0.157271528 -0.459181389  0.583922318  0.390099731  0.966648208 #> [921]  0.694115868 -1.631703838  0.061351819  0.748343461  0.944008528 #> [926]  1.986557172  1.183806560  1.587477328 -1.431929737 -0.611183191 #> [931]  1.046789390  0.018620544  0.283857239 -0.435778851  0.076859049 #> [936] -0.381423698  0.246404745  0.426196082  1.486621002 -0.324613413 #> [941]  1.879675075  0.195844951  0.320635917  0.018833361  0.705651269 #> [946]  1.771060054 -0.686998531 -0.687696125 -0.126345064  2.070657166 #> [951] -0.513896583  0.048665040 -0.381496090  0.762757976 -1.830553989 #> [956] -0.014888636  0.855448475  0.280001332 -0.756618718  1.154262346 #> [961]  0.861155820 -0.677254631 -0.063717884 -2.305427444  0.437255306 #> [966] -0.132782798 -1.513557943 -0.189050499  0.984897149 -0.729698735 #> [971] -0.580217516  1.602118624 -1.603485745 -0.755358872  0.058027550 #> [976] -1.598829610 -1.730508373  0.005760645  1.115125789  0.772523137 #> [981]  0.455047918 -1.257122577  0.993271600  0.598533706  1.488697230 #> [986]  0.293998488 -1.029078841 -0.655063727 -1.563336158 -3.041581515 #> [991] -1.204539918 -0.501451008 -0.620726434 -1.660770853  1.030232010 #> [996] -0.722577078 -0.427829292 -0.660014210 -0.264750164 #>  #> $param #> [1] \"treatment\" #>  #> $N #> [1] 135 #>  #> $boot_iter #> [1] 999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        39  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.fixest(object = x, param = \"treatment\", B = 999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> $boot_vcov #> NULL #>  #> $boot_coef #> NULL #>  #> attr(,\"class\") #> [1] \"boottest\""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/Multiple-Estimations-with-fixest.html","id":"what-currently-is-not-supported","dir":"Articles","previous_headings":"","what":"What currently is not supported","title":"fwildclusterboot and fixest","text":"Fixed effect interactions via ^ lead error. Fixing backlog currently highest priortiy. Send message causes large headaches!","code":"feols_fit2 <- feols(proposition_vote ~ treatment | Q1_immigration^Q2_defense,     data = voters )  # leads to an error boot1 <- boottest(feols_fit2,     B = 9999,     param = \"treatment\",     clustid = \"group_id1\" )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/WildBootTests.html","id":"installation-and-set-up","dir":"Articles","previous_headings":"","what":"Installation and Set-Up","title":"WildBootTests.jl","text":"recommend install Julia official website https://julialang.org/downloads/. JuliaConnectoR.utils packages helps link R Julia install WildBootTests.jl within R. default, functions install recent stable releases WildBootTests.jl. Julia WildBootTests.jl already installed, can check installed versions match SystemRequirements running set number threads use Julia, can run follow provided instructions.","code":"devtools::install_github(\"s3alfisc/JuliaConnectoR.utils\") library(JuliaConnectoR.utils) connect_julia_r() # instructions to connect Julia and R install_julia_packages(\"WildBootTests.jl\") # install WildBootTests.jl check_julia_system_requirements(\"fwildclusterboot\") set_julia_nthreads() # instructions to set nthreads for Julia"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/WildBootTests.html","id":"the-engine-function-argument","dir":"Articles","previous_headings":"","what":"The engine function argument","title":"WildBootTests.jl","text":"can run wild cluster bootstrap WildBootTests.jl via engine function argument: first function call boottest() JIT-compile required Julia code - take around 10-30 seconds. Note re-start R session, Julia code re-compiled. decide analyses run WildBootTests.jl, can set global variable via subsequent calls boottest() automatically run WildBootTests.jl (unless explicitly specify engine = \"R\").","code":"# load data set voters included in fwildclusterboot data(voters) # estimate the regression model via lm lm_fit <- lm(   proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration ,   data = voters ) boot_lm <- boottest(   lm_fit,   clustid = \"group_id1\",   param = \"treatment\",   B = 9999,   engine = \"WildBootTests.jl\" ) setBoottest_engine(\"WildBootTests.jl\") # after setting setBoottest_engine(\"WildBootTests.jl\"),  # the code below runs WildBootTests.jl without # specifying 'engine = \"WildBootTests.jl\"' boottest(   lm_fit,    clustid = \"group_id1\",    param = \"treatment\",   B = 9999 )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/wild_bootstrap.html","id":"wild-cluster-bootstrap-101","dir":"Articles","previous_headings":"","what":"Wild Cluster Bootstrap 101","title":"Wild (Cluster) Bootstrap 101","text":"interested testing linear hypothesis \\(H_0: \\beta_{j} = 0\\) \\(H_1: \\beta_{j} \\neq 0\\) linear model interest \\[\\begin{align} y &= X \\beta + u \\\\   &= \\begin{bmatrix} y_{1} \\\\ y_{2} \\\\ ...\\\\ y_{G} \\end{bmatrix} = \\begin{bmatrix} X_{1} \\\\ X_{2} \\\\ ...\\\\ X_{G} \\end{bmatrix} \\beta + \\begin{bmatrix} u_{1} \\\\ u_{2} \\\\ ...\\\\ u_{G} \\end{bmatrix}, \\end{align}\\] \\(E(u|X) = 0\\), group \\(g\\) contains \\(N_{g}\\) observations \\(N = \\sum_{g = 1}^{G} N_{g}\\). regression residuals \\(u\\) allowed correlated within clusters, assumed uncorrelated across clusters. consequence, models’ covariance matrix block diagonal. cluster, denote \\(E(u_{g} u_{g}') =\\Sigma_{g}\\) \\(E(u u') =\\Sigma\\). generic wild bootstrap test proceeds following steps: … regress \\(y\\) \\(X\\); obtain point estimates \\(\\hat{\\beta}\\) estimated residuals \\(\\hat{u}\\); type bootstrap known “WCU” (wild cluster unrestricted) … regress \\(Y\\) \\(X\\) imposing null (via restricted least squares); obtain point estimates \\(\\tilde{\\beta}\\) estimated residuals \\(\\tilde{u}\\). type bootstrap known “WCR” (wild cluster restricted) unify notation, denote \\(\\ddot{\\beta}\\), \\(\\ddot{\\beta} = \\hat{\\beta}\\) WCU \\(\\ddot{\\beta} = \\tilde{\\beta}\\) WCR calculate (cluster) robust t-statistic null hypothesis interest, .e. \\[ t_{j} = \\frac{\\hat{\\beta_{j}}}{\\sqrt{\\hat{\\Sigma}_{jj,x}}} \\] subscript \\(x\\) variance-covariance estimate \\(\\hat{\\Sigma}_{jj,x}\\) denotes type \\(x\\) employed cluster robust variance estimator, \\(jj\\) subscribt selects jth column row variance covariance matrix. set bootstrap error terms \\(v_{b}^{*} \\\\mathbb{R}^{G}\\) new bootstrap sample \\(y_{b}^{*} = X \\ddot{\\beta} + f_{y}(\\hat{u}) \\times v_{b}^{*}\\), observation cluster g, transformed predicted error \\(f_{y}(\\hat{u})\\) multiplied weight \\(v_{b,g}^{*}\\) bootstrapped t-statistic \\[  t_{j,b}^{*} = \\frac{\\hat{\\beta_{j,b}^{*}} - \\ddot{\\beta_{j}}}{\\sqrt{\\hat{\\Sigma}_{jj,x,b}^{*}}}   \\] \\(\\hat{\\beta}_{j,b}^{*}\\) jth element OLS estimate \\(y_{b}^{*}\\) \\(X\\) \\(\\hat{\\Sigma}_{jj, x, b}^{*}\\) associated (cluster) robust variance-covariance estimate type \\(x\\) based \\(B\\) bootstrapped t-statistics, calculate bootstrap p-value \\[\\begin{equation} \\text{right tailed: } \\hat{P}_{R}^{*} = \\frac{1}{B} \\sum_{b = 1}^{B} 1(t^{*}_{j,b} > t_j) \\end{equation}\\] \\[\\begin{equation}    \\text{two-tailed: }   \\hat{P}_{S}^{*} = \\frac{1}{B} \\sum_{b = 1}^{B} 1(|t^{*}_{j,b}| > |t_j|) \\end{equation}\\] \\[\\begin{equation} \\text{equal-tailed: } \\hat{P}_{ET}^{*} = 2 min(\\hat{P}_{L}^{*}, \\hat{P}_{R}^{*}). \\end{equation}\\]","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/wild_bootstrap.html","id":"multiple-variants-of-the-wild-cluster-bootstrap","dir":"Articles","previous_headings":"","what":"Multiple Variants of the Wild Cluster Bootstrap","title":"Wild (Cluster) Bootstrap 101","text":"algorithm leads several variants wild cluster bootstrap: first, bootstrap variants may differ choice variance-covariance estimator \\(\\Sigma_{x}\\). Second, may differ functional transformation estimated residuals \\(f(\\hat{u})\\). Finally, choice imposing imposing null bootstrap data generating process, well choice bootstrap weights lead different bootstrap variants. Based recent work J. G. MacKinnon et al. (2022), put emphasis choice variance-covariance estimator \\(\\Sigma_{x}\\) residuals \\(f(\\hat{u})\\) transformed. reasons computational feasibility, J. G. MacKinnon et al. (2022) focus CRV1 CRV3 covariance matrix estimators. CRV1 CRV3 variance covariance estimators can written \\[\\begin{equation}   CRV: \\hat{\\Sigma}_{x} = (X'X)^{-1} (\\sum_{g=1}^{G} X_{g}' f_{x}(\\hat{u}_{g}) f_{x}(\\hat{u}_{g})' X_{g} ) (X'X)^{-1}. \\end{equation}\\] CRV1 estimator, function \\(f_{1}(\\hat{u}_{g})'\\) defined \\[   f_{1}(\\hat{u}_{g})' = \\sqrt{\\frac{G}{G-1} \\frac{N-1}{N-k}} \\times \\hat{u}. \\] CRV3 estimator, equivalent function defined \\[   f_{3}(\\hat{u}_{g})' = \\sqrt{\\frac{G}{G-1}} \\times M_{gg}^{-1} \\hat{u}_{g} \\] \\(M_{gg} = I_{N_g} - H_g\\), \\(H_g = X_g (X'X)^{-1} X_g'\\), \\(I_{N_g}\\) diagonal matrix observations cluster \\(g\\). consequence, J. G. MacKinnon et al. (2022) define four distinct bootstrap variants differ ) function \\(f_{y}\\) used creating bootstrap samples - .e. whether “score” imposed bootstrap data generating process - b) type variance-covariance matrix estimator, can either classical CRV1 CRV3 estimator. Overview different bootstrap variants {#tbl-bootstrap-variants} four variants wild cluster bootstrap supported via fwildclusterboot, either imposing null hypothesis bootstrap data generating process (WCR) (WCU).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/wild_bootstrap.html","id":"multi-way-clustering","dir":"Articles","previous_headings":"","what":"Multi-Way Clustering","title":"Wild (Cluster) Bootstrap 101","text":"generalisation algorithm described case multi-way clustering. multi-way clustering two sets clusters \\(G\\) \\(H\\), variance-covariance matrix computed \\[\\begin{equation}   \\hat{\\Sigma} = m_{G} \\hat{\\Sigma}_{G} +  m_{H} \\hat{\\Sigma}_{H} - m_{GH} \\hat{\\Sigma}_{GH} \\end{equation}\\] number clusters \\(m_{GH}\\) number non-empty intersections clusters \\(G\\) \\(H\\) (variance covariance matrix estimator \\(\\hat{\\Sigma}_{}\\) can either CRV1 CRV3 \\(\\\\{G, H, GH \\}\\)). Note may occur resulting variance-covariance matrix positive definite - case, bootstrap estimates discarded. important choice multi-way clustering level bootstrap weights drawn: bootstrap weights drawn cluster \\(G\\), cluster \\(H\\), even intersection two? level clustering bootstrap weights drawn usually referred “bootcluster”. default, boottest fwildclusterboot select largest three clustering levels bootcluster, although necessarily recommended (see Roodman et al. (2019)). applications treated clusters - example, difference--differences models treated states - MacKinnon Webb (2018) suggest using ‘subcluster’ level sampling bootstrap weights. subcluster partition cluster, .e. cities given state.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/wild_bootstrap.html","id":"the-non-clustered-wild-bootstrap","dir":"Articles","previous_headings":"","what":"The Non-Clustered Wild Bootstrap","title":"Wild (Cluster) Bootstrap 101","text":"non-clustered (“heteroskedastic”) wild bootstrap, observation multiplied ‘custom’ weight, cluster-robust variance-covariance matrices replaced heteroskedastic variance-covariance matrices. results following functional specifications: \\[\\begin{equation}   HC1: f(\\hat{u}) = \\sqrt{\\frac{n}{n-k}} \\hat{u} \\end{equation}\\] \\[\\begin{equation} HC2: f(\\hat{u}) = \\frac{\\hat{u}}{(1-h_i)^{1/2}}; \\end{equation}\\] \\[\\begin{equation} HC3:  f(\\hat{u}) = \\frac{\\hat{u}}{(1-h_i)} \\end{equation}\\] \\(h_i\\) -th diagonal element “hat-matrix” \\(P_x = X(X'X)^{-1}X'\\). moment, fwildclusterboot supports ‘11’, ‘21’ ‘31’ combinations wild robust bootstrap, .e. one can choose apply ‘HC1’, ‘HC2’ ‘HC3’ correction bootstrap data generating process, bootstrap variance-covariance matrices always calculated via ‘HC1’.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/wild_bootstrap.html","id":"different-bootstrap-weights","dir":"Articles","previous_headings":"","what":"Different bootstrap weights","title":"Wild (Cluster) Bootstrap 101","text":"One last degree freedom conducting inference via wild bootstrap type bootstrap weights, .e. choice probability distribution weights drawn. fwildclusterboot offers support four distinct weights \\(v_{b}^{*}\\): Rademacher weights take values \\(1\\) \\(-1\\) equal probability Mammen weights take values values \\(1-\\psi\\) probability \\(\\psi / \\sqrt(5)\\) \\(\\psi\\) otherwise, \\(\\psi = (1+\\sqrt(5))/2\\) Normal weights draw standard normal distribution Webb weights draw six-point distribution, probability \\(1/6\\). Possible values \\(+/-1.5, +/-1, +/-0.5\\). Rademacher Mammen weights, \\(2^G\\) unique combinations draws exist. G small - .e. smaller 12 - therefore often recommended use Webb weights \\(6^G\\) unique possible draws (see Webb (2013)).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/wild_bootstrap.html","id":"wild-bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Wild Bootstrap Confidence Intervals","title":"Wild (Cluster) Bootstrap 101","text":"theory, multiple ways calculate wild (cluster) bootstrapped confidence intervals exists (J. G. MacKinnon, Nielsen, Webb 2022). Based simulation results MacKinnon (2015) higher order asymptotic theory Djogbenou, MacKinnon, Nielsen (2019), fwildclusterboot computes confidence intervals test inversion. inverting bootstrap tests computationally demanding, case wild cluster bootstrap, procedure can massively accelerated pre-computing multiple objects constant across iterations inversion algorithm. Details acceleration achieved fwildclusterboot presented appendix (added. curious, can email Alex, ’ll share notes). following section, illustrative purposes, demonstrate invert simple t-test regression model (vs bootstrap test inversion).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/wild_bootstrap.html","id":"example-how-to-compute-a-ci-by-test-inversion","dir":"Articles","previous_headings":"Wild Bootstrap Confidence Intervals","what":"Example: How to compute a CI by test inversion","title":"Wild (Cluster) Bootstrap 101","text":"Suppose parameter \\(\\theta \\\\Theta\\) test statistic \\(T(\\theta)\\). also critical value \\(c\\) test null hypothesis \\(H_0: \\theta = \\theta_0\\) \\(H_1: \\theta \\neq \\theta_0\\) level \\(\\alpha\\), reject null hypothesis \\(T(\\theta_0) > c\\). Let’s define set includes values \\(\\theta\\) decision rule “reject null hypothesis \\(T(\\theta)\\geq c\\)” leads acceptance null hypothesis: \\[   C = \\{\\theta \\\\Theta: T(\\theta)\\leq c \\}. \\] Based definition p-value, can alternatively define confidence interval significance level \\(\\alpha\\) \\[   C = \\{\\theta \\\\Theta: p(\\theta) \\geq \\alpha \\}. \\] words: confidence interval set values \\(\\theta \\\\Theta\\) p-value larger chosen significance level \\(\\alpha\\). implies function calculates p-values different values \\(\\theta\\), \\(p(\\theta)\\), obtain confidence interval, simply collect values \\(\\theta\\) \\(p(\\theta) > \\alpha\\). , words, need invert \\(p(\\theta)\\). illustrate based simple linear regression model. data generating process \\[    Y = \\beta_0 + \\beta_1 X + u \\] \\(E[u|X] = 0\\), interested testing null hypothesis \\[   H_0: \\beta_1 = 0    \\textit{ vs } H_1: \\beta_1 \\neq 0. \\] start simulating data: estimated confidence interval regression model Note confidence interval build estimated standard errors. means order calculate standard errors, confint() computes standard error multiplies critical value. compute confidence without estimating standard errors, first need define function calculates p-values different values \\(\\beta\\) given model data. , simply create function allow us test hypotheses form \\[   H_0: \\beta_1 - r = 0    \\textit{ vs } H_1: \\beta_1 -r \\neq 0. \\] different values \\(r\\), course equivalent testing \\[     H_0: \\beta_1 = r     \\textit{ vs } H_1: \\beta_1  \\neq r. \\] Tests form implemented car package, via linearHypothesis function, create small wrapper function, p_val(y, X, r) around car::linearHypothesis: can seen plot , different values \\(r\\), p_val() returns range p-values:  p-value peaks “true” null hypothesis \\(\\beta_1 = r = 0.01\\) decreases moving away true value. two points red line crosses black line - marked blue line - confidence interval hypothesis test interest! (Note plot similar output plot.boottest()). consequence, goal find intersection blue, red, black lines. , need find two starting values line search. marked green. practice, boottest() needs work find , skip step. start empirical confidence interval calculated confint(): create two sets starting values adding value \\(\\epsilon \\neq 0\\) confidence boundaries confidence set obtained confint(): starting values hand, can invert \\(p(.)\\) numerically root finding procedure - run simple bisection. Now, confidence interval get numerical p-value inversion? turns , confidence interval practically identical confidence interval based estimated standard errors: successfully inverted p-values obtain confidence interval calculated standard error compute CI used asymptotic approximation process!","code":"set.seed(21348534)  N <- 10000 X <- rnorm(N) y <- 1 + 0.01 * X + rnorm(N) df <- data.frame(X = X, y = y)  fit <- (lm(y ~ 1 + X, data = df)) confint(fit) #>                    2.5 %     97.5 % #> (Intercept)  0.964052355 1.00325628 #> X           -0.007654199 0.03204427 p_val <- function(y, X, r){   res <- lm(y ~ 1 + X)   p_val <- car::linearHypothesis(model = res, hypothesis.matrix = c(0,1), rhs = r)$`Pr(>F)`[2]   p_val } p_val_r <- unlist(lapply(seq(-0.05, 0.05, 0.005), function(i) p_val(y = y, X = X, r = i))) p_val_df <- data.frame(r = seq(-0.05, 0.05, 0.005), p_val_r = p_val_r) plot(x = p_val_df$r, y = p_val_df$p_val_r,type = \"b\", pch = 20, lty = 2, xlab = \"r\", ylab = \"p-value\") lines(p_val_df$r, p_val_df$p_val_r, type = \"l\", lty = 1) abline(h = 0.05, col = \"red\")  abline(v = confint(fit)[\"X\", ][1], col = \"blue\") text(x = confint(fit)[\"X\", ][1] - 0.01, y = 0.8, \"lower\", srt=0.2, col = \"blue\") abline(v = confint(fit)[\"X\", ][2], col = \"blue\") text(x = confint(fit)[\"X\", ][2] + 0.01, y = 0.8, \"upper\", srt=0.2, col = \"blue\") abline(v = confint(fit)[\"X\", ][1] - 0.01, col = \"green\", lty = 2) abline(v = confint(fit)[\"X\", ][1] + 0.01, col = \"green\", lty = 2) abline(v = confint(fit)[\"X\", ][2] - 0.01, col = \"green\", lty = 2) abline(v = confint(fit)[\"X\", ][2] + 0.01, col = \"green\", lty = 2) confint(fit) #>                    2.5 %     97.5 % #> (Intercept)  0.964052355 1.00325628 #> X           -0.007654199 0.03204427 epsilon <- 0.01  startset1 <- confint(fit)[\"X\",][1] + c(-epsilon, epsilon) startset2 <- confint(fit)[\"X\",][2] + c(-epsilon, epsilon) invert_p_val <- function(X, y, startset1, startset2, alpha){      # p-val - sign_level    p_val_x_sign_level <- function(r) {     p_val(X = X, y = y, r) - alpha   }      # bisection for both startset1, startset2   res <- lapply(list(startset1, startset2), function(x){                               tmp <- suppressWarnings(stats::uniroot(f = p_val_x_sign_level,                                   lower = min(x),                                   upper = max(x),                                   tol = 1e-08,                                   maxiter = 10)$root)            })    unlist(res)    } invert_p_val(X = X, y = y, startset1 = startset1, startset2 = startset2, alpha = 0.05) #> [1] -0.007654199  0.032044270 confint(fit) #>                    2.5 %     97.5 % #> (Intercept)  0.964052355 1.00325628 #> X           -0.007654199 0.03204427"},{"path":"https://s3alfisc.github.io/fwildclusterboot/articles/wild_bootstrap.html","id":"literature","dir":"Articles","previous_headings":"","what":"Literature","title":"Wild (Cluster) Bootstrap 101","text":"Djogbenou, Antoine , James G MacKinnon, Morten Ørregaard Nielsen. 2019. “Asymptotic Theory Wild Bootstrap Inference Clustered Errors.” Journal Econometrics 212 (2): 393–412. MacKinnon, James. 2015. “Wild Cluster Bootstrap Confidence Intervals.” L’Actualité économique 91 (1-2): 11–33. MacKinnon, James G, Morten Nielsen, Matthew D Webb, others. 2022. “Fast Reliable Jackknife Bootstrap Methods Cluster-Robust Inference.” MacKinnon, James G, Morten Ørregaard Nielsen, Matthew D Webb. 2022. “Cluster-Robust Inference: Guide Empirical Practice.” Journal Econometrics. MacKinnon, James G, Matthew D Webb. 2018. “Wild Bootstrap (Treated) Clusters.” Econometrics Journal 21 (2): 114–35. Roodman, David, Morten Ørregaard Nielsen, James G MacKinnon, Matthew D Webb. 2019. “Fast Wild: Bootstrap Inference Stata Using Boottest.” Stata Journal 19 (1): 4–60. Webb, Matthew D. 2013. “Reworking Wild Bootstrap Based Inference Clustered Errors.” Queen’s Economics Department Working Paper.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Fischer. Author, maintainer. David Roodman. Author. Megha Joshi. Reviewer.            Megha reviewed package (v. 0.13) ropensci                        , see <https://github.com/ropensci/software-review/issues/546> Eunseop Kim. Reviewer.            Eunseop reviewed package (v. 0.13) ropensci                        , see <https://github.com/ropensci/software-review/issues/546> Achim Zeileis. Contributor.            Author included sandwich fragments Nathaniel Graham. Contributor.            Contributor included sandwich fragments Susanne Koell. Contributor.            Contributor included sandwich fragments Laurent Berge. Contributor.            Author included fixest fragments Sebastian Krantz. Contributor.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fischer & Roodman. (2021). fwildclusterboot: Fast Wild Cluster Bootstrap Inference Linear Regression Models. Available https://cran.r-project.org/package=fwildclusterboot.","code":"@Misc{,   title = {fwildclusterboot: Fast Wild Cluster Bootstrap Inference for Linear Regression Models (Version 0.14.0)},   author = {Alexander Fischer and David Roodman},   year = {2021},   url = {https://cran.r-project.org/package=fwildclusterboot}, }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to fwildclusterboot","title":"Contributing to fwildclusterboot","text":"outlines propose change fwildclusterboot.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to fwildclusterboot","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to fwildclusterboot","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to fwildclusterboot","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"s3alfisc/fwildclusterboot\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to fwildclusterboot","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/index.html","id":"fwildclusterboot","dir":"","previous_headings":"","what":"Fast Wild Cluster Bootstrap Inference for Linear Models","title":"Fast Wild Cluster Bootstrap Inference for Linear Models","text":"fwildclusterboot package implements multiple fast wild cluster bootstrap algorithms developed Roodman et al (2019) MacKinnon, Nielsen & Webb (2022). Via JuliaConnectoR, fwildclusterboot ports functionality WildBootTests.jl - provides even faster implementation wild cluster bootstrap OLS supports WRE bootstrap IV tests multiple joint hypotheses. package’s central function boottest(). allows test univariate hypotheses using wild cluster bootstrap extreme speed: via ‘fast’ algorithm, possible run wild cluster bootstrap B = 100.000 iterations less second!  fwildclusterboot supports following features: wild bootstrap OLS (Wu 1986). wild cluster bootstrap OLS (Cameron, Gelbach & Miller 2008, Roodman et al, 2019). Multiple new versions wild cluster bootstrap described MacKinnon, Nielsen & Webb (2022), including WCR13 (WCR-V), WCR31 (WCR-S), WCR33 (WCR-B), WCU13 (WCU-V), WCU31 (WCU-S) WCU33 (WCU-B). subcluster bootstrap (MacKinnon Webb 2018). Confidence intervals formed inverting test iteratively searching bounds. Multiway clustering. One-way fixed effects. Additional features provided WildBootTests.jl: Highly optimized versions ‘11’ ‘31’ wild cluster bootstrap variants highly optimized version Wild Restricted Efficient bootstrap (WRE) IV/2SLS/LIML (Davidson & MacKinnon, 2010). Arbitrary multiple linear hypotheses parameters. fwildclusterboot supports following models: OLS: lm (stats), fixest (fixest), felm (lfe) IV: ivreg (ivreg).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fast Wild Cluster Bootstrap Inference for Linear Models","text":"can install compiled versions offwildclusterboot CRAN (compiled), R-universe (compiled) github following one steps :","code":"# from CRAN  install.packages(\"fwildclusterboot\")  # from r-universe (windows & mac, compiled R > 4.0 required) install.packages('fwildclusterboot', repos ='https://s3alfisc.r-universe.dev') # dev version from github # note: installation requires Rtools library(devtools) install_github(\"s3alfisc/fwildclusterboot\")"},{"path":"https://s3alfisc.github.io/fwildclusterboot/index.html","id":"the-boottest-function","dir":"","previous_headings":"","what":"The boottest() function","title":"Fast Wild Cluster Bootstrap Inference for Linear Models","text":"longer introduction fwildclusterboot, take look vignette.","code":"library(fwildclusterboot)  # set seed via dqset.seed for engine = \"R\" & Rademacher, Webb & Normal weights dqrng::dqset.seed(2352342) # set 'familiar' seed for all other algorithms and weight types  set.seed(23325)  data(voters)  # fit the model via fixest::feols(), lfe::felm() or stats::lm() lm_fit <- lm(proposition_vote ~ treatment  + log_income + as.factor(Q1_immigration) + as.factor(Q2_defense), data = voters) # bootstrap inference via boottest() lm_boot <- boottest(lm_fit, clustid = c(\"group_id1\"), B = 9999, param = \"treatment\") summary(lm_boot) #> boottest.lm(object = lm_fit, param = \"treatment\", B = 9999, clustid = c(\"group_id1\")) #>   #>  Hypothesis: 1*treatment = 0 #>  Observations: 300 #>   Bootstr. Type: rademacher #>  Clustering: 1-way #>  Confidence Sets: 95% #>  Number of Clusters: 40 #>  #>              term estimate statistic p.value conf.low conf.high #> 1 1*treatment = 0    0.079     3.983   0.001    0.039     0.119"},{"path":"https://s3alfisc.github.io/fwildclusterboot/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Fast Wild Cluster Bootstrap Inference for Linear Models","text":"R, can simply run following command get BibTeX citation fwildclusterboot: Alternatively, prefer cite “Fast & Wild” paper Roodman et al, great mentioned fwildclusterboot footnote =) !","code":"citation(\"fwildclusterboot\") #>  #> To cite 'fwildclusterboot' in publications use: #>  #>   Fischer & Roodman. (2021). fwildclusterboot: Fast Wild Cluster #>   Bootstrap Inference for Linear Regression Models. Available from #>   https://cran.r-project.org/package=fwildclusterboot. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Misc{, #>     title = {fwildclusterboot: Fast Wild Cluster Bootstrap Inference for Linear Regression Models (Version 0.14.0)}, #>     author = {Alexander Fischer and David Roodman}, #>     year = {2021}, #>     url = {https://cran.r-project.org/package=fwildclusterboot}, #>   }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"boottest.felm S3 method allows fast wild cluster bootstrap inference objects class felm  implementing fast wild bootstrap algorithms developed Roodman et al., 2019 MacKinnon, Nielsen & Webb (2022).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"","code":"# S3 method for felm boottest(   object,   param,   B,   clustid = NULL,   bootcluster = \"max\",   fe = NULL,   conf_int = TRUE,   R = NULL,   r = 0,   beta0 = NULL,   sign_level = 0.05,   type = \"rademacher\",   impose_null = TRUE,   bootstrap_type = \"fnw11\",   p_val_type = \"two-tailed\",   tol = 1e-06,   maxiter = 10,   sampling = \"dqrng\",   nthreads = getBoottest_nthreads(),   ssc = boot_ssc(adj = TRUE, fixef.K = \"none\", cluster.adj = TRUE, cluster.df =     \"conventional\"),   engine = getBoottest_engine(),   floattype = \"Float64\",   maxmatsize = FALSE,   bootstrapc = FALSE,   getauxweights = FALSE,   ... )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"object object class felm param character vector rhs formula. name regression coefficient(s) hypothesis tested B Integer. number bootstrap iterations. number clusters low, increasing B adds little additional runtime. clustid character vector rhs formula containing names cluster variables. NULL, heteroskedasticity-robust (HC1) wild bootstrap run. bootcluster character vector rhs formula length 1. Specifies bootstrap clustering variable variables. one variable specified, bootstrapping clustered intersections clustering implied listed variables. mimic behavior stata's boottest command, default cluster intersection variables specified via clustid argument, even though necessarily recommended (see paper Roodman et al cited , section 4.2). options include \"min\", bootstrapping clustered cluster variable fewest clusters. , subcluster bootstrap (MacKinnon & Webb, 2018) supported - see vignette(\"fwildclusterboot\", package = \"fwildclusterboot\") details. fe character vector rhs formula length one contains name fixed effect projected bootstrap. Note: regression weights used, fe needs NULL. conf_int logical vector. TRUE, boottest computes confidence intervals test inversion. FALSE, p-value returned. R Hypothesis Vector giving linear combinations coefficients. Must either NULL vector length param. NULL, vector ones length param. r numeric. Shifts null hypothesis H0: param = r vs H1: param != r beta0 Deprecated function argument. Replaced function argument 'r'. sign_level numeric 0 1 sets significance level inference procedure. E.g. sign_level = 0.05 returns 0.95% confidence intervals. default, sign_level = 0.05. type character function. character string specifies type boostrap use: One \"rademacher\", \"mammen\", \"norm\" \"webb\". Alternatively, type can function(n) drawing wild bootstrap factors. \"rademacher\" default. Rademacher distribution, number replications B exceeds number possible draw ombinations, 2^(#number clusters), boottest() use possible combination (enumeration). impose_null Logical. Controls null hypothesis imposed bootstrap dgp . Null imposed (WCR) default. FALSE, null imposed (WCU) bootstrap_type Determines wild cluster bootstrap type run. Options \"fnw11\",\"11\", \"13\", \"31\" \"33\" wild cluster bootstrap \"11\" \"31\" heteroskedastic bootstrap. information, see details section. \"fnw11\" default cluster bootstrap, runs \"11\" type wild cluster bootstrap via algorithm outlined \"fast wild\" (Roodman et al (2019)). \"11\" default heteroskedastic bootstrap. p_val_type Character vector length 1. Type p-value. default \"two-tailed\". options include \"equal-tailed\", \">\" \"<\". tol Numeric vector length 1. desired accuracy (convergence tolerance) used root finding procedure find confidence interval. 1e-6 default. maxiter Integer. Maximum number iterations used root finding procedure find confidence interval. 10 default. sampling 'dqrng' 'standard'. 'dqrng', 'dqrng' package used random number generation (available). 'standard', functions 'stats' package used available. argument mostly convenience control random number generation wrapper package around fwildclusterboot, wildrwolf. recommend use fast' option. nthreads number threads. Can : ) integer lower , equal , maximum number threads; b) 0: meaning available threads used; c) number strictly 0 1 represents fraction threads use. default use 1 core. ssc object class boot_ssc.type obtained function boot_ssc(). Represents small sample adjustments computed. defaults adj = TRUE, fixef.K = \"none\", cluster.adj = \"TRUE\", cluster.df = \"conventional\". can find details help file boot_ssc(). function purposefully designed mimic fixest's fixest::ssc() function. engine Character scalar. Either \"R\" \"WildBootTests.jl\". Controls algorithm employed boottest. \"R\" default implements cluster bootstrap Roodman (2019). \"WildBootTests.jl\" executes wild cluster bootstrap via WildBootTests.jl package. run, Julia WildBootTests.jl need installed. Check set_up_ ... functions \"fast wild\" algorithm extremely fast small number clusters, fully vectorized, memory-demanding. large number clusters large number bootstrap iterations, fast wild algorithm becomes infeasible. --memory error # occurs, \"lean\" algorithm memory friendly, less performant rcpp-armadillo based implementation wild cluster bootstrap. Note cluster provided, boottest() always defaults \"lean\" algorithm. Note can set employed algorithm globally using setBoottest_engine() function. floattype Float64 default. option: Float32. floating point numbers Julia represented 32 64 bit? relevant 'engine = \"WildBootTests.jl\"' maxmatsize NULL default = limit. Else numeric scalar set maximum size auxilliary weight matrix (v), gigabytes. relevant 'engine = \"WildBootTests.jl\"' bootstrapc Logical scalar, FALSE default. TRUE  request bootstrap-c instead bootstrap-t. relevant 'engine = \"WildBootTests.jl\"' getauxweights Logical. Whether save auxilliary weight matrix (v) ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"object class boottest p_val bootstrap p-value. conf_int bootstrap confidence interval. param tested parameter. N Sample size. Might differ regression sample size cluster variables contain NA values. boot_iter Number Bootstrap Iterations. clustid Names cluster Variables. N_G Dimension cluster variables used boottest. sign_level Significance level used boottest. type Distribution bootstrap weights. impose_null Whether null imposed bootstrap dgp . R vector \"R\" null hypothesis interest Rbeta = r. r scalar \"r\" null hypothesis interest Rbeta = r. point_estimate R'beta. scalar: constraints vector times regression coefficients. grid_vals t-statistics calculated calculating confidence interval. p_grid_vals p-values calculated calculating confidence interval. t_stat 'original' regression test statistics. t_boot bootstrap t-statistics. regression regression object used boottest. call Function call boottest. engine employed bootstrap algorithm. nthreads number threads employed.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"setting-seeds","dir":"Reference","previous_headings":"","what":"Setting Seeds","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"guarantee reproducibility, need set global random seed via set.seed() using lean algorithm (via engine = \"R-lean\") including heteroskedastic wild bootstrap wild cluster bootstrap via engine = \"R\" Mammen weights engine = \"WildBootTests.jl\" dqrng::dqset.seed() using engine = \"R\" Rademacher, Webb Normal weights","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"confidence-intervals","dir":"Reference","previous_headings":"","what":"Confidence Intervals","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"boottest computes confidence intervals inverting p-values. practice, following procedure used: Based initial guess starting values, calculate p-values 26 equal spaced points starting values. 26 calculated p-values, find two pairs values x corresponding p-values px cross significance level sign_level. Feed two pairs x numerical root finding procedure solve root. boottest currently relies stats::uniroot sets absolute tolerance 1e-06 stops procedure 10 iterations.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"standard-errors","dir":"Reference","previous_headings":"","what":"Standard Errors","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"boottest calculate standard errors.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"multiple-fixed-effects","dir":"Reference","previous_headings":"","what":"Multiple Fixed Effects","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"felm() model contains fixed effects, boottest() internally convert fixed effects one specified via fe argument dummy variables.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"run-boottest-quietly","dir":"Reference","previous_headings":"","what":"Run boottest quietly","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"can suppress warning error messages setting following global options: options(rlib_warning_verbosity = \"quiet\") options(rlib_message_verbosity = \"quiet\") turn warnings (messages) produced via rlang::warn() rlang::inform(), might desirable use software build rlang, e.g. tidyverse.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"stata-julia-and-python-implementations","dir":"Reference","previous_headings":"","what":"Stata, Julia and Python Implementations","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"fast wild cluster bootstrap algorithms implemented following software packages: Stata:boottest Julia:WildBootTests.jl Python:wildboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"Roodman et al., 2019, \"Fast wild: Bootstrap inference STATA using boottest\", STATA Journal. (https://ideas.repec.org/p/qed/wpaper/1406.html) MacKinnon, James G., Morten Ørregaard Nielsen, Matthew D. Webb. Fast reliable jackknife bootstrap methods cluster-robust inference. . 1485. 2022. Cameron, . Colin, Jonah B. Gelbach, Douglas L. Miller. \"Bootstrap-based improvements inference clustered errors.\" Review Economics Statistics 90.3 (2008): 414-427. Cameron, .Colin & Douglas L. Miller. \"practitioner's guide cluster-robust inference\" Journal Human Resources (2015) doi:10.3368/jhr.50.2.317 Davidson & MacKinnon. \"Wild Bootstrap Tests IV regression\" Journal Economics Business Statistics (2010) doi:10.1198/jbes.2009.07221 MacKinnon, James G., Matthew D. Webb. \"wild bootstrap (treated) clusters. \" Econometrics Journal 21.2 (2018): 114-135. MacKinnon, James G., Matthew D. Webb. \"Cluster-robust inference: guide empirical practice\" Journal Econometrics (2022) doi:10.1016/j.jeconom.2022.04.001 MacKinnon, James. \"Wild cluster bootstrap confidence intervals.\" L'Actualite economique 91.1-2 (2015): 11-33. Webb, Matthew D. Reworking wild bootstrap based inference clustered errors. . 1315. Queen's Economics Department Working Paper, 2013.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.felm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast wild cluster bootstrap inference for object of class felm — boottest.felm","text":"","code":"if (FALSE) {   requireNamespace(\"lfe\")   data(voters)   felm_fit <- felm(proposition_vote ~ treatment + ideology1 + log_income |     Q1_immigration,   data = voters   )   boot1 <- boottest(felm_fit,     B = 9999,     param = \"treatment\",     clustid = \"group_id1\"   )   boot2 <- boottest(felm_fit,     B = 9999,     param = \"treatment\",     clustid = c(\"group_id1\", \"group_id2\")   )   boot3 <- boottest(felm_fit,     B = 9999,     param = \"treatment\",     clustid = c(\"group_id1\", \"group_id2\"),     fe = \"Q1_immigration\"   )   boot4 <- boottest(felm_fit,     B = 999,     param = \"treatment\",     clustid = c(\"group_id1\", \"group_id2\"),     fe = \"Q1_immigration\",     sign_level = 0.2,     r = 2   )   # test treatment + ideology1 = 2   boot5 <- boottest(felm_fit,     B = 9999,     clustid = c(\"group_id1\", \"group_id2\"),     param = c(\"treatment\", \"ideology1\"),     R = c(1, 1),     r = 2   )   summary(boot1)   print(boot1)   plot(boot1)   nobs(boot1)   pval(boot1)   confint(boot1)   generics::tidy(boot1)  # run different bootstrap types following MacKinnon, Nielsen & Webb (2022):  # default: the fnw algorithm boot_fnw11 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\",   bootstrap_type = \"fnw11\" )  # WCR 31 boot_WCR31 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\",   bootstrap_type = \"31\" )  # WCU33 boot_WCR31 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\",   bootstrap_type = \"33\",   impose_null = FALSE ) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"boottest.fixest S3 method allows fast wild cluster bootstrap inference objects class fixest  implementing fast wild bootstrap algorithms developed Roodman et al., 2019 MacKinnon, Nielsen & Webb (2022).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"","code":"# S3 method for fixest boottest(   object,   param,   B,   clustid = NULL,   bootcluster = \"max\",   fe = NULL,   sign_level = 0.05,   conf_int = TRUE,   R = NULL,   r = 0,   beta0 = NULL,   type = \"rademacher\",   impose_null = TRUE,   bootstrap_type = \"fnw11\",   p_val_type = \"two-tailed\",   tol = 1e-06,   maxiter = 10,   sampling = \"dqrng\",   nthreads = getBoottest_nthreads(),   ssc = boot_ssc(adj = TRUE, fixef.K = \"none\", cluster.adj = TRUE, cluster.df =     \"conventional\"),   engine = getBoottest_engine(),   floattype = \"Float64\",   maxmatsize = FALSE,   bootstrapc = FALSE,   getauxweights = FALSE,   ... )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"object object class fixest estimated via fixest::feols(). Non-linear models supported. param character vector rhs formula. name regression coefficient(s) hypothesis tested B Integer. number bootstrap iterations. number clusters low, increasing B adds little additional runtime. clustid character vector rhs formula containing names cluster variables. NULL, heteroskedasticity-robust (HC1) wild bootstrap run. bootcluster character vector rhs formula length 1. Specifies bootstrap clustering variable variables. one variable specified, bootstrapping clustered intersections clustering implied listed variables. mimic behavior stata's boottest command, default cluster intersection variables specified via clustid argument, even though necessarily recommended (see paper Roodman et al cited , section 4.2). options include \"min\", bootstrapping clustered cluster variable fewest clusters. , subcluster bootstrap (MacKinnon & Webb, 2018) supported - see vignette(\"fwildclusterboot\", package = \"fwildclusterboot\") details. fe character vector rhs formula length one contains name fixed effect projected bootstrap. Note: regression weights used, fe needs NULL. sign_level numeric 0 1 sets significance level inference procedure. E.g. sign_level = 0.05 returns 0.95% confidence intervals. default, sign_level = 0.05. conf_int logical vector. TRUE, boottest computes confidence intervals test inversion. FALSE, p-value returned. R Hypothesis Vector giving linear combinations coefficients. Must either NULL vector length param. NULL, vector ones length param. r numeric. Shifts null hypothesis H0: param = r vs H1: param != r beta0 Deprecated function argument. Replaced function argument 'r'. type character function. character string specifies type boostrap use: One \"rademacher\", \"mammen\", \"norm\" \"webb\". Alternatively, type can function(n) drawing wild bootstrap factors. \"rademacher\" default. Rademacher distribution, number replications B exceeds number possible draw ombinations, 2^(#number clusters), boottest() use possible combination (enumeration). impose_null Logical. Controls null hypothesis imposed bootstrap dgp . Null imposed (WCR) default. FALSE, null imposed (WCU) bootstrap_type Determines wild cluster bootstrap type run. Options \"fnw11\",\"11\", \"13\", \"31\" \"33\" wild cluster bootstrap \"11\" \"31\" heteroskedastic bootstrap. information, see details section. \"fnw11\" default cluster bootstrap, runs \"11\" type wild cluster bootstrap via algorithm outlined \"fast wild\" (Roodman et al (2019)). \"11\" default heteroskedastic bootstrap. p_val_type Character vector length 1. Type p-value. default \"two-tailed\". options include \"equal-tailed\", \">\" \"<\". tol Numeric vector length 1. desired accuracy (convergence tolerance) used root finding procedure find confidence interval. 1e-6 default. maxiter Integer. Maximum number iterations used root finding procedure find confidence interval. 10 default. sampling 'dqrng' 'standard'. 'dqrng', 'dqrng' package used random number generation (available). 'standard', functions 'stats' package used available. argument mostly convenience control random number generation wrapper package around fwildclusterboot, wildrwolf. recommend use fast' option. nthreads number threads. Can : ) integer lower , equal , maximum number threads; b) 0: meaning available threads used; c) number strictly 0 1 represents fraction threads use. default use 1 core. ssc object class boot_ssc.type obtained function boot_ssc(). Represents small sample adjustments computed. defaults adj = TRUE, fixef.K = \"none\", cluster.adj = \"TRUE\", cluster.df = \"conventional\". can find details help file boot_ssc(). function purposefully designed mimic fixest's fixest::ssc() function. engine Character scalar. Either \"R\", \"R-lean\" \"WildBootTests.jl\". Controls boottest() run via native R implementation WildBootTests.jl. \"R\" default implements cluster bootstrap Roodman (2019). \"WildBootTests.jl\" executes wild cluster bootstrap via WildBootTests.jl package. run, Julia WildBootTests.jl need installed. \"R-lean\" algorithm memory friendly, less performant rcpp-armadillo based implementation wild cluster bootstrap. Note cluster provided, boottest() always defaults \"lean\" algorithm. can set employed algorithm globally using setBoottest_engine() function. floattype Float64 default. option: Float32. floating point numbers Julia represented 32 64 bit? relevant 'engine = \"WildBootTests.jl\"' maxmatsize NULL default = limit. Else numeric scalar set maximum size auxilliary weight matrix (v), gigabytes. relevant 'engine = \"WildBootTests.jl\"' bootstrapc Logical scalar, FALSE default. TRUE  request bootstrap-c instead bootstrap-t. relevant 'engine = \"WildBootTests.jl\"' getauxweights Logical. Whether save auxilliary weight matrix (v) ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"object class boottest p_val bootstrap p-value. conf_int bootstrap confidence interval. param tested parameter. N Sample size. Might differ regression sample size cluster variables contain NA values. boot_iter Number Bootstrap Iterations. clustid Names cluster Variables. N_G Dimension cluster variables used boottest. sign_level Significance level used boottest. type Distribution bootstrap weights. impose_null Whether null imposed bootstrap dgp . R vector \"R\" null hypothesis interest Rbeta = r. r scalar \"r\" null hypothesis interest Rbeta = r. point_estimate R'beta. scalar: constraints vector times regression coefficients. grid_vals t-statistics calculated calculating confidence interval. p_grid_vals p-values calculated calculating confidence interval. t_stat 'original' regression test statistics. t_boot bootstrap t-statistics. regression regression object used boottest. call Function call boottest. engine employed bootstrap algorithm. nthreads number threads employed.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"setting-seeds","dir":"Reference","previous_headings":"","what":"Setting Seeds","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"guarantee reproducibility, need set global random seed via set.seed() using lean algorithm (via engine = \"R-lean\") including heteroskedastic wild bootstrap wild cluster bootstrap via engine = \"R\" Mammen weights engine = \"WildBootTests.jl\" dqrng::dqset.seed() using engine = \"R\" Rademacher, Webb Normal weights","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"confidence-intervals","dir":"Reference","previous_headings":"","what":"Confidence Intervals","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"boottest computes confidence intervals inverting p-values. practice, following procedure used: Based initial guess starting values, calculate p-values 26 equal spaced points starting values. 26 calculated p-values, find two pairs values x corresponding p-values px cross significance sign_level sign_level. Feed two pairs x numerical root finding procedure solve root. boottest currently relies stats::uniroot sets absolute tolerance 1e-06 stops procedure 10 iterations.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"standard-errors","dir":"Reference","previous_headings":"","what":"Standard Errors","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"boottest calculate standard errors.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"multiple-fixed-effects","dir":"Reference","previous_headings":"","what":"Multiple Fixed Effects","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"feols() model contains fixed effects, boottest() internally convert fixed effects one specified via fe argument dummy variables.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"run-boottest-quietly","dir":"Reference","previous_headings":"","what":"Run boottest quietly","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"can suppress warning error messages setting following global options: options(rlib_warning_verbosity = \"quiet\") options(rlib_message_verbosity = \"quiet\") Note turn warnings (messages) produced via rlang::warn() rlang::inform(), might desirable use software build rlang, e.g. tidyverse.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"stata-julia-and-python-implementations","dir":"Reference","previous_headings":"","what":"Stata, Julia and Python Implementations","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"fast wild cluster bootstrap algorithms implemented following software packages: Stata:boottest Julia:WildBootTests.jl Python:wildboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"Roodman et al., 2019, \"Fast wild: Bootstrap inference STATA using boottest\", STATA Journal. (https://ideas.repec.org/p/qed/wpaper/1406.html) MacKinnon, James G., Morten Ørregaard Nielsen, Matthew D. Webb. Fast reliable jackknife bootstrap methods cluster-robust inference. . 1485. 2022. Cameron, . Colin, Jonah B. Gelbach, Douglas L. Miller. \"Bootstrap-based improvements inference clustered errors.\" Review Economics Statistics 90.3 (2008): 414-427. Cameron, .Colin & Douglas L. Miller. \"practitioner's guide cluster-robust inference\" Journal Human Resources (2015) doi:10.3368/jhr.50.2.317 Davidson & MacKinnon. \"Wild Bootstrap Tests IV regression\" Journal Economics Business Statistics (2010) doi:10.1198/jbes.2009.07221 MacKinnon, James G., Matthew D. Webb. \"wild bootstrap (treated) clusters. \" Econometrics Journal 21.2 (2018): 114-135. MacKinnon, James G., Matthew D. Webb. \"Cluster-robust inference: guide empirical practice\" Journal Econometrics (2022) doi:10.1016/j.jeconom.2022.04.001 MacKinnon, James. \"Wild cluster bootstrap confidence intervals.\" L'Actualite economique 91.1-2 (2015): 11-33. Webb, Matthew D. Reworking wild bootstrap based inference clustered errors. . 1315. Queen's Economics Department Working Paper, 2013.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.fixest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast wild cluster bootstrap inference for object of class fixest — boottest.fixest","text":"","code":"if (FALSE) { requireNamespace(\"fixest\") requireNamespace(\"fwildclusterboot\") data(voters) feols_fit <- feols(proposition_vote ~ treatment + ideology1 + log_income,  fixef = \"Q1_immigration\",  data = voters ) boot1 <- boottest(feols_fit,  B = 9999,  param = \"treatment\",  clustid = \"group_id1\" ) boot2 <- boottest(feols_fit,  B = 9999,  param = \"treatment\",  clustid = c(\"group_id1\", \"group_id2\") ) boot3 <- boottest(feols_fit,   B = 9999,   param = \"treatment\",   clustid = c(\"group_id1\", \"group_id2\"),   fe = \"Q1_immigration\" ) boot4 <- boottest(feols_fit,   B = 9999,   param = \"treatment\",   clustid = c(\"group_id1\", \"group_id2\"),   fe = \"Q1_immigration\",   sign_level = 0.2,   r = 2 ) # test treatment + ideology1 = 2 boot5 <- boottest(feols_fit,   B = 9999,   clustid = c(\"group_id1\", \"group_id2\"),   param = c(\"treatment\", \"ideology1\"),   R = c(1, 1),   r = 2 ) summary(boot1) print(boot1) plot(boot1) nobs(boot1) pval(boot1) confint(boot1) generics::tidy(boot1)  # run different bootstrap types following MacKinnon, Nielsen & Webb (2022):  # default: the fnw algorithm boot_fnw11 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\",   bootstrap_type = \"fnw11\" )  # WCR 31 boot_WCR31 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\",   bootstrap_type = \"31\" )  # WCU33 boot_WCR31 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\",   bootstrap_type = \"33\",   impose_null = FALSE )  }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast wild cluster bootstrap inference — boottest","title":"Fast wild cluster bootstrap inference — boottest","text":"boottest S3 method allows fast wild cluster bootstrap inference objects class lm, fixest felm  implementing fast wild bootstrap algorithm developed Roodman et al., 2019.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast wild cluster bootstrap inference — boottest","text":"","code":"boottest(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast wild cluster bootstrap inference — boottest","text":"object object type lm, fixest, felm ivreg ... arguments","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast wild cluster bootstrap inference — boottest","text":"object class boottest.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast wild cluster bootstrap inference — boottest","text":"Technical Details technical details, either take look references , check wild (cluster) bootstrap vignette.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.html","id":"setting-seeds","dir":"Reference","previous_headings":"","what":"Setting Seeds","title":"Fast wild cluster bootstrap inference — boottest","text":"guarantee reproducibility, can either use boottest()'s seed function argument, set global random seed via set.seed() using lean algorithm (via engine = \"R-lean\"), 2) heteroskedastic wild bootstrap wild cluster bootstrap via engine = \"R\" Mammen weights 4) engine = \"WildBootTests.jl\" dqrng::dqset.seed() using engine = \"R\" Rademacher, Webb Normal weights","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.html","id":"stata-julia-and-python-implementations","dir":"Reference","previous_headings":"","what":"Stata, Julia and Python Implementations","title":"Fast wild cluster bootstrap inference — boottest","text":"fast wild cluster bootstrap algorithms implemented following software packages: Stata:boottest Julia:WildBootTests.jl Python:wildboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fast wild cluster bootstrap inference — boottest","text":"Roodman et al., 2019, \"Fast wild: Bootstrap inference STATA using boottest\", STATA Journal. (https://ideas.repec.org/p/qed/wpaper/1406.html) MacKinnon, James G., Morten Ørregaard Nielsen, Matthew D. Webb. Fast reliable jackknife bootstrap methods cluster-robust inference. . 1485. 2022. Cameron, . Colin, Jonah B. Gelbach, Douglas L. Miller. \"Bootstrap-based improvements inference clustered errors.\" Review Economics Statistics 90.3 (2008): 414-427. Cameron, .Colin & Douglas L. Miller. \"practitioner's guide cluster-robust inference\" Journal Human Resources (2015) doi:10.3368/jhr.50.2.317 Davidson & MacKinnon. \"Wild Bootstrap Tests IV regression\" Journal Economics Business Statistics (2010) doi:10.1198/jbes.2009.07221 MacKinnon, James G., Matthew D. Webb. \"wild bootstrap (treated) clusters.\" Econometrics Journal 21.2 (2018): 114-135. MacKinnon, James G., Matthew D. Webb. \"Cluster-robust inference: guide empirical practice\" Journal Econometrics (2022) doi:10.1016/j.jeconom.2022.04.001 MacKinnon, James. \"Wild cluster bootstrap confidence intervals.\" L'Actualite economique 91.1-2 (2015): 11-33. Webb, Matthew D. \"Reworking wild bootstrap based inference clustered errors\" . . 1315. Queen's Economics Department Working Paper, 2013.","code":""},{"path":[]},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast wild cluster bootstrap inference — boottest","text":"","code":"requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm(   proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) #> Warning: Please note that the seeding behavior for random number generation for #> `boottest()` has changed with `fwildclusterboot` version 0.13. #>  #> It will no longer be possible to exactly reproduce results produced by versions #> lower than 0.13. #>  #> If your prior results were produced under sufficiently many bootstrap #> iterations, none of your conclusions will change. For more details about this #> change, please read the notes in #> [news.md](https://cran.r-project.org/web/packages/fwildclusterboot/news/news.html). #> This warning is displayed once per session. #> Too guarantee reproducibility, don't forget to set a global random seed #> **both** via `set.seed()` and `dqrng::dqset.seed()`. #> This message is displayed once every 8 hours. summary(boot) #> boottest.lm(object = lm_fit, param = \"treatment\", B = 9999, clustid = \"group_id1\") #> \t #>  Hypothesis: 1*treatment = 0 #>  Observations: 300 #>   Bootstr. Type: rademacher #>  Clustering: 1-way #>  Confidence Sets: 95% #>  Number of Clusters: 40 #>   #>              term estimate statistic p.value conf.low conf.high #> 1 1*treatment = 0    0.073     3.709   0.001    0.033     0.113 print(boot) #> $point_estimate #> [1] 0.07290769 #>  #> $p_val #> [1] 0.00080008 #>  #> $conf_int #> [1] 0.03304323 0.11310769 #>  #> $p_grid_vals #>  [1] 0.00620062 0.01270127 0.02180218 0.03700370 0.05900590 0.09440944 #>  [7] 0.14261426 0.21182118 0.30463046 0.41934193 0.56635664 0.72847285 #> [13] 0.90829083 0.90659066 0.73297330 0.57045705 0.43074307 0.31493149 #> [19] 0.22002200 0.15311531 0.10251025 0.06460646 0.04030403 0.02320232 #> [25] 0.01380138 0.00690069 #>  #> $grid_vals #>  [1] 0.01731591 0.02176326 0.02621060 0.03065794 0.03510528 0.03955263 #>  [7] 0.04399997 0.04844731 0.05289465 0.05734199 0.06178934 0.06623668 #> [13] 0.07068402 0.07513136 0.07957871 0.08402605 0.08847339 0.09292073 #> [19] 0.09736807 0.10181542 0.10626276 0.11071010 0.11515744 0.11960479 #> [25] 0.12405213 0.12849947 #>  #> $t_stat #> [1] 3.709435 #>  #> $t_boot #>    [1]  1.6927506390  0.6408277763  0.2023075395 -0.4379335355  1.4506315422 #>    [6]  0.1125693869  1.6431165821  1.5920337804  0.8703472518 -0.1111262037 #>   [11] -0.0725814004  0.6786506724 -0.4371198401  0.2403830811  1.6551681424 #>   [16]  0.8937443748  1.8203317802  0.1834308772 -0.1936227333 -0.3098700135 #>   [21] -0.8755137496  0.6956894533 -1.4545849908 -0.8151015868 -0.0627063179 #>   [26]  1.1324062353 -0.0961894312  3.0355816050 -0.5707846605 -0.0987019806 #>   [31] -0.0019826875  0.4275967325  0.6859336969  0.0524920978  0.1878336697 #>   [36]  0.9626892165  0.8869349011 -1.0785751162 -0.0171249199 -0.8770609058 #>   [41]  0.3627429920 -0.2378183149  0.5946372281  1.4995404002 -0.9117848570 #>   [46] -1.3465666499  0.4667732411 -0.5042423587 -0.3179336392 -0.6498727521 #>   [51] -0.3737759213 -1.1403366325 -0.5284324633  0.7030752328 -0.7850427150 #>   [56]  0.0911697562 -0.1051028880  0.0568929199 -0.5352127236  0.7591299310 #>   [61] -0.4408232415  0.0532947894 -1.1067167226 -1.2704880563  1.5671096210 #>   [66]  0.2767017808 -0.3024932706  1.2292754078  0.4151695935  2.0181774501 #>   [71] -1.1065307904  0.2966615848  1.6554060208  2.0064106161  1.3569441631 #>   [76]  1.9847978124 -0.7862793733 -0.6586244320 -0.2750429256  0.2272755814 #>   [81] -0.1620506889  0.2936008916 -0.6612593494 -0.0823505358 -0.7780279402 #>   [86] -0.7694281211 -1.0778833710 -1.9781035676 -0.9910917317 -0.4934352989 #>   [91]  0.1307088538 -1.2684563403 -1.5085069983  0.8106880353  0.4796043635 #>   [96] -0.6842067396  0.7330341271  0.1395867285 -0.0126515656  0.0268248509 #>  [101] -0.1412811777  0.0226620957  0.4326213184  0.4023838337 -1.0299678486 #>  [106]  0.8586817343 -0.5882957156 -0.6732874265 -2.2722913428  0.9851757346 #>  [111] -1.1032834208  0.9580072230  0.4106341435 -0.0062774017  1.2557957882 #>  [116] -2.1752383302 -0.2437855624  0.5677375008  1.5123423054  0.2008769371 #>  [121] -0.5799896114  0.7878543375  0.2162714821 -0.4700134475  0.2018659628 #>  [126] -0.4742420607 -0.2248393218  0.5244546761  2.0154420143  1.9552824371 #>  [131] -2.0441336256 -0.6295673495 -0.2173421381 -0.4389742423 -0.3066487408 #>  [136] -0.1288266406  0.0010615504  1.3166026291 -0.3992208390  2.3569087545 #>  [141] -0.1824518156  0.2694614851  1.2377394490  0.4950754833  2.8043138442 #>  [146]  0.2866142971 -1.4564173579 -0.0917490882  0.2679708930  1.1131211055 #>  [151]  0.2788463572  0.1903568555 -1.3590370810  1.1368391408  0.6388326927 #>  [156]  0.0598047881 -0.3112830423  0.2329679780 -1.1210518033  1.0190411859 #>  [161]  0.8206173108 -0.2085463726 -0.3532675879 -0.0094241171 -0.4475220678 #>  [166] -0.8663177314  0.3717262124  0.5909902222 -1.7934895588  0.9649062645 #>  [171] -0.0622347919  0.2447375560  1.5684830774  0.8972767072 -0.7714782197 #>  [176] -1.4204082938 -1.1055215852  0.3951317388 -0.1043649925 -1.1278103310 #>  [181] -0.9749143357 -0.8235206390 -1.0700533790 -0.8383184823  1.1829092569 #>  [186]  0.2008540691  0.3729517352  0.9802174529  0.2980091687  0.7373294236 #>  [191] -1.1859912757  0.2701131104  0.3187948009 -0.9443005261  2.2364048478 #>  [196]  1.2559719305 -0.3101890039 -3.3813203049 -0.7202511339  0.2523804255 #>  [201]  0.0703507448  0.4012955658  0.4445058431  0.1922933252  0.0818978431 #>  [206]  1.3922616154 -0.3150285892 -0.0569250175 -0.0450887860 -0.5387545261 #>  [211] -1.2419441683 -0.1809766306  1.1572903738 -0.3640687113  1.3851274211 #>  [216] -0.0763922045  1.2594904936  2.0875435345  1.1810416203 -0.0764175320 #>  [221]  0.8682774266 -0.2997455987  1.0780774772 -0.0311568033  0.4663110086 #>  [226]  0.6631332194  1.2849498078  1.3073474417  0.6362167534 -2.2204319210 #>  [231]  0.4522854020  0.4286275560  0.8474308269 -0.2103727561 -1.6305937840 #>  [236] -1.4572209162 -1.6077092670  0.8264598590 -0.2476980216 -1.4551170705 #>  [241]  0.1837654619  0.9828372351  0.2620730176  2.0248432930 -0.1754163620 #>  [246]  0.0040094211  1.3536211001 -1.9103972945  0.5808173223  1.6416922199 #>  [251] -2.5208153132  1.0381560101  0.8832193136 -0.4925907288 -0.7179768246 #>  [256]  1.6861568266  0.9486457897  0.1931672245 -0.2236781735 -1.3999929027 #>  [261]  2.2304444798  0.9843235725  0.8644970816  0.4858366106  2.6328259287 #>  [266] -0.4669510041 -0.9620817837 -0.3708018217  1.0515502699 -0.2296171512 #>  [271]  0.5119848601  0.7628672048 -0.6055328538  0.5831531619 -0.5932496152 #>  [276]  1.6050307811  1.0517061127 -1.4902856037 -1.5961290564  0.0928948662 #>  [281]  0.2652519903 -0.6848770735  0.6990900332 -0.4218169458 -0.5784934663 #>  [286]  1.0895600918  0.9528532852  2.0710739695  1.3315833345 -0.8020617038 #>  [291]  0.2204110437  0.1109065508  0.6436347401 -0.7657350578  0.3203515049 #>  [296]  0.1654738659 -0.3761808756 -1.9730764217  0.4503947702 -0.2035169388 #>  [301]  0.5389084976 -1.0146047617 -0.1766921829  0.7593617285 -1.0656344279 #>  [306] -1.7701277455 -0.4213197853  0.2938629572 -1.1915914938  0.8885466676 #>  [311] -1.1851277579 -0.9113727652 -0.9720383454 -0.3094064957  0.6636986364 #>  [316] -1.2153908817 -0.9253622231 -0.4699007600  0.8481223740  2.0704600506 #>  [321] -2.3016115398 -0.0068447984 -0.8523305318 -1.5713358212 -0.6051659754 #>  [326]  0.7868187928 -0.1208489014  0.9286813591  1.0647393427 -0.8178659703 #>  [331]  0.2729408480 -1.4591153711 -1.2154464199 -0.2623009027  0.4829390004 #>  [336] -0.2829023110 -0.7633245987 -0.2772822268  0.3069402375 -0.8187164258 #>  [341]  1.3492726896 -1.7716561507  1.0691055430  1.7346594294 -0.1574779955 #>  [346]  1.4272450689  2.0002178629  1.0147608445  1.0968280523  1.0025241529 #>  [351] -0.5156401703 -1.6280810997 -0.0090470455  2.1104481076 -1.2732031516 #>  [356] -0.9929566512 -1.5768951454 -1.8673984610 -0.9857366722  0.2939127957 #>  [361]  1.2597515212  0.4557242227 -0.7034815357  0.8890093631 -0.4585597045 #>  [366]  0.9419532641 -0.7007057758 -0.4995206229 -0.8259762192 -0.4688424029 #>  [371] -1.3055744656  0.3333744696 -0.4614448852  0.3521294961 -0.5490813749 #>  [376] -0.4771589676  0.4473944033  0.4595738120  0.5543767379  0.7935496753 #>  [381]  1.2429444806 -0.5595430206  0.4146062383 -0.3025078750  1.8643797575 #>  [386]  0.2651118339  0.7988236258 -0.0308854361  1.0614272340  0.3365587597 #>  [391]  0.3549775321  1.7428531459  0.5425645846 -0.9238021390  0.6281901132 #>  [396]  0.9353529280  0.6383528212 -0.8375154826  0.9485355316  0.4443119506 #>  [401] -0.3033686689 -0.0691029786 -0.5270170521  2.2079722074  0.3245737875 #>  [406]  0.2667686400  0.9212231572  0.2001463974  1.6265991263  1.0250218348 #>  [411]  0.6919463285  0.4430913869 -0.4582377429 -0.1230264090  1.7556829986 #>  [416] -0.6028219672  0.9692612762 -0.1954384445 -0.7491883106 -0.2647029091 #>  [421] -0.7997477969 -0.9201552317 -0.2804671372 -0.6272167003  0.6237955047 #>  [426]  0.9226386982 -0.0297272600  0.3847620761  0.9446228746  0.2038674743 #>  [431] -2.1464341803 -0.5044805476 -1.4319162622 -1.1274391496  0.7854161812 #>  [436]  0.5173057153  0.0902495683 -1.1322623148  1.2469488088  0.5856738856 #>  [441]  1.1825766068 -0.0759583194 -0.3159783998  0.1291406457  1.1865169204 #>  [446] -0.6336145515 -0.2231924083  0.4906935603 -1.4815027506  1.0964919051 #>  [451]  0.2579264021  1.1701056090 -0.2339033048 -0.0199950242 -0.3504560807 #>  [456] -1.0050230938 -0.1255124061 -0.2196268862  0.3214099748  0.7220634841 #>  [461] -0.6254007951 -0.9639602788 -1.3713916182  0.6511702744  1.0748604282 #>  [466] -0.0761644232  1.4148631466  0.4505209733  0.0927138993  1.2621276773 #>  [471]  0.5206055787  1.2503286459 -0.7343384222 -2.2379092537 -1.7582537084 #>  [476] -0.0634050471 -0.0582541226 -0.1959311524  0.2733535851 -0.4167704843 #>  [481] -0.2265453617 -2.1178522473  1.0176441455  0.8728002773  2.3449410115 #>  [486] -0.7025560929  0.4520551304 -1.2022489757 -0.4613531524  2.5133779640 #>  [491]  1.5455441726 -0.4281290981 -0.1125728455  0.1497634874  1.0283201087 #>  [496] -2.6782941851  0.1235264458  1.5263363925 -0.7433754735  0.1634656203 #>  [501]  0.2548781881 -1.5109343157 -0.6268945043 -0.0135655258 -1.2972377103 #>  [506] -0.2463369903  0.2635784882  1.0797727210  0.5849644860 -0.1783719598 #>  [511] -1.4422230786  0.0980391261  0.7813527558  0.3909638814 -0.6980929367 #>  [516]  1.1271521368  1.8796406592 -2.6958515383 -2.3011929912  0.5870423352 #>  [521]  0.4359693231 -0.3827128710 -2.3305638384 -0.5963275271  1.8369623755 #>  [526] -0.2776716519 -1.2327228166  0.6551854498  0.4807579892 -0.2012550246 #>  [531]  0.5827506226  0.0288255730 -0.0251977398 -0.1565091616 -1.5442376714 #>  [536] -1.1529116166 -0.2039344461 -0.1574469655 -2.5016282979 -0.9616409031 #>  [541]  1.6204368165  0.9181070224 -0.0245569513 -1.6778372622  0.2667663590 #>  [546] -0.5252739695  0.6444102470 -0.4554046187  0.1319508967 -1.7014424279 #>  [551]  0.5754012522 -1.0702071800  0.5123001221  0.0069910597 -0.0800575946 #>  [556] -0.5550676624  2.4025955138  1.8325805924  0.3945228750 -0.9564844176 #>  [561]  0.8667639012 -0.7175113117 -1.1622085663 -0.1275286254 -0.2414775710 #>  [566]  0.4632809627  0.0016948721 -0.8377674832  1.4389165618  1.3930556763 #>  [571] -1.6908835744  0.8382043561  2.4446065074  0.0319686448 -1.6383877644 #>  [576] -0.4295559532 -0.9161953587 -0.3230798317  1.2163089715 -1.0787541226 #>  [581] -0.3848609014  1.1641636711  0.0748198982 -0.7650946137 -2.3424687437 #>  [586]  1.0645980915 -0.0409737337  0.1524873250  2.2310439568  0.6564116258 #>  [591] -1.8139893751 -0.3027460834  0.1036703090  0.4765706431 -0.4705084253 #>  [596] -0.0687127086 -0.3531740002 -2.7549557771 -0.9389117129 -0.0773521377 #>  [601]  0.4860924009 -1.3281835468 -0.9295099527 -1.2128131139 -0.8091027854 #>  [606]  0.1879459774 -0.6117315814 -1.2434445806  0.3022612961 -0.9888980045 #>  [611]  0.9158337356  2.5976026712 -0.6359295221 -0.1945473868  1.7748485129 #>  [616] -0.9002705964 -0.6913718253  0.1908089405  1.9553292446 -0.1892809408 #>  [621] -0.2474640617 -0.6919247214  1.3559443321 -0.2016301580  0.4023156477 #>  [626] -0.1121561401  0.1104958446 -1.6716591477  2.5733977500 -1.7879367838 #>  [631] -0.1546411860 -1.4223467685 -1.2280151269 -0.6862167640 -1.2430240192 #>  [636]  0.0314642927  0.7566166981  0.5487092217  1.5980035294  1.3975176551 #>  [641] -0.7155941336  0.3501500080 -0.3827384767 -0.0918759994 -0.2131488802 #>  [646] -0.8615272675  0.1690661815  0.1606546342 -0.5315053281 -0.4203616249 #>  [651]  0.0559513062  1.4582630565 -0.3187531805  2.1264796961 -0.8873279121 #>  [656]  0.2108798101  0.2795198322 -0.7786723615  1.8118378440  0.0328817584 #>  [661] -1.8133034485 -0.1597421854  0.7035265659  0.0924917693 -0.5371032240 #>  [666]  0.0840276210 -0.0408262377 -0.3205255026  1.4679644771  0.9196876871 #>  [671] -0.9304498316  1.4192907048 -0.9138368397  2.5252082301  0.2864215650 #>  [676]  1.2680869578  1.2177438036 -0.6198045918  0.2746704916  0.0278764081 #>  [681]  0.6994690001 -1.7954925035  0.1535636763  0.1008664647  0.2867049354 #>  [686]  1.4678679718  1.0013755050  0.9349889405 -0.2225065824 -0.2483101067 #>  [691] -1.3249594319  1.2651251456  1.0543636075  0.5266034068  0.3878125431 #>  [696] -1.1246127929  1.5757662452  0.4001336493  0.5276663811 -0.9388397770 #>  [701] -0.4239725208 -1.2002549368  1.6060218737 -0.2049948854 -2.0884618151 #>  [706] -0.4798799558  0.6182830459 -0.9239475963 -0.2374927839 -0.8203702019 #>  [711] -2.5918579564 -1.1849062979 -2.0509098161 -0.5178010536  0.4931797105 #>  [716] -1.2093388248  0.9829358809  0.6829609754 -1.8910873295 -1.1805374820 #>  [721] -1.0109328477 -0.2993995317 -1.7651773860  1.2938285182 -0.1137875097 #>  [726]  0.8923866542  0.8146295379 -0.1004525162  0.0194594546 -0.9014636985 #>  [731]  0.5291092036  1.9219119594 -0.1538835511  0.2438044133  0.9148515392 #>  [736] -0.5756583931  0.6267032788  0.1049122153  2.7587016011  0.9524198631 #>  [741] -0.9686821128 -0.8146660548  0.2265785898  0.4061676874  1.0591461548 #>  [746]  0.5549747628 -1.0354492150 -0.3142263352  0.7663968028  1.0414026385 #>  [751]  0.7172790306 -0.2331480620  0.2867894342 -1.2697141441 -2.3577676747 #>  [756]  0.5253866559 -1.1501609613  0.9873542042  1.0446458698 -1.3896663694 #>  [761]  0.9789275438  0.5737685734 -2.6780828216 -0.6409761073 -0.2872053354 #>  [766]  1.4579759422 -0.7285168780 -2.1094384550 -0.3199400426  1.1788261905 #>  [771] -0.1837516967  0.1130144926 -1.4657986409  0.2173147419  1.4532684879 #>  [776] -0.3120269425 -1.0344148247 -0.9995656159 -0.6654358016 -2.5323732778 #>  [781]  0.5113690494 -0.7367493702 -0.4505586322 -0.0730068517  0.3969979117 #>  [786]  0.5378544799  1.5512259629 -0.2383005913 -0.0717752968 -0.8563885311 #>  [791] -0.4523381091  0.5152248308  0.4506294046  0.0236362825 -1.1395605680 #>  [796] -0.2013431119 -0.2184557580  1.0179841779 -0.6729820162 -0.9049377132 #>  [801]  0.5902461560  0.9291995204  0.9543546273  0.2784422352  0.5268824410 #>  [806]  0.5986411512 -0.1067508922  1.1692186114  1.6216276727  1.5044985196 #>  [811]  0.7278786947 -0.0860117661 -0.1337978856 -0.2822288326 -1.9941959878 #>  [816]  0.3577319836 -1.3174868836  0.0296789582  0.3426624529  0.4668958371 #>  [821] -0.4280729301  0.2376043417 -0.1154830086  0.4902008967  0.7618328253 #>  [826] -1.2564952247 -0.6467709224  1.8496931660  0.7198020243 -0.3601951206 #>  [831]  2.3407484542 -0.2992365633 -1.4891132243  1.1592744227  0.0646534296 #>  [836] -1.2721738527  1.2214888959  0.1964372286  0.6702313570 -0.5039713567 #>  [841]  0.1333125653 -1.9025213504  1.7416174098 -0.2214363842  0.7152888772 #>  [846] -0.6802447646 -0.0058683935 -0.5491546314 -1.6343854750  1.0282108848 #>  [851]  1.3235387257 -0.6959932896 -0.8572422478 -0.5633650733 -0.2672809700 #>  [856] -0.2524261170 -1.6051679052 -1.2096638497 -1.0606845574 -2.2900920498 #>  [861] -0.6774620010 -0.4137201110 -0.4504763099 -0.8676152576 -0.1960285792 #>  [866] -0.2136024129  0.1359844829  0.9436425617 -1.5086055683  0.5421350291 #>  [871] -0.3580483431  0.8944898477  0.3112925079 -0.5329936139  1.1155972651 #>  [876] -1.6539566045  0.7781005788  0.3139975303  1.3058197789 -2.6927008660 #>  [881] -1.5117773428 -0.5202654319  0.9919563276 -0.9877538154 -1.5358191468 #>  [886]  0.2561279123  0.2118495429 -0.1860376858 -0.8213877381  0.2815569155 #>  [891] -1.2951658348  1.7758082787  0.1997037005 -0.3893150084  1.0992884388 #>  [896] -0.7559753207 -0.7486395301 -2.4551637465  0.5007615127 -0.4447651576 #>  [901] -0.0903216143  0.0098305568 -1.0117488031 -0.0858407548 -1.9468443393 #>  [906]  1.7034473818 -1.5405798796 -1.9070682516  0.7250129579 -0.0103519249 #>  [911] -1.5211360770 -0.8262647862 -0.7653688727  0.6405781957 -1.3298169493 #>  [916] -0.0360792208 -1.1343681698  0.7160981699  2.6668082990  0.1255864437 #>  [921] -0.0218614536  0.3381333108 -0.0328643457  1.6775943211  0.4397678346 #>  [926]  0.1536759560  0.2901421891  0.0302552362  0.1061102788  0.3517412221 #>  [931]  0.3531782454 -1.0233199607  0.8693768160  1.0554348428 -1.5696494819 #>  [936] -0.8207762845 -1.8230849942  0.6851738024 -0.2101755663 -0.7129819755 #>  [941]  1.6662567560  0.9831829469  1.8484465850 -0.9584332162  0.1210634445 #>  [946]  1.4306897417  1.6669735172 -1.0152301075 -0.1430002217  0.7447143084 #>  [951] -0.6889206191 -0.0767397742  1.3621764390 -3.0516912506  1.1685756284 #>  [956]  1.2876293073  1.8368095346  0.3653798821  0.5195559992  0.8837373642 #>  [961]  1.1106130282 -0.9865404467  0.6853181867  0.5430191709  1.6257877458 #>  [966]  0.4572646009 -0.6852196648  0.9682694824  0.3349471110  0.0404590007 #>  [971]  0.7137277070  0.7363554874 -0.2206359166  0.3122504413  0.1615650013 #>  [976] -0.6271067763  0.7004781894 -0.4046028877  0.0498141192  2.5336219740 #>  [981] -1.3536443604 -0.0286825270  0.0527410914 -1.6494895831  0.6010644925 #>  [986] -1.7241414696 -1.6197833448  0.8798184842  0.3444662984 -0.9140824115 #>  [991] -0.3457375502  0.9212110325 -0.0807883840  0.8648020226  0.4115553379 #>  [996] -1.0000346429  0.8460381542  0.3438823527 -0.2478476924  0.2600090605 #> [1001] -0.2592538081 -1.1337516273 -3.0004080460 -0.0187919561  0.3209714251 #> [1006]  0.1365840635  1.9582284506 -0.5417904207 -0.0325281923  0.7249499748 #> [1011] -1.0414203463 -0.0496512687  0.5446865774 -0.7345542830  1.3179651214 #> [1016] -0.7585721470  1.6971376432 -0.2684628160  0.1388809373 -0.2944696896 #> [1021]  0.5361400589 -0.2061560562  0.1969444477 -0.2150229736 -0.3282905035 #> [1026] -0.3054554672  0.5575684967 -0.0974771619  1.6343200206  0.3988134163 #> [1031]  0.5361360258 -1.0854645105 -0.2245129658  0.7974047025 -1.4768965606 #> [1036] -0.6859043406 -0.7228016551 -0.2492430054 -0.0733781343 -0.2494161075 #> [1041]  0.1338081110  0.7783215881 -1.8026250938 -0.1612945115  1.3080215659 #> [1046]  0.2814957800 -0.2199583328 -0.4098033586 -0.8370012834 -0.2520205969 #> [1051] -2.4321017634  0.5540747256 -0.6518259521  1.1235616908  0.6914571655 #> [1056] -1.3594399435  0.2739700132 -0.3679695140  1.9182525515 -0.9889601184 #> [1061]  0.3042711330  0.9645830175 -0.4216860208  1.0412273131 -0.4863296435 #> [1066]  0.7481819110  1.5247768692 -1.6437006104  1.0668956129  0.1197990744 #> [1071]  0.7639812309 -0.3569264221 -0.5702263348  0.3212514310 -0.1717067609 #> [1076]  0.4463422533  1.4404367520  0.1405945032  0.0130942772 -1.2418046630 #> [1081]  1.3286139458  1.7618869870  0.2918311253  0.7826600258 -0.2659313916 #> [1086] -1.5572092199  0.2213901731  0.8303458509 -1.3711137236  0.9702340182 #> [1091]  0.7740185334  0.6098016664  1.0823686664  0.5420579108  1.7194210205 #> [1096]  0.4041644166  0.7398822111  0.6706458236 -0.9099061709  1.5184581878 #> [1101]  1.7740627859 -0.1787012987  0.3938488663  1.6620395636  0.5657272650 #> [1106] -0.7665217497 -1.3560215449  0.4358963150  0.3925804736 -1.7212018968 #> [1111] -1.2263289257  0.2728707981 -0.4771775578 -1.1481344058 -1.6833890632 #> [1116] -0.8188937221 -0.4906355609 -0.4682575881 -0.0460867248  1.2071488278 #> [1121]  0.0409171411  0.4269966460  1.5164877675 -0.1162978571  0.3621912326 #> [1126] -0.3746055139  0.7217997915 -0.8779182823  0.5264825912  2.3384642595 #> [1131] -2.1201501781 -1.0098591269  1.5485276353 -1.7492764450  1.8048688045 #> [1136] -1.2278698319  0.7143310513  0.1854407753  0.1497092718 -0.1354161271 #> [1141]  1.5818626478  0.7902058030  0.0450738800 -0.4003581964  0.3229039363 #> [1146] -0.7113409105 -0.5132070929 -0.4368048068  1.1017379088  1.3180229069 #> [1151]  1.2700542532  1.8379914076 -0.2839767652 -0.5025521720  0.6367132180 #> [1156] -0.4134548879  0.8270573465  0.9239217822  0.3051027873 -0.8664621929 #> [1161] -0.9554984293  0.2727379532  0.8032424921 -1.2543138375 -1.4730164463 #> [1166]  0.3383425702 -1.2420253577  2.5533620222 -0.9394084716 -0.8437377794 #> [1171]  0.6004021852 -0.3968436081 -0.2131676205  0.5364957617 -0.6017640197 #> [1176] -1.1805390180  1.8391100130 -0.5114053711 -0.5587406147  0.2721352777 #> [1181]  0.6385708125 -0.0490199511 -1.6129996852 -0.0475091734 -0.1240369352 #> [1186]  1.2078491289  0.3418080017  1.0967858793 -0.2440830348  0.4066856810 #> [1191] -0.5940173169  1.4391347962  0.7173851121 -0.5804268112  0.1950748151 #> [1196] -1.2490765337  0.3432254683 -0.4918222227  1.8771915224 -0.1229686907 #> [1201]  0.9299953716 -1.2990302102  0.6625315307  0.6909580358 -0.9705883257 #> [1206]  1.3044331504 -2.2119957795 -0.7486314005 -3.0415846104 -0.0740663561 #> [1211] -0.5467783674  0.3880422099 -0.5301384634 -0.0645701893  0.2882098202 #> [1216]  1.2692574708  1.0119072691 -0.4989390604  0.9308058883 -0.4969726701 #> [1221]  0.9882979247 -1.2059453173 -1.5901395036  0.1995090909  0.5976553252 #> [1226]  1.2188073819  0.1225820698 -1.1699736681 -0.6274103025 -0.5302761380 #> [1231] -0.7031799715 -0.6945407832  1.1973457942  0.2792169950 -1.4317642256 #> [1236]  0.6081631558 -0.6584573505  0.3581294059 -1.3500637939  1.0160637244 #> [1241]  0.9687733566  0.1170800495 -1.6913127517 -1.4029775433  0.1323400098 #> [1246] -2.0691955677  1.3755372206  1.3048446825 -0.0982690426  0.5711612783 #> [1251]  1.9471971555  0.6005802951 -0.6401118704 -0.6778266835 -0.4384798280 #> [1256] -0.7817661931 -0.7398456009  0.2566693194 -0.1061579914 -0.3783064923 #> [1261] -1.0634922611  0.4534613107 -0.2899275121 -1.6408924615  2.6311943488 #> [1266]  0.8574891614 -0.7665941007 -1.3565792210  1.5711730376 -0.1477975693 #> [1271]  1.2287335866  0.3877933330 -0.4036122728  0.1559239820 -0.1864671267 #> [1276] -1.5167809011 -1.2263051424 -0.9467446468  0.5215548226  1.5247976418 #> [1281]  0.0236261985  2.3634235603 -1.8874951965  1.5864683770 -1.3324824699 #> [1286] -0.4646321802  0.2664178939 -2.2668488108  0.5412040854 -0.4483297097 #> [1291]  0.8325122072 -0.2075028917 -0.5088519023  0.6922540430  1.9857867306 #> [1296] -0.0798243319 -0.2636558247 -0.7602765200  0.8289414712 -1.7996656526 #> [1301] -1.2009236555 -0.0304177316  1.2245480826  1.7968807260 -0.0782751294 #> [1306] -0.3016552609 -1.3626860427 -0.5180248734  0.3699111130 -0.3856970476 #> [1311] -1.3921436194  1.2428681833 -0.1622241811 -1.0646736342 -0.3656760722 #> [1316]  0.7851656755 -0.3337422835  0.5418131170 -0.3433916506  0.4676727329 #> [1321]  0.2665166001 -0.5119980140 -0.7848866969  0.2294707733  0.5226827181 #> [1326]  0.5328768953 -0.8216428114  1.9236305644  0.6167858833  0.3855995206 #> [1331]  1.6517110210 -0.6515553093 -0.0040041325  1.8141597356 -1.1519028891 #> [1336] -1.0433864921  0.4160040301  0.9087020232  1.0904532758 -0.7219007947 #> [1341] -1.2838273764  0.4374893011  0.1712370550 -0.2421780948 -1.4784327532 #> [1346]  1.8771508379 -1.0270430040  0.3731788288 -0.7034700985  0.1433294806 #> [1351] -0.7999041739 -0.3692168868 -1.1280146295  0.4514384052  0.3547252077 #> [1356] -1.2547206294  1.4632520842 -0.5455905993  1.4439454551  0.6022372684 #> [1361]  0.5422045856  0.0245660080  1.1042221039  0.4711425706  0.3486528067 #> [1366]  1.0419429824 -1.1500085482  0.5380329823 -0.2706453410  0.9552056650 #> [1371] -1.1273281731 -0.4235343716 -0.0371585566  0.7265238711  0.2773161712 #> [1376]  0.8546253281  0.8422365026  0.3418008686  1.9758489214  2.6513849072 #> [1381] -0.1085253772 -0.2989116185 -0.6947512753 -0.6724421566 -0.2538627551 #> [1386]  0.3060105436 -0.8101236490  0.5402402157 -0.2266993250  0.3159099310 #> [1391]  1.0450947861  0.8440482450  0.5152000907  0.2675609584  0.6923876706 #> [1396] -0.9509356787 -1.8257383215  0.1191553471 -0.4582592095 -1.4128734771 #> [1401]  0.5447432033  0.1299726318 -0.5588965272  2.3256548992  0.4936884388 #> [1406]  0.5739676990  0.6881016273  0.7910016000  0.9531580803  1.5187544286 #> [1411]  1.3082090820  0.8662560250 -1.0030020643 -1.6956244618 -1.6145500104 #> [1416] -1.0242113525  1.5828772141  1.3665115454 -0.4378142555  1.0845737815 #> [1421] -0.3213495561  0.0875515854 -0.1765469873  0.0132311824  1.8468418039 #> [1426]  1.5093086264 -2.7313403696  1.0322552991 -0.1560666653  0.1011718832 #> [1431]  0.3817370646 -1.0070246537  2.0947966878 -0.1838416415  0.0431973023 #> [1436] -0.1557828104 -1.0445999926 -1.5542092796  0.5088964504 -0.0239197399 #> [1441] -1.0355904804 -0.2770463610 -0.9843591564 -1.8150768024  0.1710894244 #> [1446] -1.4234019415 -1.1788846715 -1.0980730576 -1.6989562746  0.5619205554 #> [1451]  1.6340382197  0.8194895257  0.4270020835  1.1406313192  0.0131784795 #> [1456]  1.1585512111  0.3449302284 -0.3783122157 -1.3844434765  0.8791199323 #> [1461] -1.8248545797 -0.3386681547  0.1986244434 -1.0799172872  0.1337525481 #> [1466]  0.1445019753 -1.4754448322  1.6590245352  0.3712057025 -0.7254650831 #> [1471]  0.5715161543  0.3605251147  1.4299472570 -0.4242791660  0.7291116297 #> [1476]  0.6712877147  0.8283784248 -1.5928019426  1.2818683713  0.6102273722 #> [1481] -1.2174274548  0.3457969454  0.9095395915  0.1861913125  0.7884799219 #> [1486] -1.3474063331  0.0843228475 -0.5930510382  1.4744209630 -0.4801545950 #> [1491] -0.0256945244  0.3660524161  0.8681091109  1.5293317132  1.6719836232 #> [1496]  1.2371475898 -0.5159335798 -0.0453981907  0.6435881089 -1.8244665141 #> [1501]  0.3233421069  0.3313092599  0.5953432508 -0.6455386490 -0.4188615391 #> [1506]  0.6117659482  0.2197335897 -0.0793680676  0.8970242255  0.8496598776 #> [1511] -0.0837730337 -0.7456980809 -0.4767578970 -1.3241015760  0.6630760318 #> [1516] -1.3000494675 -0.5851729954 -2.0877455207  0.3050969773 -0.3131540714 #> [1521] -1.1553052157  0.4377339476 -0.5223351423  0.6145409051  0.3608300312 #> [1526]  1.2042086840  0.7792976672 -0.5125454745 -0.5998924316 -0.3915837797 #> [1531] -0.8028353491  0.5252420370  1.8161452717  0.5335642811 -1.5029869399 #> [1536]  2.0006776170 -2.0059471805 -1.0796836793  1.4390742220  0.3604974776 #> [1541]  0.2889130257  0.9475522453 -2.0108004255  0.3805005391  1.4208336194 #> [1546] -0.4545245397 -1.3158736027 -0.1905939884 -0.8704399046 -1.0860043323 #> [1551]  2.2231294628 -0.6611596942 -0.4044219127 -1.6791546123 -0.7229825996 #> [1556]  0.4766559836  0.5449863177 -0.2955818930 -0.4107096838 -0.5042037839 #> [1561] -0.0657547827  0.6414121653 -0.7459434633  1.7663708116 -0.4977068568 #> [1566]  1.4797350721  1.2619509930  0.2908845373  0.3831959764 -0.0797890286 #> [1571] -0.0565869624 -0.6625089985 -0.5645931838  0.9721071759  0.8557062608 #> [1576]  0.9326198850 -0.7735978533  0.3096360292  0.7519276578 -0.1991092611 #> [1581]  1.2147627118  0.0210652997  0.2172722021 -0.6987265430 -0.8504901605 #> [1586] -0.9343303945  0.3997166159 -1.5334144902 -1.2311967050  0.7943734042 #> [1591]  0.9416545094 -0.6097998574 -1.5063672605  0.8686384654  0.4821273736 #> [1596] -0.8844436621 -0.3496972690 -0.7644410828  0.9009070109 -0.4726474087 #> [1601] -0.1307478020  0.6497454401 -0.2376641337  0.5388134368  1.6373095546 #> [1606] -0.1165865942 -0.5631663419 -1.4416454155  0.0358053327 -1.5321653857 #> [1611]  0.4027404961 -0.7417933680 -1.3705315683 -0.6145425548 -0.8919697191 #> [1616] -0.3567778867 -0.1308270414 -0.3296178127 -0.0531699799 -1.6788824017 #> [1621] -0.1014364583  0.1785297809 -1.2386088557 -0.5724044480 -0.7343251330 #> [1626]  1.2463974046  0.2997522717  2.5107180802 -0.0287767884 -0.8249416928 #> [1631] -0.7342790113  0.6505387449  1.6330432644  1.3295711840  1.8084178104 #> [1636]  0.3507214076  0.4930359429  0.2449959468  0.0933680328  0.9561204360 #> [1641] -0.9977026262 -1.2195344165 -1.8078881103  0.6811360963 -0.2797164037 #> [1646]  1.1905617155  0.5593240009  0.5171114084  0.8498960052  0.0843258264 #> [1651]  0.0482612995 -0.6870732857  0.9843553382  1.1134498851 -1.5495319008 #> [1656] -0.0984870596 -0.5155685462 -1.3853305094  0.8029250712  2.2008797798 #> [1661] -3.5095709386 -0.2349641818 -1.1816150310  0.8881576463  0.3724640657 #> [1666] -0.8346649196  0.9406642089  0.3968487999 -0.2767713798  0.2008861742 #> [1671] -0.7928921649 -1.1041952023  0.6050593684  1.3879779557  0.6145860664 #> [1676] -0.5620547721 -0.6623697568 -0.8721622218 -0.6086729541 -0.4032377211 #> [1681] -1.0577206841  0.2243700071  1.8442734909  0.2973763055 -0.0009604208 #> [1686] -1.7232330645 -0.7357180449 -0.4727639470  0.7131816146  1.4694737795 #> [1691] -0.1221753191  0.1398769196 -0.4237383381 -0.4143675124 -0.2511012782 #> [1696]  0.0418175889 -0.6634932321 -2.1732509495 -1.0016987802  2.0908794334 #> [1701]  1.9696164583 -1.1256089721 -1.0151355986 -0.0462203921  1.1241329016 #> [1706]  0.9564087034  0.9231919170 -1.0227141333 -0.8570673864  0.7173223890 #> [1711]  1.0335047916 -0.4441114129 -0.6549424144  0.4669332342  1.0839486746 #> [1716]  0.8527366027 -0.1251436336  0.1736808398  0.7000395530  2.4256309277 #> [1721]  0.7621875476 -1.4437786853 -0.6022315870 -1.4980044247 -0.9641375170 #> [1726]  0.6052139145  0.2707598178  0.5092481754  2.3320820014 -0.4121821422 #> [1731] -0.5067747672 -0.8671457499  0.4842671415 -1.3529049289 -0.5082214165 #> [1736]  0.3380062802  0.0266917108 -0.9508987538  0.6065399878 -0.4516134434 #> [1741]  0.5678349624  1.0108118558  1.4869105833 -0.8813148256  1.3282300672 #> [1746] -0.1019112275 -0.3697415714 -0.3365519851 -1.5023545526  0.4888352037 #> [1751] -0.3872477682  0.6213702843  1.3205010546  0.5466866229 -1.5580412132 #> [1756]  0.3460780244 -1.2850211776 -0.0071110286  0.5807984243  0.6569814802 #> [1761] -0.6013698351  0.0337354289  0.8842524469 -1.4576416394 -0.4779076373 #> [1766] -0.0960432377 -0.6855730889  0.4758245159 -0.3841207542 -0.1463957830 #> [1771] -0.0096352041 -0.1799674695 -0.9326173757 -0.8545888113 -2.0060538601 #> [1776]  0.1219619473  1.8978298788  1.5931999088  1.1364362454 -0.8009416190 #> [1781]  1.5872247360  0.6603324750 -0.0589574765  1.5235225294  0.4203402078 #> [1786] -0.4983973201 -0.6251982855  0.1609740655 -1.1468975449  1.1342995795 #> [1791] -0.4401298404  0.8564929940  0.9185836666  0.0400739426  0.5067936194 #> [1796] -1.0964836364 -0.7124597856  0.7527424001 -0.0307598766  0.5987049327 #> [1801] -0.1328746805  0.2353921924  0.0934683941  0.3465542877  0.5584542665 #> [1806]  1.4555319013  0.2169195662 -0.2987911630  1.3597484618 -0.4112753314 #> [1811] -0.1508742540  1.0197384196  0.6043203346 -0.5091230695 -0.3767662276 #> [1816] -2.0542033950 -1.9903640374  0.3709813976 -0.9347880911  2.3089825923 #> [1821] -0.3412019990 -1.2109977285 -1.4145104652  0.0392581365  1.6158284937 #> [1826]  0.2618245929 -0.0967053214  0.1122565395 -0.1207799313  0.5075718618 #> [1831] -0.5108652694  2.0217680353 -1.2463138124  0.3323950826  0.3777902536 #> [1836] -0.3211008799 -0.3627500083 -1.3266480450  1.2664772000 -0.9042814771 #> [1841] -0.0633078963  1.0461435016 -1.7589164889 -0.6784586551 -0.1042184146 #> [1846] -0.0828151028  0.1493429828 -0.2970346623  0.1290471948  1.1170670951 #> [1851]  3.2775621086  0.3225303273 -0.3567114100  0.9719923266 -1.3458510611 #> [1856]  0.5007492461 -0.1365538044  0.9729768585 -0.0856042045 -1.4646999686 #> [1861]  0.1629056369 -0.5737451756 -1.3168800685 -0.5073005533  0.8551348953 #> [1866] -0.7581655520 -1.3243304076 -0.0270738072  0.5710908371 -0.5037584523 #> [1871]  0.7459050794  0.1438455992  0.6094042575  1.1613780173 -1.0788971711 #> [1876]  1.9589475428  0.1500543404  1.1456862781 -0.2203216997  1.7029082946 #> [1881] -0.6185590522  1.3979160940  1.5757835492 -1.2283853512 -0.6971144394 #> [1886]  0.5019987210 -2.4474200790 -0.8341606887 -1.9017545216  0.2814799024 #> [1891]  0.3275992711 -1.3542982125 -1.0377054409 -0.5603255305 -0.5843886962 #> [1896]  1.6396139898 -1.3462175280 -1.2812216376  1.2046813154 -0.9689828725 #> [1901]  0.3725835487 -1.8979683125  1.3043364814 -2.5736405696 -0.4298512556 #> [1906] -0.5029676903 -0.0519844162  1.2098513975 -1.1054872242 -0.0362383053 #> [1911]  0.5545584084 -0.6335020293  0.2418730692 -0.6205495640  0.3648425504 #> [1916] -0.3070534212  0.3699780004 -1.1386631819 -0.6901526426 -1.6476687660 #> [1921]  0.7840679225  0.3891460714 -1.1645108258 -1.4393989363 -1.1645237772 #> [1926]  1.2259883490  2.5061829234  0.4221313280 -0.5219022989  0.0735869266 #> [1931]  0.0195963255 -0.2546967526 -1.0175764016 -0.3702922895  1.1349304160 #> [1936] -0.0067478339  0.9878861161  0.1794138383 -1.1040308765  1.4833197345 #> [1941] -1.2972705743  1.2277554137  1.3259303877  0.0137000659  1.4926800816 #> [1946] -0.5792127393 -0.1745076699  0.2380404749 -0.7426201434 -0.5637692703 #> [1951]  0.0150269246  0.5752047055  0.5732334598  0.2730205165 -0.9737883275 #> [1956] -0.8987372598  2.0460446497 -0.4252941591  0.4078151796  0.1759340091 #> [1961] -0.2165008070  0.0803579199  0.4110549534 -0.8021879875 -0.2120504236 #> [1966]  1.0101556196 -0.3030270539 -0.5183480890 -2.0068281858  0.1756801609 #> [1971]  0.7848900337 -1.6436086903  3.3400774528 -1.1657804884 -2.1001681990 #> [1976]  0.2920568713  0.5487209859 -0.8147809646 -0.6838874326 -1.5982348123 #> [1981] -0.0575187496  0.9192186867  1.0651579154  0.7627701564 -0.9026482297 #> [1986] -1.9731921645  0.8863442201 -0.1854495245  0.3678908024 -0.6113517320 #> [1991]  0.9749078767 -1.3556788002  1.3766424829  0.7298360647  0.2467757991 #> [1996]  0.1537988880  0.1508435771  0.6950170119  0.6600771290 -1.2764463994 #> [2001]  2.2869442027 -0.5378221292  0.6371768925  1.3457146027 -3.1949013104 #> [2006] -0.5383153308 -0.2042386322  0.4158858576 -0.4761779400  0.2023772906 #> [2011]  1.3118819441 -0.2571690441 -0.5883139166 -0.3892008445 -0.7508286670 #> [2016]  1.6983613710 -1.2046398533 -0.4376508524  0.9965197202  0.5693766089 #> [2021]  0.8854134160 -1.6827816986 -1.9185838302 -1.3727400555 -0.1970034827 #> [2026]  0.5516617178 -0.7845862850  0.5668827682 -0.1467251679  0.1340382544 #> [2031] -1.7190585008 -0.1564656601 -1.0059019648  0.0600615902  1.2830436572 #> [2036] -0.4683494701  1.2391651581  0.0405169847 -0.1112955733  0.9859909562 #> [2041] -0.1347476710 -0.1984377234 -1.6814127131 -0.4488087718  1.2594010330 #> [2046]  0.1620106793 -1.0546731128  1.8358446644 -0.7581675430  0.2107450117 #> [2051] -0.7899356721  0.4039095259 -1.1194352831  0.8042806475 -1.2782033656 #> [2056] -1.7697641309  0.7283758768  0.4632598625 -0.4225305625  0.1985811129 #> [2061] -0.1182596024  0.4849772290  0.2923614139 -1.0874853849  0.9766130859 #> [2066] -0.0160851485 -1.3996744213 -1.3763989483  2.8178076949 -1.5584528207 #> [2071]  1.5017331172 -0.3677389867 -1.1453136611 -0.1747224911  0.2298519689 #> [2076]  0.0183690499  0.6424633711  0.9894214807 -0.0782032368  0.5954216543 #> [2081]  0.2425048409 -0.2922209556  0.8238936730  0.6447714652  0.1049055661 #> [2086]  0.4567345195 -0.1701879406 -0.7453769134 -2.2719825935  0.2664877858 #> [2091] -1.1540367238 -0.3438406624  0.1735069253  0.7845637084 -0.2470114379 #> [2096] -0.8877372908  2.1440867354  1.6310679118  0.0057553111  0.6682390864 #> [2101]  0.1756331153  0.0701530768 -1.9567877028  0.6192949190  0.3482757662 #> [2106] -0.4846956253 -0.1177513612  0.5485528011  1.1093773915 -2.1084936794 #> [2111]  0.1826121389 -0.5302785235 -0.4663125307 -0.5406838440  0.3199309165 #> [2116]  0.1996598162 -0.7922411078 -0.1871977691 -0.6923510390 -0.3564247546 #> [2121]  1.3992057037  0.0516332819 -0.7343093119  0.2702799754  0.5534583847 #> [2126] -1.4916485599  0.6564415929  0.5682574054 -3.0654147386 -0.1286860455 #> [2131]  1.1794519349  0.6020715166 -1.1788867466  0.5563439771 -0.5511623487 #> [2136] -0.7560485317  1.5697291727  0.0547395956  2.0009239966  0.3342582615 #> [2141]  0.4792229744  1.6864345488  0.0706490314 -2.1457182592  0.9184439063 #> [2146]  0.1837912319 -0.6506971454 -0.2212522727 -0.6167134605 -0.1245460466 #> [2151]  0.2269628455  0.3540363555  0.1595188476  0.9228616734  0.4345947160 #> [2156]  0.6284435877 -0.0064595419  0.8544430971  0.0149288907 -0.4331400699 #> [2161]  0.3856388262  0.2291154396 -1.6571477174 -0.2606500154 -3.4289227057 #> [2166]  2.0233777724 -0.2611553483 -0.1495490248  0.4335948523  0.5183458108 #> [2171] -0.2520968069  1.3561237148 -0.3689848881 -0.1377953889 -0.2372917801 #> [2176] -0.7559226697 -0.5486475131 -1.4015334414  1.5848463841  0.1536171273 #> [2181] -0.6901331651 -0.0206750315 -0.8568549774 -0.2845380111  0.9561879626 #> [2186] -1.2044723001  1.7826491227  0.7852813191 -0.7070889921 -0.2417703181 #> [2191]  2.1808753949  1.6958116173  1.6589378365  0.7667280113 -0.4204772855 #> [2196]  2.1833155030  0.2940516206  1.6628484844 -1.0607489668  0.4798865998 #> [2201] -0.5350925086  0.5411866986 -1.8368556027  1.6443478808 -1.8230868337 #> [2206] -0.4256923931 -0.9187514710  2.0607380408 -0.0087219978  0.6251172834 #> [2211] -0.1205667606 -0.5347186406 -0.4165870756 -0.2226223053 -0.8699944923 #> [2216] -2.5374542905 -0.2176308769 -1.0213296121 -0.1351120915  0.2519136050 #> [2221] -0.7093325494 -0.5472060919  0.1291786826 -0.4445679709  1.6026541374 #> [2226]  0.2301769390  0.5187942310 -2.5061634288  0.0139886290  0.4628464327 #> [2231] -0.2646430023  1.7767866412 -0.5450433194 -0.3027824445 -0.5157971936 #> [2236] -0.0826858849  0.7817786370  0.9658211743  2.0220512530  0.1488507278 #> [2241] -0.3283068487 -1.6094318270  1.5148884069  1.1321823917 -0.2795281383 #> [2246] -1.2348919113 -0.6134442533 -1.3913639220 -0.4849880766 -1.1128587051 #> [2251] -0.9723931201 -1.4861917011  1.7731666252  0.2941782982 -1.1784086893 #> [2256] -1.5357636998  0.5231160762  0.4087776642 -1.3858398869  0.6568160432 #> [2261] -0.1849746735 -0.0136931989 -1.4064737737  0.1528486019  1.6728542125 #> [2266]  0.1400623799 -0.0965955822 -1.8883515622  0.3755978589 -0.0077830216 #> [2271]  1.9421881879  1.6539091422 -0.1107957154  1.6760923081 -1.5559003604 #> [2276]  0.2887058336  0.2101067467 -0.9401773959  2.4151961343 -1.6163647847 #> [2281] -0.3328961507 -1.0965362849  0.5288504000  0.4177181629 -1.2329621448 #> [2286] -1.1026269469 -1.0094247461  2.3390822864  0.9118426774  1.5903136993 #> [2291] -0.0258560782  0.5995501875  0.0287164143 -1.4485101119  0.4216855649 #> [2296] -0.2446750401  1.0069800062  0.4437849907  0.0109222532  1.9280926860 #> [2301] -2.0416343557 -1.2972088208 -0.3897912183 -1.1478621686 -0.1017593613 #> [2306] -0.0533260078 -1.3180964329 -2.0038019709  0.1055262280 -0.6051076215 #> [2311] -0.7270821866  0.6156146177 -0.3997067141 -0.6939751121  1.6245628536 #> [2316]  1.0534989756 -2.0896456829  1.0519479507  2.5243753770  0.1822610073 #> [2321]  0.7968682471  0.8617916826 -0.2148091716 -0.2476497525 -0.9832652038 #> [2326]  0.6893488721 -0.5256246329  0.5737812924 -1.4059853846  0.2118008489 #> [2331]  0.8926152672 -1.1158778661  0.2769057775 -0.9589550125 -1.8497901024 #> [2336]  0.6434754097  1.7259832132 -1.2395268966 -1.3153442563 -0.2255585220 #> [2341] -1.4165469743 -0.9875211870 -0.1828036542 -1.0502773802 -1.6474840296 #> [2346]  0.7286566177 -1.2191582279 -0.9785331809 -0.9367103640 -0.3919975318 #> [2351] -0.7439325655  0.6223554831  0.4182404217 -0.6040302523 -0.0307683658 #> [2356] -0.3105389741 -1.3045648866  0.1422687891  1.0961363014  0.3705754975 #> [2361] -0.3947031771  0.6071489185 -1.2185811224  0.1921671230  2.5577805613 #> [2366]  1.4947523297 -0.4365796959  1.7005992904 -0.1964827465 -1.5042827062 #> [2371]  0.4654854095 -1.6826583953  0.4175049143 -0.7878131866 -1.2966891239 #> [2376]  1.3011098928 -0.4284367274  2.1945330879 -0.3643977683 -1.2510249197 #> [2381] -1.4023653253  1.0573218040 -0.7089437895  1.2645129169 -0.4335332705 #> [2386]  1.3042694041 -0.3004104749 -0.1380797217  0.7456024502 -0.4880788358 #> [2391]  0.2329827086 -1.7701261872 -1.5045619628 -0.2709109680  1.0235083202 #> [2396] -0.8273141920 -0.7125121386 -1.4464386000 -0.8365166355  0.3579871856 #> [2401]  0.7013525856 -1.8158119902  2.0854891096 -0.5073135580 -0.0992426687 #> [2406] -1.6481185459  2.2028981638 -0.5168274216  1.3655024466 -0.2841834865 #> [2411]  1.7316441221 -0.6160524085 -2.6161168777 -0.3711264461  1.8811848707 #> [2416] -1.3283720521 -3.6997714856  2.1416636714  1.3423662606 -1.2411278050 #> [2421]  0.6095710144 -0.7591216430  1.7612056501  0.6826486112 -0.3581022466 #> [2426] -1.4742284674  0.7121457665  0.4954825038  2.0080624759  0.6706555901 #> [2431]  0.0444312477  0.0646337032  0.9464344382 -0.2442842802 -2.3710073803 #> [2436] -0.4739872237  0.1151590523 -1.4870473071  1.0870112534  0.3979480862 #> [2441]  0.0850881369 -0.3405915412  1.9186706760 -1.3628838421  1.0691903164 #> [2446] -1.6064791011 -1.4132916029  0.3147267245 -0.6459650673 -0.3256839837 #> [2451]  0.4181806938  0.1956437219  0.3792938032 -0.3781882079  0.1100566018 #> [2456] -1.5619049091 -0.5810612213 -1.6487493504 -0.0866390160  1.0253105113 #> [2461]  0.9397968976  0.8100360867 -0.6800195845  0.7698505984 -0.3750711949 #> [2466]  1.4865895136 -0.4633789541  0.9727030511  0.6881261573 -0.6053547710 #> [2471] -0.2354101504 -0.4633907882 -0.2818820600  1.1094836507 -0.2151470573 #> [2476] -0.5417020512 -1.4938100309 -0.5497098021 -0.7136141669  0.4098148996 #> [2481]  0.4487452901 -0.5748120595  0.8988846664  1.4687008992  0.4767260855 #> [2486] -0.1170664980  0.1775963095 -0.0582065178  0.8878746543  0.5062628298 #> [2491] -0.1262030377  0.5869156675 -1.1564761416  1.6162831696  0.8592252076 #> [2496] -0.0160065223 -0.2064598073 -0.9385797597  0.4810367644  0.4402272017 #> [2501]  0.3147377923 -0.0640328226 -0.4836645602 -1.2283298833  0.0083140450 #> [2506] -1.8156201924 -1.6267231375 -0.1310953914 -1.5139587140  0.4847517519 #> [2511] -0.2245047010  0.3849990834 -2.6648172132 -0.3333925392  1.1229824528 #> [2516]  0.8375303724 -0.2503194457  1.5112305159  1.1515621198  0.2671583582 #> [2521]  0.1501767050  1.0563976730 -0.7906713704 -0.8587525862 -0.7625442336 #> [2526]  0.1165695558  1.0488599204  0.0414344583  1.3703810811 -1.4073728997 #> [2531]  1.1948919512  1.4124559612  1.0056066093 -0.4771584930 -0.6391265471 #> [2536]  0.0180407981 -1.7287462961 -1.1640482323  0.0406599325  0.5073392341 #> [2541]  0.3962701264  0.6373501658 -0.1420779064 -1.0872380045  0.2566311464 #> [2546] -1.7935391844 -0.6758778467 -0.3001817521  1.0352141904 -0.1953238302 #> [2551]  0.0621428222 -1.2330469640 -2.0518515468  1.1987287516 -0.2987671075 #> [2556] -0.8122116334  1.8251188678 -1.9981863264  2.0044296644 -2.9872878901 #> [2561] -0.0660734292 -0.2290684669 -0.0341063368  0.3465134989 -2.3242652425 #> [2566]  0.7043925946  0.7314375162 -0.4471026419  2.0122706374 -0.2557658310 #> [2571] -1.3165573319 -1.7345314619  0.4567759320  1.9496097194 -1.2137462498 #> [2576]  0.5570205568 -0.7918458278  0.3909859342  1.1206878218 -0.0859000886 #> [2581]  0.4614524273  0.2002177537  1.5732011157  1.4968463110 -0.1104151040 #> [2586]  0.4048770225  2.3054000657 -0.5483686733  1.7661700172  1.0015674734 #> [2591] -0.5161333274 -0.6297550979 -0.3800341764 -3.5152106512 -2.4352970573 #> [2596] -1.4588637282  0.5521649200  0.0026120445 -1.6107996987 -0.2157714456 #> [2601]  0.4258205186 -0.3702890203  1.3626787217 -0.1162493983 -2.2645584619 #> [2606] -2.6472068916 -0.5371249245  0.7623037443 -1.0704530350 -0.9397137691 #> [2611]  0.3801686376  1.4303055171  1.3949267255 -0.0503352930  0.1603161720 #> [2616] -0.9786868238 -0.0203231098  0.1438623752  1.8943062508 -1.2901599063 #> [2621]  0.2586269291  0.9771675628  0.5655451432  0.1066434370  0.7638222347 #> [2626] -0.5261735555  0.4300272600 -0.1500023811 -3.1087494486  1.3333903984 #> [2631]  2.8587775805  0.5767100130 -0.2316536554  0.0545064606  0.6426325566 #> [2636] -1.2726391639 -2.3993309199 -0.5224731844  0.7220636889 -2.5882521510 #> [2641]  0.9954574556  0.6279200607  0.1194813023  0.0826437303 -1.3378474882 #> [2646]  0.8745651250 -1.5372335129 -0.2780142574  1.0267013509  0.6688829968 #> [2651]  0.5983477521 -0.3086162283  0.8701691660  0.4591757547 -0.6719762620 #> [2656] -0.3145066722  0.0723789191 -0.7719944805  1.0148001881  0.0635396251 #> [2661] -1.1017868282 -0.5076947761 -0.2638464836  0.3159580705 -0.8571406117 #> [2666]  2.0959324074  0.0522318973  0.7144629339  0.4932646586 -0.0790995774 #> [2671]  0.4008181009  0.8420078618  0.3960006843  0.1667276051  0.5214422861 #> [2676]  1.1706754283 -0.1917933592 -0.9164034267  0.2574657700  0.0406804800 #> [2681]  0.2534954594  0.9598063227 -0.2302669516 -1.0577972421  2.0876702727 #> [2686]  1.0684873782  0.6181690408  2.7011228357 -0.5794038565 -0.3432141367 #> [2691]  0.8143729767  0.7072626031 -0.1483617961  0.0849632949  0.1252735923 #> [2696] -4.1101746556  0.1781386508  0.4433660681  1.9513163433  0.3239989452 #> [2701] -0.3335797243 -0.0468519770 -0.0699821401 -0.9202808383  0.4302669950 #> [2706] -0.7639100071  0.2702260907 -1.6590601276  0.2931507895 -0.6565943429 #> [2711]  1.5838634957  2.6462956487 -0.5807036590 -0.2414968382 -0.0349555705 #> [2716]  0.7531610325 -0.8768980620 -0.0408938481  0.3674394663  1.1158638092 #> [2721] -1.6331977293 -0.7642397445  0.2013555607 -0.0390674606 -0.9233287727 #> [2726]  0.2544812983  0.7663561742  0.1989407343  0.0770922780  1.1895383385 #> [2731] -0.6661854388 -0.5044171006 -0.9186129891 -0.5061532929  0.3951152243 #> [2736]  0.8227583475  1.1831930389 -1.7762945091  1.0919394783  0.3234745310 #> [2741]  0.3463374222  0.0660458006  0.4471671664 -0.4402744656  0.0020613193 #> [2746]  0.1371644961  0.1678329058 -0.3686647242 -1.0362284290  0.0227252695 #> [2751] -0.1905610689  0.0831523998 -0.4887112606  2.4735062076 -1.2860697362 #> [2756] -0.2622913211  0.9791466740  0.1012408442  0.6366926603  0.5590960561 #> [2761]  0.6402145564  0.7594528717  0.7595031072 -1.9547836679 -3.0256149142 #> [2766] -1.8340053592  0.1784693798  0.0256362103 -1.1222292168  0.4565625608 #> [2771] -2.2449015258 -2.1001980071 -1.2902830320  0.2791586755  0.3766035401 #> [2776] -2.0894870587  1.2984566127  1.4256095566 -0.1760735362  1.3878661081 #> [2781]  1.5831719745 -1.1419692505 -1.1199907019 -0.2439027124  0.1586876825 #> [2786]  0.4708567383 -1.0699797552 -1.3947145280 -1.3392778532 -0.6297428863 #> [2791] -0.8596153912 -1.2318992043 -0.9161467054 -1.5615613683  1.5392305665 #> [2796] -0.0608743869 -0.9836566432  1.2970493364 -0.1992994183 -1.1229991039 #> [2801]  1.0040516269 -1.0989716585  0.4179689861 -0.1865682420  0.5641045475 #> [2806]  0.1685558184  0.6388727217 -1.5903480206 -1.9208103733  0.8398908341 #> [2811] -0.0226136400  2.5600135166  0.8762155642  0.1988284814  0.0928788719 #> [2816]  0.2835299458 -0.5430989624  0.4015937669  1.6209669958  0.1337732242 #> [2821]  0.2966740522  0.3966326714 -0.3093542546  1.6129055914  1.5607072664 #> [2826] -0.8755109502  1.4092014936  0.1861957309  0.3721109704  0.8172484886 #> [2831]  0.9815284691  0.6936471077  1.1495535768 -1.1665181019 -0.3530627740 #> [2836]  0.6577667332 -1.0429242646 -0.5741975354  1.3460406690 -0.8476888093 #> [2841]  0.3131706896  1.9164229713 -1.2072087873 -0.3249304783 -0.8129317933 #> [2846]  0.4949529011 -0.6190818022  0.8581918995  0.5082363327  0.2388753739 #> [2851] -0.9124886988 -1.9984856850  0.1903929280 -0.3234233992  0.7298065538 #> [2856] -0.8357193135 -1.4756763413 -1.3500850165  2.7502819510  2.1318840540 #> [2861]  0.7531058185  1.3475463688 -0.5054901252  0.1357878786 -0.2481467924 #> [2866]  0.2840406491  0.3937427296  1.5189601091 -0.2586775592 -0.5241196703 #> [2871]  1.1697667641 -0.1423657276  0.5510155772  0.0292616599 -0.3813013838 #> [2876] -0.7858561391  1.2205275723  0.2359672005  0.9829865088 -0.7544845131 #> [2881]  0.1624485004  1.1846774127 -0.0786572444 -2.5605884341 -0.5786873766 #> [2886]  0.1667530321  1.8412957567 -1.9617698131 -0.8746239200  0.8754005498 #> [2891] -0.9609286454 -1.3635420733  2.4862792960  1.7900069899 -0.9027194715 #> [2896] -0.0262094418  0.3291548040 -0.4476047198  0.4379272442  0.0117181598 #> [2901] -0.3167661995  2.2491693484  0.4774909001 -0.1209409216 -0.3855042979 #> [2906] -0.7768677483  0.7870744151 -1.1759679363 -1.1211501177 -0.6556918407 #> [2911] -0.4597887885 -0.6817835657 -1.4126967886 -1.7122200474  0.2794532890 #> [2916] -0.5966171181  1.8077434259  0.9875624877  1.3142026744 -1.0127749481 #> [2921] -0.9197138564 -1.5193975751 -0.3315440259  1.2927627348  1.5427729491 #> [2926] -1.5977358844  0.8043917115  0.0441524805 -0.1624414831 -1.5672999552 #> [2931]  0.8704877581 -0.3724612307  1.4382051735 -0.7676680591 -0.7774329059 #> [2936] -1.9315343955 -0.8302872216 -0.7549727314 -0.4643417290  1.1118872010 #> [2941] -0.1531393451 -1.7691496648 -0.1302117724 -1.4885095370 -0.2364364564 #> [2946] -0.3236287338 -0.9681287222  2.0313540236 -1.6712339395  0.2233552639 #> [2951]  1.8700879301  0.6666168991 -1.8788366660 -0.8784210328  0.4084004992 #> [2956] -0.4415851164 -0.0035251093 -0.4433551441  0.1556855799 -2.1300800710 #> [2961] -0.1515658162  0.1099337916  0.1561545586  1.2697975962 -0.1041913845 #> [2966]  1.4551133120  0.1324280869 -1.5044516078  0.2469592446  0.7857641244 #> [2971] -0.9941919299 -0.6851611959 -0.8381773914 -0.3091247514 -1.2868576816 #> [2976]  0.0858401890 -2.2925719920 -1.0593065041 -2.3658780916  0.4153180320 #> [2981] -0.5833777137 -0.1396873247 -0.7936519619  1.4343641261  1.5812549824 #> [2986] -0.1974198907  0.3618201703  0.8501022315  1.5108722558  0.5223206091 #> [2991] -0.2277211298 -0.3225492851  0.6681239205 -0.0527221519 -0.8219525042 #> [2996]  0.3014001117 -0.7966291468 -0.1331070270  0.5711291701 -1.0983669876 #> [3001]  1.7858743277  0.8403752027  0.9267700438  0.5878497925 -1.0066267165 #> [3006]  1.1017259034 -1.2624117597 -0.2988397823  0.0728181812  0.4013470602 #> [3011]  0.2584999015 -0.1928122042 -2.1511473962  0.0583687939 -0.6653530294 #> [3016]  0.4972560474 -1.4757253482  0.5499909746  1.6349663017 -0.9569438256 #> [3021]  0.6225537161 -0.1324487351 -2.0294554075  1.2707337153  0.6968511984 #> [3026] -1.5253412400  0.6445019986  0.6740745201  0.4854761301 -0.1606327339 #> [3031]  0.7849178565  0.0573500159  0.6068530940 -0.2918579744 -0.3792918917 #> [3036]  0.5672413772  0.0383427435  0.5544544713 -0.1719182835 -1.9105041754 #> [3041]  1.2392008977  0.1662850228 -0.1451491269  1.0410047930  0.0826065185 #> [3046]  1.9844886986  0.7631880228  0.3194564660 -0.4517439609  0.5356732916 #> [3051] -0.0262308916 -0.1012151435  0.1508030235  0.0330789984  0.1963071702 #> [3056]  0.1907488292 -0.3534240714  1.2115656876 -0.9690940753 -0.6227503132 #> [3061]  0.5607533601  0.6582570916 -0.8953492845  0.9755703241 -0.2264344008 #> [3066] -1.3986134395 -0.1470050344 -0.3411373674 -0.5899419302 -0.6583272523 #> [3071]  0.4836232909 -0.6735646381  2.4236387943 -0.1676438092  1.8851664154 #> [3076] -0.2068767479 -1.2630679404  0.6326573820  0.2718909647  0.3360983773 #> [3081] -0.3491515377  0.1509027662  1.3321413933 -0.6409455116  1.1471232479 #> [3086] -0.9531322414  1.1395332618  1.3729877745  0.2150880007  0.1100976060 #> [3091] -0.4670261233  0.9641234318 -0.8559419996  0.6718823333  1.3440722554 #> [3096] -0.6399627609  1.5569792664  1.0102011828 -0.3198926396 -0.3441925662 #> [3101] -0.2464616451 -0.2578352736  0.0965916624  0.3417732658 -0.3821847811 #> [3106]  0.4824355548  0.9366885574 -0.6996311306 -0.1694128903 -1.4462389809 #> [3111]  0.6344063891 -1.6091853844  1.7980081012 -0.8352326340 -1.4953814145 #> [3116] -1.3567367564 -0.1100942563 -0.8755394277  0.5740784419 -0.1652424503 #> [3121] -0.2582957045  0.6549626879  0.6142150949 -1.2015828476  1.2436599166 #> [3126]  0.4233063960 -0.0829250698 -1.4974628951  0.0269984101 -0.0938916430 #> [3131]  0.4868424631 -0.0314110115 -0.3993082105 -0.2954453736 -1.3003321556 #> [3136] -0.1735953788  0.1683263563 -0.3043420336  0.5824610137  0.3435112103 #> [3141] -1.6345936014 -1.8210731611 -0.1835830799 -1.4560260308 -1.1183210371 #> [3146]  0.3067644472 -0.5460336575  1.0891435313 -1.3029641912 -0.4594362966 #> [3151] -0.7531914052 -1.5539854916 -1.3141701578 -0.6532588187  1.2377843364 #> [3156]  1.2601561545 -0.0797353347  0.3870736363 -1.4106909897  0.3992747563 #> [3161] -0.7862322732 -0.4502790953 -1.8735042161  0.7124596817 -1.0192184948 #> [3166] -0.7420810465  1.7895743931  0.3809705688 -0.5848677601  1.6404580997 #> [3171] -1.2571908023 -1.1310078049 -0.3721000700  1.0622023384 -1.1188548524 #> [3176]  1.2156211183  0.1260286105  1.3183005923  0.5128831626 -1.3489435720 #> [3181]  0.7336189309  1.2517638513 -0.9730298931  1.2559076254 -1.0201382989 #> [3186]  0.2920379730 -0.1370688719  0.8903537615  1.5732018017 -0.3555284882 #> [3191] -0.5067614901 -1.2246042493 -2.3185259040 -0.7600339826 -1.3352222394 #> [3196] -0.0428079100  1.4262700147 -1.8241340888  1.0101276121 -0.3437443760 #> [3201]  1.1132034541 -0.2870066227  1.1862610690  0.8918183624  0.0029992071 #> [3206]  0.3738329679  1.8982503152  0.3725190256  0.3885472915  0.8012829013 #> [3211] -1.5482414995  2.1463446935 -1.0062094762  0.3242559490 -0.2682881014 #> [3216]  2.4104525967  1.3137296977 -0.4247263706 -1.8801461337 -1.3107735561 #> [3221] -0.9355210303  0.2065943851  1.5429779027  2.4574463186  0.7549903033 #> [3226] -0.9838434739 -0.3825036242  0.5744269315 -0.8411285716 -0.0597329879 #> [3231]  0.9261708436 -1.7240493851 -0.7294127529  1.0336421854 -0.6022644762 #> [3236] -0.7591789534  0.1052604580  1.3160365251  0.0490285275  0.0311051885 #> [3241]  0.0607955693  1.7951399169 -1.3428489322 -0.7804657263  0.7871738152 #> [3246]  0.8193302894 -0.0401124847  1.0519071349  0.2606760258 -0.0681932707 #> [3251]  2.0245007612  1.3455278679  0.2640588178  1.1821160464 -0.5867501185 #> [3256] -0.4911492220 -0.4891806054 -1.2084182951 -0.0278055386 -1.2447653772 #> [3261] -0.5133688608  1.4809250704 -0.2913640260 -1.9046836604  0.4797323697 #> [3266] -1.0682810893  0.0176438408  0.7896622978  2.0179959712  1.0031768882 #> [3271]  0.3328262050 -0.5610361825 -1.8907556906 -0.4710660782 -0.2225100840 #> [3276] -0.6075888038 -1.3556382235  0.5729881674 -1.2328817060 -0.9232569964 #> [3281] -1.6195555539  0.9276973716 -0.2300574823 -0.2517355526 -2.4566205843 #> [3286]  0.5591324392  1.0046891205  0.0868836055 -0.0775696489  0.3731255345 #> [3291] -0.4474620791  0.1112827677  0.1870698826  0.4274304463  2.1599712556 #> [3296] -0.3080074226  0.1269481708 -0.5783538139  0.7686727707  1.1845781308 #> [3301] -0.1931072427  0.3274174398 -0.7122137858  0.6166230365  0.1446300199 #> [3306]  1.2400360468 -1.6053794974  0.5031196413 -1.3467455599 -0.6888256320 #> [3311] -0.0046904316 -1.8073429137  0.0075338384 -0.2239018308  0.6654301030 #> [3316] -1.4444578390  0.6334780463 -0.8147690763 -0.3004239179  0.0100198382 #> [3321] -0.0958252631 -0.7223516039 -0.4056694079 -0.8704946910  0.1092735837 #> [3326]  0.1888204227  0.2358597858 -0.4865469892 -1.0851339672 -0.4228855031 #> [3331]  0.8613843620  0.5144396699 -2.3400214594 -0.9978628020 -0.0547549907 #> [3336]  0.3909621408 -1.0030134815  0.3093490356 -0.2999584497  0.2186624944 #> [3341] -1.3391874714 -0.8124124386  0.5837832530  1.5372633938  0.2007058113 #> [3346]  0.4151184816 -0.7678485143  0.3606900137 -0.2030802258 -0.8442662893 #> [3351] -0.3652231536 -1.6610275857 -0.8699524638  1.9288961136  1.0415555248 #> [3356] -0.3200504665 -1.0260365775  0.3544738416 -1.1697463426 -0.0083539265 #> [3361] -0.2646319682 -1.8669513150  1.2763870597 -1.4293899424  1.9414742139 #> [3366] -0.6719948258 -0.3780487672 -0.4681414514 -1.0482777520  1.2226032967 #> [3371] -0.1765538603  1.4398252446  0.4484033173 -1.8567517742 -2.3160243133 #> [3376] -0.4561075231  1.2845508723 -1.4236468747 -0.3345477301  0.4112747804 #> [3381] -0.1976756145 -0.4936320171  1.3644022099  2.2291594416 -1.1492554753 #> [3386] -0.0199399763 -0.7174927669  1.4777180288 -0.0901572182  0.0273548571 #> [3391]  0.8263925019 -0.5751291807 -0.7309217066  0.0736438904  0.7416597174 #> [3396]  0.8273054431  2.8793922879  0.0720382878 -0.0076571091 -1.0372078253 #> [3401] -0.3729579762 -0.3784342886  0.0771101613 -0.0886023702 -0.7480846168 #> [3406]  1.1819813442  0.6089622771  1.1766452583 -0.1886433191  1.4975739901 #> [3411]  0.0381558087 -0.8649378902 -1.4422153510  0.5664655825  0.4319606813 #> [3416] -0.1178073563 -0.0576519057 -0.0467852228  1.0331143874 -1.8196157506 #> [3421] -0.3768816840  1.6456018791  1.0263148030  0.2218671366 -0.3371661194 #> [3426] -0.8759605114  0.4612549685  0.5150274629 -1.4662822906 -1.7378139945 #> [3431]  0.8149062333 -1.1588175928 -0.1124885766  0.4508288858 -0.0366142925 #> [3436]  1.0432773703  0.6327095256  0.6416011638 -1.2261468961 -1.3859820964 #> [3441] -0.3821814353 -1.2598042202  0.7527424177  1.1048403479 -0.1862928138 #> [3446]  2.1719695297  0.7889380701  1.5744276974 -0.5258563627  0.5534370426 #> [3451]  1.1975796958 -0.1736048535 -1.0917466536 -0.3664664773  0.5868403385 #> [3456]  0.3652486046 -1.1723905410  1.0157687790  1.3393196154  0.6450626661 #> [3461]  2.4768727344 -0.6379691415  1.2275102790 -0.0534953419 -0.0439353891 #> [3466]  1.3496991217  1.1014736355  0.1384083413 -1.3737954852 -1.3757848078 #> [3471]  0.0842922235  0.0944436044 -1.2100860547  1.2446943684  1.0756931766 #> [3476] -0.3657275520  0.2752355334 -0.2101359045  0.3078301803 -0.3099913508 #> [3481]  1.1947566286 -1.8958972504 -0.0667374129 -0.1507366762 -0.2965272622 #> [3486] -0.7763264180 -0.3650733785  1.1243659195 -1.6921904032 -0.1084640221 #> [3491] -1.7990877502 -1.0506565600  0.4493435075 -0.0302389529 -2.0595110785 #> [3496]  0.9215631291 -1.5985891427 -0.3438497746  0.6511782885 -0.0219574204 #> [3501] -0.8935084395 -1.4875336337 -0.3693196051  1.8173417500 -0.2994036800 #> [3506]  1.9979303844 -0.3170749979 -0.4617817558  0.3312786855 -0.4515029595 #> [3511]  0.7721658000  1.5872100363  0.1665073636  0.2895969392  0.1927784347 #> [3516] -0.1229764249 -0.8951507709 -1.1538684796  0.2911049761  1.6715595416 #> [3521] -1.3091414812 -0.4529305274  1.7380277098  0.3031729039  1.5443583900 #> [3526] -0.8278011389  0.1989265291  0.4097636357 -1.7848224068 -0.8816723305 #> [3531]  0.3244037633 -1.2759448762  0.5816159247  0.5212129158 -1.1122784795 #> [3536] -1.7127386627 -1.0677293889 -1.1073317654 -1.1467739857 -1.8041655608 #> [3541] -0.5316855158 -0.4770667583  0.2875151388 -1.1826158824  0.8706671867 #> [3546]  1.1414249698  1.3684413745  0.4288454941  0.1043231128 -0.2143512945 #> [3551] -0.7597960755 -1.5587723201 -0.0022569937 -0.6138871969 -0.2875142389 #> [3556] -1.1507257604 -0.4429837954  0.5258111070 -0.0756352559  1.0668578458 #> [3561]  0.3985279593  0.1248520828  1.1571884857  1.1679448954 -2.0212491513 #> [3566]  0.0786106369 -0.2054228952 -0.6869193209  0.3114283733 -0.4955822384 #> [3571] -0.0236017773  1.4462709290  0.6776577649  0.3201820164  1.6582714942 #> [3576] -0.0468381072 -2.4978269172 -0.7896261182 -0.3300142584  0.9921149223 #> [3581] -1.1093654758  0.2769851435 -1.4916285398 -0.4657252742 -0.3937808966 #> [3586]  0.0954340350 -1.0560696582  0.1430042905 -0.5612468097  0.1984072761 #> [3591] -0.8259547154 -0.3729998070  0.3343988175 -0.6607900469 -0.0314734444 #> [3596] -1.2607647741 -0.0580974874 -0.0920796865  1.6653399383 -1.9446352402 #> [3601] -1.3338799148  0.9565966776  0.9104427172 -0.9451325996  0.2369600112 #> [3606] -0.5331629002  1.2951362143  0.8480795302  2.2525838274  0.5083940424 #> [3611]  1.0250272688 -0.5013285995  0.1323154826  0.4116870749 -0.9668263040 #> [3616] -1.9902667805 -0.2483305907 -0.2726275228 -0.9599804827 -0.9761725494 #> [3621] -0.0828072584 -0.6607469002 -0.3591740264  0.5089477107 -1.0892589511 #> [3626] -0.0100946009 -0.9216270082 -1.1233194434  0.6439275836 -1.1067132976 #> [3631]  0.2753044429  0.5007991188 -1.5146036677 -1.2500013281 -0.5007776254 #> [3636]  0.2360834027  1.3035457365 -0.2618655704 -2.8175821165  0.8754187958 #> [3641]  0.9230015910 -0.3841215408  0.2558967030 -0.7026204479  2.0365347570 #> [3646] -0.3282067398  2.2937343925 -0.1868408354  0.1155389678  0.6395387656 #> [3651]  0.0473088858  1.5909443614  0.8804559591 -0.5711400408  1.7830384105 #> [3656]  0.3731575904  0.2081441583  0.1691646696  0.1287518691  1.2719177308 #> [3661]  0.0748169349 -0.3454657403 -0.1015535654 -1.2866807622  1.2111821612 #> [3666] -2.6290070069  0.7849082864  0.8534826099  0.1710892172  0.7322834111 #> [3671]  0.7234165654 -1.1599156382  1.6756866093  0.6930711476 -0.2455326863 #> [3676] -1.3062449239 -0.5394204910 -1.4152537238  0.6655838366 -0.1854672275 #> [3681] -0.5580980770  0.5581816674  1.8466123432 -0.2956139702  0.9236258042 #> [3686] -1.6774007780  0.8541118652 -0.3354937927  1.6827161814  0.7244938669 #> [3691]  0.0747981487 -0.7663592153  0.7247330235  1.6261857943 -0.4285228538 #> [3696] -1.8056264761 -0.6026252874 -1.1303593104  0.6455742923  0.1068244449 #> [3701] -0.2376084803  0.2860425693 -1.1802518921  1.5689985621  0.6980124383 #> [3706]  0.6334244186 -1.2852431010 -0.0526138085  0.7143549773  1.5182612637 #> [3711]  0.1979458204 -1.4234523860 -0.1555897182  0.3496949921 -3.8442245236 #> [3716] -0.4235756250 -0.2779549128 -1.8045046764 -0.2192794896 -0.0978148262 #> [3721]  1.6163147804 -0.0450580077 -0.1418969174  0.7697948055  0.5232770671 #> [3726] -0.0683377654 -0.3903197676 -1.6103185755  0.2899968020 -0.1053106531 #> [3731] -0.5921362689 -0.7143903658 -0.1512387079  1.9864339017 -0.7776946349 #> [3736]  0.1306760936 -0.6373319741 -0.0319865911  0.0184432014  1.9896272406 #> [3741] -1.4824781180  0.2970012812 -0.8878624622 -0.5580511868  0.1241137610 #> [3746] -0.4974436335 -1.0532941369  0.0762528348  1.6313247772 -0.2946694444 #> [3751] -1.0094581396  0.7879438396  0.3726543034  0.4441937764  1.2071822535 #> [3756] -2.8562952288 -0.7276707987 -0.8026602521 -0.0204083949  0.2639853245 #> [3761]  0.2760581407 -0.5494507015  0.2470538524  0.2566333596 -1.7246044445 #> [3766] -0.6704141072  0.5282045319  0.3628218737  0.5358915018  0.9819610709 #> [3771]  0.4040275553 -0.2590745831 -0.1052960021  0.4821536797  0.0714734825 #> [3776] -0.2801990030  0.2533688702  0.2143845018  0.8865248193  1.0229936576 #> [3781]  0.4590778981 -0.0398631336 -0.1954371450 -0.4169422413  0.6771458771 #> [3786]  0.9370731515  0.1453727319  0.1549364715  1.2481575103  0.4319212520 #> [3791] -1.2263382305  0.0323441621 -1.1884529675  0.6647356365  1.3801630081 #> [3796] -0.2509289483  0.5367583104  0.8905148849  1.3174979183  1.0709213545 #> [3801]  0.2766246047  0.3923970837  0.3959970724 -1.7559728231  1.0324095348 #> [3806] -0.0697219840  0.4574167571  0.9356967802 -0.2397808888  0.1322417072 #> [3811] -1.5636843300  0.5640981812  1.9988026625 -0.4352889713 -0.0629501434 #> [3816] -0.4057873855 -0.6016100579  0.9474453110  0.3146354525 -0.3941054973 #> [3821]  2.5932036210  0.0369890558 -0.3954612002  1.0558215643 -0.1962812663 #> [3826]  0.0405429516  0.2000630867 -0.4388906198 -1.3202806814 -2.0620404666 #> [3831] -0.1697655988  0.4704702046 -0.7685416900 -1.0680894023 -0.9823435010 #> [3836] -1.9955737679  1.0660150377  1.6420178889 -0.6870401191 -2.1291395047 #> [3841]  0.0384912832  0.3201963195 -1.4313586668  0.3807345099 -0.9620005268 #> [3846] -0.7084140205 -0.3922194208 -1.5668565584 -2.1003069002  0.7454707601 #> [3851] -1.2904021598  0.2950984221  0.9803475499 -0.7891613528  1.5103198999 #> [3856]  2.4446985238 -0.0768066787  0.6684935116  0.2954164537 -0.1871462886 #> [3861]  0.8156756596 -0.0713893053 -0.8534736922 -0.0169772383 -0.3115184741 #> [3866] -0.9282715805  0.7937679002  1.1592682496 -1.0598414944  0.0208135051 #> [3871]  0.8104826766 -1.0896347281  2.5637302559 -0.9840236859 -1.4189498177 #> [3876] -0.4730788385  1.9210824604 -0.1830564064 -0.4352297728  0.7416641564 #> [3881] -0.8855721289 -1.2943763181  0.3966467221 -0.7428257416  0.7041417015 #> [3886] -1.3548765628 -1.4588348687  1.4622490333 -1.0503873001 -1.7888153516 #> [3891]  0.5179388190  0.0070494144 -2.1130684323 -0.0876244923  0.7033524340 #> [3896]  0.8722176244 -0.2496403925 -0.3002178191 -1.0070039804 -0.2856199199 #> [3901]  0.6633889533 -0.4560733722  1.7628787138  0.8153393295 -2.1615327765 #> [3906] -0.5922421908 -0.5609832042  0.2544287161 -0.3288803869 -1.4163857382 #> [3911]  1.0707457288  0.8954758957 -0.9865581030 -1.0188018918 -1.1882364150 #> [3916] -0.2510932219 -0.4041927827 -0.2871790911 -0.6973021819  0.2290727512 #> [3921] -0.2866455408 -0.4217527421 -0.6487268670  0.1544078482 -0.4291972700 #> [3926]  0.7612929246 -0.4014597650 -0.2462640785  0.5085497784 -0.1139710401 #> [3931] -1.1240371174 -0.9773942693  0.8603057836 -0.1280425886 -0.6133309223 #> [3936]  1.0291877953 -0.2856930522  0.5646002728  0.5057396019  1.7745759179 #> [3941]  0.8816674438 -0.4166068329  0.4413500079 -0.6941195766  0.2015426268 #> [3946]  0.4670721454  1.1885462339  0.9059047021 -1.2417337297  0.1122688983 #> [3951] -0.8867783511 -0.7516861652  2.7986128827 -0.4838160554  1.6484417641 #> [3956]  0.7952644331  1.1453934106  0.2086075112  0.1257873881  0.9093264334 #> [3961] -0.3687549682  0.8380060655  0.7585130324 -2.3168712151 -0.2950243988 #> [3966] -0.2401496927  0.5573760451 -0.3394770062 -1.6757152996 -2.1231350910 #> [3971] -0.7320050096 -0.0952485431  0.4527764193 -0.0750830873  1.9314140078 #> [3976] -0.3530827714  0.0743729159  0.0599802092 -0.9896285350 -1.2848415181 #> [3981] -2.0196828361 -0.4172756562 -1.1293885691 -1.3113180478  1.0389423715 #> [3986]  0.4137780557 -1.0803203934  0.2355176885  1.1708762450  1.6465095527 #> [3991]  0.7721712050 -0.3793952136 -0.6717583258 -0.6214038844 -0.5963838460 #> [3996] -0.3297741541 -1.4315876010  1.5509081883  0.0354041748  0.1251957126 #> [4001] -0.2352908906 -0.2341523338 -0.3709339686 -0.0697171263 -1.8476921795 #> [4006]  0.6945215363 -0.5770780969 -0.3154210323 -0.1233086461  0.4100861080 #> [4011] -1.3805351552 -0.3419592562  0.6561912777  0.4038320520 -0.5391503252 #> [4016] -0.1888915690 -0.9153089882 -0.3747710895  0.4350337970 -1.0055303678 #> [4021] -0.1803492611 -2.0345817898 -0.1432768010  0.4550748567 -0.3600358680 #> [4026]  0.9233701487  0.0662344440  0.9083035823 -0.6264512389  0.5675358878 #> [4031]  0.5311981837 -0.4760642923 -0.4020885772  0.6094595063  1.3488851017 #> [4036] -1.8526246009 -0.8207924131 -0.6674786622  1.6745731799  0.2458369370 #> [4041] -0.1643928444  0.1747818411  0.3149666832 -1.2636293198 -0.1334240812 #> [4046]  0.0842213048 -3.0410914530  0.6293747186 -0.2912038758 -2.1948057440 #> [4051]  1.9318743463 -0.9543223917  0.2002203374 -0.9353123434 -0.1537978854 #> [4056]  1.1134332252 -0.8452566100 -0.1964359875 -0.0454099835 -1.6331826580 #> [4061] -0.3367783171 -1.0559933512 -3.3190262553  0.5042051534  0.0153166793 #> [4066]  0.5625188956 -0.5172919865 -0.2314192778 -0.8923990695 -0.6504614446 #> [4071] -0.4852685113  0.0065192032 -0.1178942377 -0.4055583192 -1.6947592708 #> [4076] -0.4053086179 -0.9093280074  1.0137202421 -2.0065513250  0.8872747997 #> [4081]  1.1548805273  0.3733554731 -0.5975373459 -0.8640479518  2.0304571931 #> [4086]  2.6517202192 -0.4865628978  0.5022840253 -0.1441468118 -0.8410825680 #> [4091]  0.3043554060 -0.7062981543  1.2839880868  0.2524055332 -0.7239781228 #> [4096] -0.6743212507 -0.9462182769 -0.1452592044  1.0400173379  1.4458401461 #> [4101]  0.9651090272  2.2916541756  0.5888817332  1.8864556145  0.1145327564 #> [4106]  0.2781304084 -1.0383826612 -1.5085352875 -0.9107473546  1.7749632130 #> [4111] -0.8433218605 -0.5938474296 -2.2567183708 -1.6731547438  0.2416677743 #> [4116]  2.0580763024 -0.0317714918 -0.0670081876  0.1055897243 -2.2155141052 #> [4121]  0.7497155923 -0.5918383771 -0.8126821546 -1.4371582471  0.3309403848 #> [4126]  0.3984213479  0.8179337062 -0.1326932031 -1.3996350887  0.4756662061 #> [4131] -0.3384358820 -0.3584188761  1.4713610271 -0.6553937035  0.3180808413 #> [4136]  0.4434970241 -0.5179398779 -0.0684956425 -0.0144897299  1.3509030167 #> [4141]  0.1572589247 -0.2050298494  0.4684133158  0.4105883295  0.4590906301 #> [4146] -0.6991373608 -0.6776562092 -0.5008152211  0.4707298465 -0.2287336480 #> [4151] -0.0302057064 -0.6287054914  0.4498855362  0.0255231229 -0.1734787176 #> [4156] -0.2717960431  0.0074410749 -0.2182758209  0.2387296020  0.3745210182 #> [4161]  0.2623877353 -0.8393372239  0.5459031547  0.5041709928 -0.5081078246 #> [4166]  1.3937021676 -2.4747599034 -1.8302351904  0.2320668903 -0.6612996401 #> [4171]  1.1400409152  1.1512993989  0.7941486759 -1.7050970651 -0.4814529546 #> [4176]  0.1110560054 -0.6208763301 -1.0626866637  1.3876910587  0.0112247417 #> [4181]  2.1380637083  1.0846961177 -0.8406894745  1.5798828387 -1.7860407498 #> [4186] -0.8399206141 -0.4940910627  0.1560239699 -2.0907589558  0.4585252455 #> [4191] -1.0510574675  2.7771900317  1.2460270631  1.0748699693  2.6161245512 #> [4196] -0.2944706760  0.1038682870  0.5589659795  0.8423063116  1.1213180871 #> [4201]  1.1484841180 -0.7568856809 -0.0884043875  0.6273459272 -1.1577317065 #> [4206] -1.0911931751  1.0182556077 -0.4802761526 -1.7795484928 -1.1853040222 #> [4211]  0.3860636376  0.8859635869 -1.2205391389  1.4096128208 -1.1828318739 #> [4216] -1.2032219253  0.5021458272  1.0972345590  0.7586643302  0.8714812323 #> [4221] -0.4337429649 -0.2123358750 -0.8445265235  0.5998880748 -0.4397031590 #> [4226]  0.3464940068 -0.5547488360 -0.2346604163 -1.3948622673  0.9192952961 #> [4231] -1.2488747707 -0.2794144232 -1.7665266971 -0.4871254411 -1.1379002088 #> [4236]  0.4869534703  0.2182073857  2.0563087755 -0.1656421833 -0.7151605394 #> [4241]  0.0483410480  0.1858577793  0.8352461643 -1.8479962553  2.0657138816 #> [4246]  0.5992654025 -0.8507748618  0.1289544235 -0.1895032788  0.5782499265 #> [4251] -0.5213257728  0.6964916811 -0.2280558736  1.0390238021 -1.6493622270 #> [4256]  0.8206418355 -1.0120429098  1.0417356370 -0.4086282457  1.0220828194 #> [4261]  0.9698409803 -0.2440809184  1.3111723803 -0.8536379062 -1.3479821875 #> [4266]  0.5705441981  0.1163722147  0.1063223042  0.5167007174  1.3490394619 #> [4271]  0.6903533334  0.2263365356  0.9570411452  0.1156766738  0.5477724140 #> [4276] -0.0604555070  0.0035793162 -0.3133576197 -0.1452858598 -1.8753843085 #> [4281] -0.3027575400 -1.1640533649 -1.4376545728  0.9783110812  0.1593738234 #> [4286]  0.5692843586  1.0743959977  0.4384524055  1.4589547432  0.0860060021 #> [4291] -0.0618583442  2.0949207603 -0.0424006283 -1.2174416052  0.4470579734 #> [4296]  0.4739837129 -0.5048948453  1.7783681217 -0.3424285673  1.1487458648 #> [4301] -0.9177514944 -0.7232723519 -1.0938038663 -0.5330474531  0.5888416897 #> [4306] -0.5705639082 -0.3562293771 -0.7732052283 -0.1488394424  0.0068156145 #> [4311]  0.6644508833  0.4606340970 -2.2963215374  0.0317061084  0.1934175346 #> [4316] -1.1861601526 -0.3681491056 -0.0535663899  0.3084628231  0.5278396320 #> [4321]  0.0140324635  1.1483599471 -2.2793533822 -1.0822422440  0.0728337419 #> [4326] -1.4439330337 -0.5945017137  2.0815815684 -0.2972596378  0.3940795730 #> [4331]  0.2042016357 -0.0676400090  0.6267581959 -0.3242668024  0.6758618357 #> [4336]  2.5238302878 -0.2509404539  0.5316370609 -0.9562734655  0.7159996634 #> [4341] -0.9551719047  1.4393118916  1.3078662696  0.8601560321  0.0970572341 #> [4346] -1.7685278290 -0.5734631238  1.0191336962 -0.7810111041 -0.4007407597 #> [4351] -1.0107975132 -1.3086982831 -0.3329515590 -0.4820082947  0.5384240456 #> [4356]  0.7819984399  0.1335204731  0.9297652100 -0.6436083692  1.3508056135 #> [4361]  0.6266465029  0.2576805904 -0.5608069560 -0.1869448715 -0.8927600691 #> [4366]  0.3758824958  1.1370815200 -0.8669490962 -1.1226791825  0.8216225574 #> [4371]  0.8918218134 -0.2406286132 -1.3582688977 -0.2063771609  0.7404015760 #> [4376] -1.0958836194 -1.2391298609 -0.4752290178  0.9007851692  1.4100033237 #> [4381] -2.2092082468 -0.3452705824  0.8954366028  0.0651369798  0.0766475952 #> [4386]  0.6175066082 -1.3309171688 -1.1968111231 -1.1044803375 -0.8168265583 #> [4391]  2.0802200779  1.2687593637 -1.3087647570 -0.0425239816  0.5020924798 #> [4396] -0.2015094832 -0.5259852391  0.3431598065  0.5425282360 -0.6519906871 #> [4401] -0.2628471485 -0.1158262570 -0.2950250066 -0.5034449161 -1.5667114712 #> [4406] -0.4448066536 -1.0977593908 -0.8754890283  1.2085933077  0.5131718901 #> [4411] -0.0267127939  0.0308222985  0.1755678962  0.8096384726  0.3163401188 #> [4416]  1.5424504288 -1.1042187982  0.0704392654 -0.2555836660 -0.9023635467 #> [4421] -1.1274571097 -0.2771792195 -0.7033512493  1.9857626262 -0.1998239860 #> [4426] -0.4913575299 -0.2234135371 -1.2298694159  1.1178237250  1.6644527790 #> [4431] -0.3453299922 -0.3810154396  0.0196809017 -0.1158450966  0.5888380491 #> [4436]  0.7198024211 -1.0601901020 -0.2069676258 -0.6084751469 -0.5492557267 #> [4441] -0.6577968932  0.0414239388  0.9385413452  0.2892944344 -0.1573306289 #> [4446] -1.0329477985  0.5903303079  0.5282979654  0.6865917450 -0.5830657324 #> [4451]  1.2046337895  0.6142982859 -1.8146126074 -1.0503707255  0.9366546474 #> [4456] -1.3344590293  0.4951321183 -1.4917507003  0.6479652661  0.0716286913 #> [4461]  0.2308045517  0.8567458274 -1.8543735664  0.7014844695  0.8352983594 #> [4466] -0.0280921850  0.7135050781  0.4332235550 -0.8871087071 -0.1848154003 #> [4471]  0.2683859129  1.3678831949 -2.3274246005 -0.0070477354 -1.3256031315 #> [4476] -0.9719068242  0.0400728059  0.0221333360  0.6242619625 -1.2912130333 #> [4481]  0.0525798664 -0.5560117704 -2.6530934004  0.3085464997 -1.2028324684 #> [4486]  0.1388761423 -0.0665361916 -0.3463011639  0.1600978590 -0.3041791802 #> [4491] -1.2453862620  1.2277517212 -0.7507316622  0.8741884875 -0.5837114206 #> [4496] -0.2220554092 -0.8914668312 -3.2653372024  0.5142261818 -2.0253459739 #> [4501]  0.5473452621  1.8352673263  0.9638464229  0.5820977827 -0.0188983711 #> [4506]  0.6203248436  0.3138161164 -0.2584087699 -0.6370738968  2.0145716190 #> [4511] -2.7110215431  0.6209495044  0.6833108401  0.5283797698  0.5597383344 #> [4516]  0.1363938989 -0.1480282019  1.4472996708 -0.0795794148  1.7953241399 #> [4521]  0.2988030406  0.8968165013 -0.5750292847 -0.2801667092 -1.6847218619 #> [4526] -0.5662394359  1.1810912200  3.7174896447  0.6961031802 -0.5972806556 #> [4531] -0.1535643390 -0.5891493595  1.1445110570 -0.8424085520  0.1512436189 #> [4536] -0.6647563170  1.4920556286 -0.0958359076 -0.1960201605 -2.1428502274 #> [4541]  0.2316716488  0.3177873777 -0.6184214153  0.7455913484 -0.7441549470 #> [4546]  0.2859884149  1.4723802736  0.1297960195 -2.4019765386  0.1085742607 #> [4551]  0.1739473576  0.0027534642 -1.6330200547 -0.2692115008 -0.2583482026 #> [4556]  0.7229398733 -0.7228403576  0.8902018778  1.2254639484 -0.1265582114 #> [4561]  0.3222000317 -0.5534949005  0.3291009718 -0.1759948172 -1.0823508544 #> [4566]  0.7341385066  0.7845054491  0.8214670704  2.8879631014 -0.1312355725 #> [4571] -0.0415084524 -1.5729591645  0.7286261951  0.3991874195  0.9371021599 #> [4576]  2.9307984843 -1.0145746112  0.8710356841  1.1988002575 -0.5376154184 #> [4581]  0.7473831675 -0.1659811311  0.7723741227 -0.8581061877  0.8662214631 #> [4586]  0.1305783106  0.4704945447 -0.9241523103  0.9100003709  0.3315545448 #> [4591] -0.1463592277 -0.2020332804 -1.1856331427 -0.1211639606  2.7542184628 #> [4596] -0.2367650101 -0.7867333299  1.5871126183 -1.9508142171 -0.7490492142 #> [4601]  0.5255537478  0.0534487154 -0.1170417077 -1.6851008178 -0.2438339677 #> [4606] -1.4842587252 -1.0595548317 -0.1966392749 -0.3773887726 -0.7441211231 #> [4611]  2.5002025702  0.5931115707 -0.7836509972 -2.4740570222 -0.8295602836 #> [4616]  1.3867891980  0.6971399376 -0.4745154226 -0.4440127317  0.6492093542 #> [4621] -0.7915866688 -0.6641197042  0.0489108646  0.9203118351  0.7417749700 #> [4626] -0.2055085819 -0.8517804579 -1.6273427435 -0.0745252772  0.1025960149 #> [4631]  0.4040351346 -1.0620367262 -0.1973145184 -2.0359556596 -1.1503742440 #> [4636]  0.7429108085 -1.1157204818  0.7433707708 -0.9683707178  0.2556844599 #> [4641] -1.7554994054 -0.8106590740 -0.0878845168 -0.4985064490  1.6802893874 #> [4646]  0.5989539552  1.0875615191  1.3972987406 -0.5053276676  0.7680878851 #> [4651] -0.6265239733 -0.5920497708  0.1165224522 -1.5012107036  0.9246332986 #> [4656] -0.4016754048  0.4997375933  0.3883152406  0.9619472004 -0.4582866915 #> [4661]  1.2959733472 -0.2803093912 -1.3718815046  0.5489149833 -0.5040323952 #> [4666]  0.1444327265  0.7355596144 -1.4184870045  0.3388262395 -0.6639980405 #> [4671]  0.6783908723 -0.6431063021  0.0565591977 -0.6940766794 -0.4840178599 #> [4676] -1.1738922560  0.3450239718 -1.1906761707 -0.5400296844 -0.0491280158 #> [4681] -0.3123709324  0.4886677358 -0.2061398898 -0.6635643642 -1.9484802865 #> [4686] -0.2795917728 -0.7914611922 -1.3675918811 -0.1617489858 -2.1194362051 #> [4691]  0.6320258316  0.0936897492  0.3724669513 -1.3038246864  1.0037931225 #> [4696] -0.1356121080 -0.7249665795  0.0757545518  1.0776335403  0.5855443282 #> [4701]  0.4665855685  0.7238128244  0.3348288976  0.6016130489  0.0540705681 #> [4706]  1.6329132056 -0.7552055201 -1.6124103636  1.7663443148 -1.9930235418 #> [4711] -0.2238453812 -0.5529111575 -0.3183222218 -1.2020761259 -0.4671664743 #> [4716]  2.1298152854 -0.3897281091  0.9031801627 -0.0295987650  0.5909707834 #> [4721] -0.1187330124 -0.1481558425  0.2990126421  2.2733760981 -0.5068930524 #> [4726]  2.1003876293 -0.5250701286 -1.3054917356 -0.4227491537  0.9194234061 #> [4731]  0.4629875763 -0.3021806664  0.6462455933  0.6196842580 -0.7081423248 #> [4736]  0.1645730582  1.5199041999  0.9045918866 -0.5797842971  1.3981355850 #> [4741]  0.5657557681  1.4755114854 -0.9093007777  0.0110979360 -0.2078794291 #> [4746] -1.4672736648  0.4555367265 -0.7422348480  1.0049684573  2.9467252754 #> [4751]  0.1852236091  0.7287229989  0.3570881012 -0.9703541948 -0.1164446221 #> [4756] -0.0804911351 -0.8978484130  0.0072091040  0.7049891247 -0.0039822967 #> [4761]  0.0815758416 -0.8314996076  0.1648232286 -1.3576995512  1.2456828179 #> [4766]  0.4225614485  0.7370215672  0.2493424598 -2.0331316114 -0.4913382300 #> [4771]  1.4847861567 -0.1784044805 -0.4572673596 -0.2216118607  0.8881258959 #> [4776]  0.2244820735 -0.5690075640  0.0973968960 -0.5275784958 -0.0301089165 #> [4781] -0.8506694538  0.2221682735 -1.4065086641 -0.5121431438  0.2845404608 #> [4786] -1.7981255820 -0.1667962146 -1.8654782263  0.0102458948  0.6177886320 #> [4791] -0.5275351877 -0.3177225928  0.0294640314 -2.1519543905  0.0381682813 #> [4796] -0.8281585414 -0.3439840149 -1.2039114659  1.1843380291  1.1083333737 #> [4801] -0.2487778964  0.4003345498 -0.1196207427 -1.3182545143  0.1176733513 #> [4806] -0.1109835389 -0.3727886118 -1.4191956569 -0.8122073673 -1.8820871340 #> [4811]  0.4982325242  0.0853674257  1.0687449884 -1.4038071233 -0.8604697253 #> [4816]  2.1804006769 -0.1034734304  0.9491617660  0.0023178772 -0.0592562884 #> [4821]  0.1884046991 -0.8697740860  1.8765172007  1.0727704362  1.8447580635 #> [4826] -0.5304827015  1.3362721417  0.9443495302  0.6263833580  0.0867550731 #> [4831] -0.9710597366  0.1968515085 -0.1790474677 -0.6403530849  0.7958376357 #> [4836]  0.9424729044 -0.2134242046  0.9241684450 -1.3519318601  0.7205465030 #> [4841] -0.2819130155  0.5390213522 -0.7824101374 -0.0200853432 -0.4799461512 #> [4846] -0.2877091143 -1.4262524662 -1.1083779322  0.1240312727  0.0518588607 #> [4851]  0.1983375151 -3.2122370731 -0.1977891047 -0.8105774616  0.4023733265 #> [4856] -1.1615458118 -0.0597179638 -0.9624299419 -0.4509108018  0.2409140158 #> [4861]  0.2274552787  0.4589098151  2.0138037736  3.2285963812 -0.4865151568 #> [4866] -0.0275688476  0.0493274498 -0.9624403520  0.4212658396  0.8523658887 #> [4871]  0.5357575730 -0.0058780729 -0.0930316865  0.6417394564  0.1633343456 #> [4876] -0.2226377982 -0.8983011023  0.3402674129  2.1500096686  1.2293116469 #> [4881]  0.6726208286 -0.3703665064  0.8648097825 -0.4056433947  0.3250895248 #> [4886]  0.6138287556 -0.2020931104 -1.1859111160  0.3480069470  2.0180248482 #> [4891]  1.3451581753  0.4253700933 -1.5370583299 -0.9145263369  1.2949905477 #> [4896]  1.6066824236 -0.3563589711 -0.8995374907  0.1217159426  0.7776400127 #> [4901] -0.4309984599  0.5593038720  0.8886609282 -0.3313382480 -0.5664169692 #> [4906] -0.9330061891 -2.2301249124  2.0029363675  0.7193064254 -0.6936259427 #> [4911]  0.8783865150  0.8742896502  1.5580002420 -0.4193197037  0.7499613675 #> [4916] -0.5339648485  1.0706777136  1.2566317885 -1.3808063641  1.1764801154 #> [4921]  1.4083527867  0.9791653110 -1.1571344576  1.0081711441 -0.7404975868 #> [4926] -1.3618901013 -0.4937133429 -0.5478713393  0.5218097532  1.3974174090 #> [4931] -0.6553495811  0.2716035399  0.9351889307 -0.4294497273 -0.2855844967 #> [4936]  0.9473307513  0.5105605451 -0.6933981897  0.3654047696 -0.1924252925 #> [4941] -0.2023935181  0.1456227296  0.0997053595 -0.2350993169  1.5140941950 #> [4946]  1.8216756399  1.4549109496 -0.1245965069  0.3435922659  0.8029877452 #> [4951]  0.9953081487 -0.8116750934  0.6027410275 -0.0887609490  0.5800797572 #> [4956] -0.6960721505  0.4623905648  0.2571906808  1.5624761676  0.2791922854 #> [4961] -0.4903088329  0.3584099582  0.2053585807  0.7564557040 -0.2405348890 #> [4966]  0.1882063702  0.4214747578 -0.0733884281  1.6080714065  0.0579376914 #> [4971]  0.3161695555  0.0548921402 -0.3610124432  1.4166007814  1.0189566012 #> [4976] -1.6727281547 -1.3382993118  1.2151346006 -0.7961090567  0.0706547505 #> [4981] -0.7319485331  0.5425899691  0.0471037808 -0.6889317529  0.3872000726 #> [4986]  0.5713084563 -0.5642548867  0.5263856915  1.1954999268 -1.4889055065 #> [4991] -0.6870614499  1.7614035021 -0.3007453043  0.9392740066  0.2052569576 #> [4996]  1.6470589745 -1.0050407259 -0.6332892238 -0.4714385548 -0.1139115610 #> [5001]  0.0187014131 -0.9833075870  1.3928777218 -1.0594424506  0.4202413102 #> [5006]  0.6945547967  1.3544501624 -0.6044458430 -1.9838988919  0.6690628065 #> [5011]  1.4785288836  1.2258697952 -0.3429415807  0.2246098560 -0.6581979160 #> [5016]  0.0805224315  0.2541050618  0.9288600771 -0.2404945410  0.8790095729 #> [5021]  0.5329022342  0.6099616399 -0.8148703414 -0.8494599068 -0.1861556403 #> [5026] -0.0220484510 -0.4952534452  0.6257738899 -3.3585667590  0.5657883758 #> [5031] -0.3176126474  2.0166623997 -1.5837168288  0.3241960146 -1.5075142469 #> [5036]  0.2854162153 -0.0144258715 -1.6145409438 -0.9403014282 -1.4016446535 #> [5041]  0.4192358313 -0.7553576486 -0.1547001518 -0.1270806629 -0.7672445445 #> [5046]  1.1770365303 -0.4276506641 -0.4826442025 -1.3006780685  2.0440992243 #> [5051]  0.3713519441  1.6896278469 -0.5920363587  0.0136631373 -0.4879776620 #> [5056]  1.0764038513 -0.5742965798  0.3992141096 -0.6504863726 -1.1608978615 #> [5061]  0.0653609940  0.4967246508 -0.9884467478  0.2956917365 -0.7505076149 #> [5066]  0.5816001825  1.6137000332  0.7743182959  0.8624842426 -0.5351990281 #> [5071]  1.4677240521  1.4476217354  0.5906175638  1.5232948925  1.0779713337 #> [5076]  1.1331194150  0.4716516354 -0.2930301826  1.9934479466  0.8976493655 #> [5081] -0.4087000931 -2.0368215128  0.7993851061  0.2229242968 -0.6432799023 #> [5086] -0.3966513329 -0.3708180926 -0.0669385408  1.8465519382 -0.5227701370 #> [5091]  0.1304450758 -0.4839912541  1.4907018230 -1.2826180631 -0.3469220927 #> [5096]  0.9669169964  0.0716200314  1.2786176982  0.1391977169 -0.3291609852 #> [5101]  0.5964086711  0.3782631089 -0.0775444153  1.3583457772  0.9963201790 #> [5106] -0.2574782768  0.2795232674  0.0548822138 -1.1003626317 -0.9993439557 #> [5111]  0.7941389112 -0.8864452271 -0.6486313270  0.3867173665 -0.8242595548 #> [5116] -0.6755984225  1.3586279128 -1.7141968297  0.1111922191  1.0085516073 #> [5121]  0.1900360804  0.0805081533  1.4680202232 -0.3672313106  0.2386795782 #> [5126] -0.5381812738  0.3822032989 -0.5329503255 -1.1252851808 -0.1830691271 #> [5131] -0.6424652787 -0.4899100351 -1.2136980623 -0.9238001091  0.1335195400 #> [5136]  2.0470365800 -0.0144623725 -0.2874306007  0.1108398398 -0.7467397020 #> [5141]  0.7393699039  1.6135579813  1.5115970336 -2.1434900744  0.3136982561 #> [5146]  0.5008009759  0.7727622809 -0.0198432569  1.6975650681  1.5180670398 #> [5151] -0.7817041568 -1.4306416636  1.3149422901  0.4302083559 -0.8744488091 #> [5156]  0.4924831644 -0.1238567109 -0.2610762729  0.9159626271 -0.6191393742 #> [5161] -0.0373813241  1.4563668822  0.2866851549  0.2074401263  3.0673397102 #> [5166] -0.4625418361  0.5693506911 -1.1162615513 -1.3248728304  0.0757500931 #> [5171] -0.2954763229 -0.4375967241  0.0507428614 -0.9698801887 -0.2220622018 #> [5176]  1.3668809496 -2.3502133764  1.1403861625  0.6336987359  0.7644211297 #> [5181] -0.5784239168  0.4803552113  0.7081707637  1.9989382416  0.5060623685 #> [5186] -0.4168822259  2.1785080916  0.0019670935 -0.7261323189 -2.1866769018 #> [5191]  1.6312579529 -1.1357035313  0.0989658284 -1.2636721316  0.8034770477 #> [5196] -0.0283282782  0.4172075733  0.6426499823 -0.9397324787  1.0548845943 #> [5201] -0.6305176902 -1.6455953664  0.5616277305  0.4557444714  1.1175705143 #> [5206]  0.0596111043 -0.5853217523  1.0367983391  0.7970866296 -0.3238522899 #> [5211]  0.3609719285 -0.4928874385  0.7426720826 -0.7951247684  1.8857230443 #> [5216] -0.8908884847 -0.3584360567  1.0756001892 -0.8792369071 -1.1455393574 #> [5221]  0.9824739420  0.6413952498  0.2509063239  0.7498583404  0.9563494040 #> [5226]  1.3880480226  0.5348967391  0.1316441672 -0.7336294200  0.4368178249 #> [5231]  0.6729274132  0.1039858898  1.8833033639  0.4359457074 -0.5253592712 #> [5236] -1.0082816867  0.1962796336 -0.0808547581 -0.2162500615 -0.2010920815 #> [5241]  1.2692713843 -0.2163394503  0.7203481856 -0.3979818091  0.4634376962 #> [5246]  1.6710717937  1.0682031103 -0.8056604209  0.0391472872 -1.2642412634 #> [5251] -1.8863049321  2.7416658111 -0.7933406040 -0.1469636350  0.5511803519 #> [5256]  0.4711384085  0.5743355396 -1.8784828146  0.1911799213  1.1389488420 #> [5261]  0.6062577132 -1.1552625183  0.0085377694 -0.5222286535 -0.2221144109 #> [5266] -0.1831511189 -2.0480835377  0.8670753187  1.1920257334 -0.6029393950 #> [5271] -0.9828215247  0.0966080223 -0.8362464696 -0.7001335742 -0.2401530005 #> [5276]  2.4664595191 -0.5418437543 -1.3312002630  0.9492166160 -0.6127947202 #> [5281] -1.6037849271  0.5391623941  1.6829659198 -0.8170555922  1.8497543636 #> [5286]  1.3652619161 -0.4953475006  0.6565709931 -0.8881416293 -0.2419653459 #> [5291] -0.9471988887  1.1740630476 -0.3646616272  0.3599811397 -0.0683057705 #> [5296] -2.7741749865  0.3023308025 -0.6932941352 -0.4169481083  0.6556302732 #> [5301]  0.3801165546 -0.3028249293 -0.9300541489 -0.3986430433  0.7746897567 #> [5306] -0.4286109817 -0.9910073991 -0.6388804328  1.4087077742  0.4238642616 #> [5311] -0.6720760175 -1.1519429434 -2.2853714041  0.2188211989  0.8563522936 #> [5316] -2.1268400457  0.2517858646  1.1403980229 -0.7137478067  0.3172903058 #> [5321]  0.9163877329 -0.8284437126  0.1826359019  0.0484134313 -0.1431856867 #> [5326] -0.5334710317  0.4965831042  1.4633154824  0.2799049235  0.3862904957 #> [5331]  1.0135262042 -0.7333639433  0.1027256965  0.5186706941 -1.5204971704 #> [5336]  0.5910014709  1.5942798666  1.9176194703  0.9895603376 -0.9113547115 #> [5341]  1.0725633363 -0.0785678693 -1.6907939733 -0.1881035465 -1.8697502335 #> [5346] -0.0704109687 -0.0714615785 -0.6416910988 -1.6427640902  1.4762255279 #> [5351]  0.5128778705 -1.3823660282  0.2283124187  0.1019355141 -1.3486525164 #> [5356]  1.8733205432 -0.6750450345  2.0198360939  0.2831110278  0.1686722243 #> [5361] -1.2748329086 -2.5905727635  0.2773439846 -1.6759527376 -0.3255395221 #> [5366]  0.5704090191 -0.3215458305  0.1944770148 -0.4225910340 -1.1210181464 #> [5371] -0.4839076309 -0.3783151459  0.8753653841 -0.9678738106 -0.5180655955 #> [5376]  0.5389422521 -1.1571595518 -0.2541648887 -1.3734280472  1.1034293551 #> [5381]  0.1981720370 -0.7980025529  0.1219031969  1.0638677501 -0.7713293191 #> [5386]  0.0406166245  1.1725857882  0.2072534754 -1.5509063716 -0.7815096700 #> [5391] -1.3756921932 -1.1820166365 -0.3562834913 -0.9745761309 -0.3217662815 #> [5396] -0.4118027316  1.1897985661 -0.0643338099  0.0991556858 -1.1403288450 #> [5401]  1.5205730573  1.9735561184  1.6475664326  0.0106686223 -0.1072272221 #> [5406]  1.9344664544  0.5606151105  1.5073367450 -0.9386667220  1.5115036736 #> [5411] -1.5064180558 -1.1562760160  0.9998727323  0.0404927990  0.2239591410 #> [5416] -0.5076671859  0.9308040040  1.5661579074 -0.5299197276 -1.5209075639 #> [5421]  0.3911867522  0.4372875826  1.3029821039 -1.4331269518 -0.0346224093 #> [5426] -0.4326701342  0.0416565969  0.8042434830  0.2031099081  1.6208397050 #> [5431]  0.2909705611  2.1257970212  0.2955945890 -0.4150960131 -0.4650733624 #> [5436]  1.0898119012  0.2181682235  1.0020047825 -0.1415978444  1.0611683877 #> [5441] -0.6048897644  2.6200739884  0.9083906317  0.7859841063  2.0909433171 #> [5446] -0.7649966441  1.5854479889 -0.0412490137  0.4911123969  0.0350299105 #> [5451] -0.8946901397 -1.0625349868 -1.0900785809  0.5635819031  1.9483157540 #> [5456] -0.2327039121 -0.0025499382  0.3122046846 -0.9236067741 -0.3805044361 #> [5461] -0.2217633264 -0.3628890658 -0.8029622821 -0.6417575299  0.0898472989 #> [5466]  0.7500691358 -0.4436944435  1.1638574739  1.6796046207  2.2500359338 #> [5471]  0.9256513541 -0.9754828255  0.2681379847  0.3271553179  0.1478974468 #> [5476]  0.0729588165 -1.3646740884 -0.4599785467  0.4962854552 -0.6299815837 #> [5481] -1.1697144897  0.4164127493  0.3905288373 -1.3084255895  0.7894158322 #> [5486]  0.4415454154  0.4885588844 -2.4909324423  0.0149546439 -1.3025937318 #> [5491] -0.3100792893  0.5273122695  0.6219013045 -0.4452918537 -0.0057469828 #> [5496]  0.4413783183 -0.7509773070 -0.0409948962 -1.0486907148 -0.5445308774 #> [5501]  1.2352030431  0.6280139584 -0.5030043474 -0.0682504368 -0.6893883985 #> [5506]  0.8579203944 -0.1334424671  2.7603400606  0.3672861898  0.0538261530 #> [5511]  0.1217646968 -0.2541745737  0.1912137367  1.2711252531  0.8194040872 #> [5516] -0.1500640210 -0.2401285732 -0.1310033085  0.1690102916  0.0364388528 #> [5521] -0.8008610356  0.5577743620  0.6527176223  1.6818364363 -0.5110507027 #> [5526] -1.2873344769  1.3542781088 -2.3470566643  2.0507495528  1.2339744885 #> [5531]  0.2878054784 -1.0261370594 -0.5376498760  1.4505599087  1.2490597062 #> [5536] -1.1044525699 -0.9277118063  0.2478188486  0.4188487197 -0.9965230352 #> [5541]  1.0158673341  0.3369642172 -0.3989434988 -0.5162592158 -1.3190226344 #> [5546]  0.5059340845  0.3023307053 -1.2316276540 -0.2847637726  0.7825246807 #> [5551] -0.2061317018 -0.1785151370 -0.0316560254 -0.1912060287 -1.4681831288 #> [5556]  0.6408431285  0.6829375155  0.7864047273 -0.7461495315 -0.0138739666 #> [5561] -0.6303612572  0.7955585380  0.2387594896 -0.9648114860  0.2831151846 #> [5566] -0.5034221754 -0.7218902322 -1.6391786335  1.2709582706  1.5056932653 #> [5571] -0.3403442322  1.4109212943 -0.7729224956  0.0422917129 -0.3110970269 #> [5576]  1.1688593031 -1.7065071436  0.3580380623  2.1655772480  1.7165897415 #> [5581]  0.5868159500  1.0111771800 -0.4866906953  1.1245244679 -0.1145136948 #> [5586]  0.1355518738 -1.3410141474  1.2905212859 -0.4122481124 -0.9021446797 #> [5591] -0.1388599627  2.3271523787  0.0604360322 -0.5838118905 -0.7436766002 #> [5596]  0.2711662217 -0.8981977499 -0.0839932255 -0.6122463440  1.3203046338 #> [5601]  0.5368374300 -0.5591697394  1.1527295395  0.2569945893  0.9831187230 #> [5606]  1.1138200452 -2.4636928481 -1.5492061033  0.1121966639  0.0330229806 #> [5611]  1.4466036477  0.2562688272  0.4772303112 -0.2272757571  1.1980541913 #> [5616] -1.4741834707 -0.0072718143  0.3788063567 -0.4994486505  1.2272836224 #> [5621]  0.1109620472  1.2623092907 -1.4308072433 -0.8880424211  0.6721400886 #> [5626]  1.8994990247  0.9174312038 -0.9227934219  1.3960108971  1.4135914122 #> [5631]  0.9838664308 -0.5661967110 -0.3681934054 -0.0651863004  0.3257689175 #> [5636] -0.0708032161  1.0323468427  1.5535165993 -1.7014846506 -0.9422269520 #> [5641] -0.1463856029 -2.5611324777  0.9660691794  1.9558368970 -0.1426054602 #> [5646] -0.2590295636  0.2075517462  0.6433353528 -0.8718579700  0.2416240656 #> [5651]  0.3262266673  0.8359818797  0.1881308130  1.4804419120  0.5771545546 #> [5656]  0.3339261973  0.9395518100 -1.2569924741 -0.1452744752  1.8629987881 #> [5661]  0.2834153561 -1.0120921055 -0.2139690357 -1.5151269127 -0.8116524400 #> [5666] -0.6649576612  0.6644894534  0.1285800256  1.3061099019  1.4784335223 #> [5671] -0.2861153882 -3.2229112102  0.6290875293  0.2732069444  0.2514527979 #> [5676]  0.4680502265 -1.8571050345 -1.1869698827  2.2688525950  0.8908269427 #> [5681]  0.3271122255 -0.8963795334 -1.7387241994  0.6623357966  0.5774751241 #> [5686]  1.9905988634 -0.3656808208 -0.0611673952  0.1564020219  1.0868521792 #> [5691]  3.4776923589 -0.8956244450 -0.9438330324  0.5212659326  0.9398945279 #> [5696]  1.1918966471  0.4115011895 -0.1228017491 -2.6502996748 -0.2521879071 #> [5701] -0.6710922557  0.8072621146  0.6416762568 -0.8346337206 -0.7965642693 #> [5706] -3.7123602691 -0.7088007280  1.2238527391  0.7058180738  0.4643738112 #> [5711] -1.4449162774 -0.1287816466 -1.8860341121 -0.0464322313 -0.9116735466 #> [5716] -1.1196569700  2.1047497731  0.9244946026  0.1873102670  1.4351100267 #> [5721] -0.4211100517  0.3393216586 -2.6709480196  0.6683004080 -0.8163130107 #> [5726]  0.1343591889  1.0528001502 -0.0205252454  1.3034231957 -0.0659226619 #> [5731] -0.9509687275 -1.0723985359  1.4864543784 -0.6344988485 -2.3781741197 #> [5736]  0.2738490193 -0.9888677614 -0.7938982032 -1.3334143475  0.5780306773 #> [5741] -1.3574992612  0.7840305446 -0.3889620994  0.1771264972 -1.5195551354 #> [5746]  0.6346819710  0.2180810938 -0.2493603337  2.3282140268  2.3494054955 #> [5751]  0.6756633868 -0.6401347508 -1.2027139552 -0.1883600544 -2.0394245816 #> [5756]  1.1859258446  1.3241535344  1.8304441054 -0.2291238327 -0.4957912866 #> [5761]  2.4920964843  2.1766418941 -0.7920905211  0.5371156036  0.1322605628 #> [5766] -0.5180363305  0.2955374993 -0.4399170001 -0.1142386254 -0.6969255935 #> [5771]  2.2628347695  0.0971628829 -0.5357847098  0.1194227357  1.0899377064 #> [5776] -0.3173900009 -0.7902657782  0.9890807588 -0.6791703925  0.1151645768 #> [5781] -1.1361960059 -2.0877994028 -0.1950529789 -1.0430168821  0.7342806739 #> [5786]  0.7411880715  0.1212097546  2.4037860803 -0.8921973449  0.0291059812 #> [5791] -0.4252904199 -0.6338720116 -0.2968295261  0.7343050181 -0.1219479556 #> [5796]  1.1573133158  1.1938156645 -0.4135538105  1.2642403723 -1.3773229377 #> [5801] -2.7953856708 -0.2721409509 -2.3062413287  1.4413639559 -2.1806443880 #> [5806] -1.8999319410 -1.3538872994 -0.6594802629 -0.7288324509 -0.4581150441 #> [5811]  1.4233386718 -0.2624664112 -0.5304131402 -2.1353861559  1.3375024502 #> [5816]  0.7894808481 -0.6317418318 -1.4957957031 -0.5864478612 -2.1005173880 #> [5821]  0.0530769115  0.8720988081  1.3862123469  0.6433926335 -0.0475563335 #> [5826] -0.4805642527 -0.2044556255  1.3538592011  0.0638578720  1.3549793994 #> [5831]  0.8901699034 -1.9246900533  0.3427087963 -0.1378182647  1.3130455673 #> [5836]  0.9432743525  1.3772803893 -0.8013696483  1.6191288406 -0.5978636087 #> [5841] -0.0835908673  0.2267199141  1.0592228860  1.3067869917  2.0220881084 #> [5846] -0.5558524833 -0.7133702734 -0.3966189700  0.1542305483 -0.1004837516 #> [5851] -1.1190569433  0.1310274568  0.5183276618 -0.5625453685  1.8360275291 #> [5856]  0.0560515561 -0.2528240321  0.6881575684 -2.1921660549  0.7509127747 #> [5861] -0.1838346929  0.0090102411 -0.6079484771 -0.2813507000 -0.3872398646 #> [5866]  0.8309013145 -1.0437734566 -0.0784833390 -1.1220567022 -0.4596118311 #> [5871] -0.9630195020 -0.1532738674  0.0800795990 -0.3159889266  0.0677127713 #> [5876] -0.1286308607 -1.0966633262  0.4179811404  0.3877559383  0.6995704737 #> [5881]  1.8309600318 -0.8312455063  0.1097836521  0.6738332935  0.2774515755 #> [5886] -0.4554865119 -0.5204262747  0.0109183204 -1.7167120659 -0.2491365480 #> [5891]  0.4633424754 -1.6594039014  0.5923180169 -1.1492072517 -1.4656125535 #> [5896]  0.7906806510  1.4863677565 -1.5843736178  1.7923246265 -0.1355594223 #> [5901] -0.4332149754  1.0659335984 -0.4372475835  1.2392164641  0.9853395913 #> [5906]  0.0657361025 -0.4114743658 -0.0877243986  0.5323375098  1.1314129612 #> [5911]  0.3516356032 -0.9757228564  0.6584851749 -0.8283002090  0.7284355956 #> [5916] -0.2573758498 -2.0471713845 -0.4757489306 -1.1043334781  1.4200467277 #> [5921] -2.2808706146  0.3299162505  0.7441610893 -0.6283391169  1.1611652050 #> [5926]  2.1152490435 -1.6986600186  0.6298241237 -0.5501556572 -1.7190367479 #> [5931] -2.3497297830  0.0416838354 -0.1979826432  0.7378630577  0.8568584097 #> [5936] -0.3378087853 -0.7678627583  1.1759227329  1.0333483903  0.6719836552 #> [5941]  1.4519940147  0.8387774572 -0.4286923739  1.8721801915  0.8645378011 #> [5946] -3.0803902972  0.2011362572 -0.1234522498 -0.3808093319  0.1560160580 #> [5951]  1.8627935337  0.9541106284  0.6734516662  1.2956220802  0.8940505118 #> [5956] -0.6456902665 -0.2253671713  1.1244638209  0.1431223799 -0.0028914814 #> [5961]  0.6245376456  0.7331225668  0.4846788496 -1.8826822868  0.0136484695 #> [5966]  0.3515697824 -0.4756477322 -0.0093008205 -0.5493944614 -1.8147268391 #> [5971]  0.8980693749 -0.1263618564 -1.3428286888 -0.1721094462 -0.1780952486 #> [5976]  2.2797623743  0.6366130810 -0.2303706389 -1.3915455537  0.4917946291 #> [5981] -1.4690645594  0.8159143182  0.0062356794 -1.2890549830  1.1105475153 #> [5986]  0.2481724865  0.1856105120 -1.2700952863  0.9773630243  0.7311708433 #> [5991]  0.9172865603  0.2359725331 -0.0662041686 -2.1139172795 -0.5055477459 #> [5996]  2.3999657912  0.6912581213  0.6005814532 -0.9694822503 -0.3665460912 #> [6001]  0.7867485258  0.1552575296  1.3295762102 -0.9335799162  0.8317919839 #> [6006]  1.8508343699  0.2961077017 -0.1696103696 -0.3537611150 -1.4027777506 #> [6011]  0.4154449490  1.0249574138 -1.1283019944  2.1936966213  1.1801392481 #> [6016]  0.3168100828 -1.3965599300 -0.0332006265  0.7418043018 -1.6320183103 #> [6021] -1.1208082256  0.1239089653 -1.4565773615 -2.0759028512  1.1283654003 #> [6026]  0.1885603122 -1.1340413165  0.4613192675  1.5821113951 -0.6131442414 #> [6031] -0.5465815745  1.1350330537 -0.4631661915  0.4407355916 -2.8592193568 #> [6036]  1.5089047520  0.9627797204 -0.7139294159  0.2550124371  0.4294719026 #> [6041] -1.8847805511 -0.0384278499 -0.5071864321 -1.6012115016  0.1808416344 #> [6046]  0.6762872438 -1.1341070202  0.3117911615 -1.3693133530 -0.8820708155 #> [6051]  1.5958930491  1.1990249174 -1.1327220370  1.6221406404 -1.6472247958 #> [6056] -1.9815496254 -0.3859689120  1.0769036975  0.2084031517  0.1714577278 #> [6061]  0.5775654315 -0.4510519255 -0.0092321000 -1.1136534851 -0.1804745511 #> [6066]  1.0945792799 -0.1789160783 -1.4031424048 -0.6917972200  1.5636674806 #> [6071] -0.3973598853 -0.5749549362  0.0407748912  0.6162052106 -0.8677847454 #> [6076]  0.0935309824  0.2784684026  0.0270961965  0.2037139284  0.0481872456 #> [6081] -0.7670961481 -0.8495888474  1.6427257681  0.1089429231  0.2473246596 #> [6086] -0.6565081549 -0.0703248184 -1.0332052715  0.3054665390  0.7814018951 #> [6091]  0.8896571072  0.4477731332  0.6542205315  0.5357279044 -0.2191541552 #> [6096]  0.4267499856 -0.3776715070  1.1955012315  2.9906412195  1.2336703336 #> [6101] -0.5017106320 -0.5441344246  0.7587195428  1.8112657461 -0.6751112080 #> [6106] -0.7589945219  0.6181154450 -0.8962682611 -1.5608781055  0.5478004071 #> [6111]  0.0641005206  1.1543391006 -1.3958355571  0.0940957154  0.4471607747 #> [6116]  0.1927678763  1.6568426344 -0.0394675430  0.9286453538 -2.4034026088 #> [6121]  0.9736599910 -0.1735496769  1.2926569783 -0.0925003991  1.1459543240 #> [6126]  0.4066241241 -0.5389888492  0.1188104117 -0.2338202391 -0.6301167079 #> [6131]  0.3231827006 -0.7776605553 -0.6531218933 -0.3773990553  0.8562365695 #> [6136] -0.7501604530  0.9503881601 -0.4772150667  3.1248489491  0.1549383490 #> [6141]  1.6750237061 -0.9680495349 -0.1135541569 -0.3243666073  1.5049114973 #> [6146]  0.6059800925  0.7143619144 -0.5819639577  0.7260817389 -0.3916101929 #> [6151]  1.3272579651 -2.5724871947 -0.0089509389 -1.2729569277 -0.7224376820 #> [6156] -1.2317636457  0.8599009794 -0.8065135234 -1.2075704663 -0.5352314717 #> [6161]  0.6449808065 -0.1742825386 -0.2137777804 -1.5693811970  0.5351994439 #> [6166] -0.6747405049 -1.9841388904  1.0081707114  1.1454899326  0.7424043007 #> [6171]  0.0819148872  0.4363443233  1.0765911497 -1.4172217833  0.8260051376 #> [6176]  0.4175719183 -0.1038269300  0.0533044784 -1.0937440447  1.0333204551 #> [6181] -0.1817097781  0.2830223749  0.9300050635 -1.5051570019  0.8033636590 #> [6186]  1.0210199357  1.0758025575  0.2265794906 -0.2733498880  0.1706045702 #> [6191]  0.3473916342  0.7216041086  0.9729727003  0.0626740032  0.3574123418 #> [6196] -0.4767777185 -0.5122517087 -0.4182992020 -0.5392991790 -0.7427222407 #> [6201]  0.6833901307  1.2128974747 -1.6185094678  1.1403352601  0.2264457625 #> [6206]  0.2552493419 -0.1213421379  0.3652428475  1.8614895731  0.7413475534 #> [6211] -0.1269262322  1.5211260544 -0.1738898088  0.3591083251 -0.1025597722 #> [6216] -0.5977551234  1.3942011253 -0.2276093016 -0.6243949359  2.4649075886 #> [6221] -1.3866484155 -0.0847851318 -0.6487537630  0.9082049580  2.2841834406 #> [6226] -0.9997568403  1.1270049944 -1.0317784321  0.8344512524  0.3718318608 #> [6231]  0.6605965043 -0.4491860555  1.3463150891 -0.1709957148 -0.7680939257 #> [6236] -0.3859486924 -0.3953902650 -0.9664639334 -2.6271353998  0.3266511566 #> [6241] -1.3610165114 -1.0950336244 -0.4563688859  1.6504959141  1.6242331428 #> [6246]  1.3472945172 -0.8378387944  0.0084213200 -1.4225359277 -2.0603207031 #> [6251]  0.9503401835  0.0325271191 -0.2656300710  0.7285836732 -0.7185136363 #> [6256] -0.9284320507  0.0036221148  0.3975871701 -0.2873652427  1.0463129591 #> [6261]  0.6588034784  1.1283786417 -1.4200321685  1.1234153568 -0.2686648401 #> [6266]  2.2901717820  0.7888485429  0.3707101474 -0.3982226816 -0.5324265274 #> [6271]  1.4170974460  0.7422160859  0.0357646428  0.5868093819  1.9907466315 #> [6276]  0.9648252314 -0.5565564009  0.2942251661  1.7323491619 -2.3467570185 #> [6281]  0.9016880559 -0.3137203950 -0.4900391253 -1.1632663472  2.7155749153 #> [6286] -1.3612980984  0.4431546766 -1.0942929737 -1.5524448939 -1.9266387161 #> [6291] -0.8201253604  1.3866202415  0.2312896198 -0.9036677219 -0.0789953277 #> [6296] -1.1017899149 -0.5784837979 -0.9987714880  1.1788534049  0.4323757787 #> [6301] -1.4366756111  0.8463692081  1.3628438668  0.1266370805 -0.7828955010 #> [6306] -0.5465751107  0.3954192565 -0.1905704848  0.6882479454  0.3912611191 #> [6311]  0.4049174326 -0.2344262751 -0.5385101174 -1.2286940033 -0.9184669728 #> [6316] -0.3999975190 -1.0766858505 -1.2746003790  0.2458783808  0.9772359662 #> [6321]  0.5823284152  1.0607779992 -0.0331261514  0.1398053017 -0.3736348898 #> [6326]  1.1828444501  0.0925339627 -1.5336305563  2.2247036658  0.5288871519 #> [6331] -0.9857476788  0.3203504198  1.6369695879 -0.1912453615  2.2259687324 #> [6336] -0.8371070380 -1.8772457041  1.5312396509  0.5523474173 -0.2040329132 #> [6341] -0.4304093067 -1.2591213700  0.0478317972  1.9672944097  1.2924621318 #> [6346]  0.1032063232  2.0316524548  0.3637860808 -1.3965078463 -1.0278220095 #> [6351]  1.0061983115  1.5414782175  0.8555775579  1.4418852466 -1.0918911486 #> [6356] -0.1135467206 -0.2204071951 -0.3163156821  0.1338381651 -0.4927918214 #> [6361]  1.6453015166  0.0686588953  0.5325774389 -0.9876384820  0.8466322636 #> [6366] -0.9460628012  0.1422899668  1.1697030483 -0.7161787511  0.4806736220 #> [6371] -2.6853604415 -1.4861497101 -0.3575068362  1.1854975025  1.3895827496 #> [6376] -1.0824976761  0.7669994616  1.6780756199 -0.3155174932 -0.9821469421 #> [6381] -0.7224010981 -1.8654516344 -1.0488720794  0.5316244497  1.2079811297 #> [6386]  0.2778110456 -0.6858550220  0.4825011769 -0.4235978980  0.7485512538 #> [6391]  0.0649075581 -0.0135548821  0.3409279582  0.3838279657 -0.8594190389 #> [6396]  1.5284987344 -0.4480770741 -0.0304583782  1.3643694095 -0.3430809471 #> [6401]  0.5297758551 -0.7962559933 -1.9661548296 -0.7396696256 -0.4241927461 #> [6406] -1.0621632816 -0.3120493768 -1.7715565288  1.4614237936 -0.2348795963 #> [6411]  0.7021349089 -0.1459306226  0.6255040199 -0.2195517391  0.3346678612 #> [6416] -1.6887266788 -0.1223997088  1.1222919387  0.1244340576  0.2715127885 #> [6421] -0.5114379846  1.0766337831 -0.9326764653  1.3514739580 -0.2284835407 #> [6426]  0.0492361319 -0.3043763829  0.0315828617  0.9904299386  0.8960786692 #> [6431]  0.3748193443 -1.1867660865  1.3229397235  0.7497169689  0.3847336019 #> [6436]  0.6422177467  0.1031244162 -1.1318967076 -2.3523329521 -0.3614956238 #> [6441] -1.8691861334 -0.6359844282  0.0020165943 -1.5664304177 -0.0937181395 #> [6446]  0.5359294565  0.3463227615 -0.4694298525  0.0238244462 -0.1520633329 #> [6451]  0.1116695572 -1.5167071295  0.2281808530  0.5755565766  0.5550235835 #> [6456] -0.8837833795  0.4579476993  0.1152119421 -0.1558663697 -2.3330873826 #> [6461] -0.9924030885 -0.2605932505 -0.5993501166  0.7565970189  0.7707658682 #> [6466]  0.4558232640  1.0066539664  0.4914531149  0.1597103562  1.2691116485 #> [6471] -0.7817812121  0.7618011140  0.4620034494  0.6063598911 -0.6225274002 #> [6476]  1.8729314805  0.8637134815  2.0053652661 -0.2214997734  0.2082080045 #> [6481]  0.7379705434  1.4544186494 -0.0763609287  0.0755120950  0.3227717509 #> [6486]  0.5455072463  0.6304832440 -1.4234138118 -0.3646350838 -0.6319935493 #> [6491]  0.4193953189 -1.1635005795 -0.7541117863 -0.2839703583 -0.1903194988 #> [6496]  1.6239484970  1.2139050551 -1.7192963911 -1.5173911318 -0.8614259862 #> [6501]  0.9105095270 -0.4056126271 -0.7888989653 -1.0554997661  0.6502532327 #> [6506]  0.0825978772 -1.0839975934 -1.1216868729  1.2010494994 -1.5510426520 #> [6511] -1.0672826744  0.3193189852  0.8649469796 -0.5711874735 -0.0672040403 #> [6516] -0.3292328951 -0.4602583344  0.8757954484  0.1445947000  2.1127648291 #> [6521]  0.0180842933  0.8677227711  0.2530724606 -0.9341759169  0.4256365447 #> [6526]  1.8774646505  0.0879327491  0.0893285228 -0.7367608814  0.4682375107 #> [6531] -2.4104789207 -0.2806590686  0.2955944038  1.3634951337  0.4579098577 #> [6536] -0.4503120993  1.0295637947 -0.9854289933  0.4570789512  1.3094872555 #> [6541]  2.1293798159  1.3041857925 -1.7726689984 -0.7240880085  0.5364579928 #> [6546] -0.5377709346  2.2949370899  1.5799455343 -0.8026941615  0.3739495485 #> [6551] -0.2379991001 -0.4697232960 -0.1905871738 -0.0050091016 -0.6902112036 #> [6556] -0.0864670661  1.0490657071  0.7174228485  0.5149696887 -0.3244713646 #> [6561]  0.3747481508 -1.7375015796 -1.0966198298 -1.0899129483  0.1448637028 #> [6566]  1.4239032590 -1.4106570485  0.6248735056 -0.9414008061 -0.5194765407 #> [6571]  1.4308790052  0.9062183835 -1.1037540028  2.6083785184 -0.4156062831 #> [6576]  1.1284864463  0.3916216208  1.1093962889 -0.1642303163 -0.1722612765 #> [6581]  0.7991250240  0.8271469113  0.2278623763 -0.9445470559 -0.1220586440 #> [6586]  1.7035206244  0.4054285827  0.9073811799  0.7367371542  0.3817373010 #> [6591] -1.2580302426  0.0987554592 -0.8156987465 -0.2203081301  0.0136833821 #> [6596]  1.4354151062  0.3578602927 -0.5187328064 -0.5616851065  1.8956895190 #> [6601]  3.0203888390  0.8541895954 -2.0807598612 -0.2290732812  1.3039886487 #> [6606]  0.6292462160 -0.0626240141  0.0682558722 -2.1574557127  0.2932820556 #> [6611]  1.5685492096  0.9578928358 -0.1290229717  1.3856262652  0.2511131363 #> [6616]  0.9907443962  2.1411544929 -0.7764906442 -0.7462187131  0.2327803917 #> [6621]  0.3394228472 -0.6177912785 -0.9413455579  0.2556423945 -0.1509230213 #> [6626] -0.7832352793  1.0090441114  0.7098433017 -0.3250026248 -0.4817721722 #> [6631]  0.7977663604  0.5008383634 -1.1403794953  0.9551411852  0.0112795139 #> [6636]  0.5767936238  0.9921574589  1.2987439966 -0.7194907023 -1.6484689452 #> [6641] -1.3658464987  0.4079450854  0.1362361723 -0.8360229490  0.4120394521 #> [6646]  0.2298433725  0.1218351704  2.5436781875 -1.3770102272 -1.1606273004 #> [6651] -0.4647136944  1.1642697908  1.7483836941 -0.7833693848  0.5935438749 #> [6656] -1.2449052666  0.2429945280  0.4202427155 -0.5806976790 -1.2944698564 #> [6661]  0.6442549861 -0.3548797061  0.4523283802 -1.0489820395  0.4563993656 #> [6666]  0.9889860312 -1.0340802746  1.9083975243  0.0059928498  0.1172462918 #> [6671]  0.8764780783  0.9916137788 -1.1662931678 -1.3042584170  0.5771642078 #> [6676] -1.1882969605 -0.5280952534 -0.2247923363  0.0133828261 -0.7944225188 #> [6681] -1.1156665643 -1.3817112146  0.6034641821 -0.3277694711 -1.4250645606 #> [6686] -0.5561235051 -0.9106338825  0.1991750622  1.3024542882  0.1698022132 #> [6691]  0.8185231509 -1.8786462475 -1.3876149148  0.2494146828 -1.4916130507 #> [6696] -0.6000806323 -0.5375805106  0.0789344688 -0.4886213037  0.6885938024 #> [6701] -0.7860632475 -0.0067532152  0.2635565776 -0.1890677540  1.4498766456 #> [6706] -1.2746931852 -0.0262148328 -0.7802355374 -2.1486372424 -0.3744477122 #> [6711]  0.9200209752 -1.1677157506 -1.2666055156 -1.8132239550  0.3932058775 #> [6716] -0.0981355935  0.3921134276  2.2951915667  0.4166432541 -0.4585931411 #> [6721] -0.2982471333  0.0177692687 -0.3508033609 -0.4615157796  1.6854436569 #> [6726]  1.2507121457  0.9334862093 -0.1136423604  0.5660613699  1.3163756452 #> [6731] -2.9980892390  1.1028256642  0.7138069741  0.8540173521 -0.0887846353 #> [6736]  1.6148807717  0.7221905878 -1.3823712235 -0.8391181608 -0.8370135050 #> [6741]  0.6102728537 -0.5828027947 -0.6433397872 -0.6783569514 -0.7153238040 #> [6746] -0.1960629066 -0.4341771195  0.6808108142 -2.1339272357 -0.5550942189 #> [6751] -0.7592863610 -2.6749675355 -1.0539865482  1.9081248869 -0.3250032413 #> [6756] -1.6888153994  1.0044984448  1.1536519852  0.8495494989 -0.3363510890 #> [6761] -0.4642617374 -1.3069199686  0.5307576811  1.9586487373  1.2317196824 #> [6766]  1.0194375154 -1.1378281137  1.3322204001  0.0910014886  0.4403134439 #> [6771] -1.0813426683 -0.3500204561  0.3846311437  0.1734988885  0.2663463638 #> [6776]  0.5628040744  0.1567815265 -1.6896509811 -0.3103906348  0.1261369537 #> [6781] -0.8391597262 -0.4096863897 -0.4376554971 -0.0564242129  0.7271257703 #> [6786]  0.1150634005  0.4671093449  0.2965929250  1.3510576418  0.2108200376 #> [6791] -0.0217833813  0.5430209579  3.4352470043  0.8228823114 -0.8607796019 #> [6796] -1.3579541017 -0.3772523229  1.8203462868 -0.0157293965 -0.2484508473 #> [6801] -0.1806819776  0.2445864216 -0.1025234809 -0.0089860484 -0.6266564143 #> [6806] -1.3454575458  1.1948174700  1.5095668890 -2.3591839975 -0.8928817505 #> [6811] -1.4034961781  1.3360498945 -0.4961510276  1.0588844586 -1.6239438123 #> [6816] -0.1475624141  0.0001791085 -1.2682365332  1.1219533223 -0.3859312045 #> [6821]  1.1188837489 -0.5539205466 -0.0137965799 -0.7905642920 -0.6312434135 #> [6826] -1.2593276201 -2.1145405680 -0.5862531930  0.3670443703  0.2306870191 #> [6831]  1.0059412934 -0.4203787426  0.0505982425  1.7931567011  2.3845122200 #> [6836] -0.2271109876 -0.4305680123  0.4292403458  1.2166862022 -0.6153304451 #> [6841]  0.3684943306 -0.3807165959 -0.2305624796  0.4596428169 -0.2425776465 #> [6846]  0.8378450504 -3.9976076885 -0.4304467991  0.1867141230  3.5719167063 #> [6851] -1.1066402264  0.9910887283  0.9168983810 -1.1533517277 -0.4630527675 #> [6856]  0.9448510832  1.5078274227 -0.3594055549 -0.3119574110  1.1558887603 #> [6861]  1.1543304701 -0.3228732903 -1.1426736196  1.2383566657  0.5446154752 #> [6866] -0.4535955229 -0.5142463179 -0.8481984913 -0.7693577434 -2.1261958887 #> [6871] -0.5456904312 -0.5349603353  1.0082622413 -0.0647296378  1.4367675138 #> [6876] -0.3076204991 -0.7666476626 -0.1768553101  1.5150192484  2.4683980479 #> [6881] -0.6903884630  0.4429402423 -0.4421900999  0.0297922893 -0.4970307322 #> [6886]  0.7184105289 -0.1440457564  0.7115886373  0.5420783222 -0.4695328034 #> [6891]  2.6132363561  0.1946148980  1.3897193024  0.9935876559 -1.3424912966 #> [6896] -0.2951326136  1.6047096528 -0.3580941825 -0.7750059541  0.4834865745 #> [6901] -0.8824690866  1.1744244791 -0.5107951081  0.9190362549  1.9109106789 #> [6906]  0.8890296017  1.7754512272  0.6166639238 -0.5240095273  2.3385557530 #> [6911] -0.4945331069 -1.6425718957 -0.6794402384  1.0540038397  0.6596322316 #> [6916] -0.3801961068  0.1235040894 -1.3683003232  1.2189772562  0.3207349428 #> [6921]  0.5464129010  0.7684740117  0.2187322183  1.5749168235  0.0632845237 #> [6926] -0.9161903874  0.2220570228 -1.4002527192 -0.7510138896  1.4280638648 #> [6931] -0.9248262852  1.4731057102 -1.1240913196 -1.3849272661  1.5581356974 #> [6936]  0.2358273145  0.9420957947  0.3507284077  0.9438990157  1.4238671892 #> [6941]  0.7794532444  1.1961288418  0.9127447322  1.7835031685 -1.9846700081 #> [6946]  1.0077972736  0.8529495388 -0.8737601331 -0.2403151181 -1.2241190477 #> [6951]  0.2911795325 -0.5641734659  0.1387409089 -1.7794787057  0.0198450595 #> [6956]  0.0165886215 -1.0051752569 -0.0192907460 -0.1663642295  0.0461304119 #> [6961]  0.9056231505  0.0917894372 -1.3787450091  0.2242580440  1.5884922498 #> [6966]  1.1979988771  0.0210302494  0.9084183487  0.8902437048 -0.0700068637 #> [6971] -0.4115231512 -1.0181873558 -0.8175030262 -1.3480151827  0.4599066836 #> [6976] -0.5349603961  0.2614567432 -0.8104355587  0.0272721017  1.7521820594 #> [6981] -1.1019738799  0.8668346543  1.2266220202  0.8306966419 -0.9780738045 #> [6986]  2.3430630354 -2.5777299307 -0.1659194782 -0.6243301936 -0.8341803383 #> [6991]  0.3330883603  0.6485353581 -0.6790053619  1.0045815011 -0.4064927947 #> [6996] -0.0589589210 -0.1991090181 -0.0277089573 -0.3310749511  0.7980776520 #> [7001]  1.0110525433  0.5078887220 -1.2899950216  0.8360585401  0.4614552967 #> [7006]  1.7606969162 -0.2569494105 -0.3726317988  0.6136401708  0.1258168453 #> [7011] -1.5522786323  0.2033397872 -1.5134476055 -0.3765791184  1.8276751612 #> [7016]  0.6500478024 -1.4558242553  0.3009422423  1.2933916997  1.2257415056 #> [7021]  1.3914249254 -1.6621760753  1.3649660148 -1.2617766438 -0.0172193303 #> [7026]  1.5067973850  0.0812290696 -1.5856462337  0.4847014580 -0.6018137585 #> [7031] -0.1427171388 -1.0310398681 -1.2003828974  1.3726306486 -0.3056415216 #> [7036] -0.6661571141  0.5392619961  0.9531753866  0.1881288925  0.1640118490 #> [7041]  1.0089822987  1.0983668038  0.7398354453 -1.1302909219 -0.8575647806 #> [7046] -0.8380823503  0.2563131323  0.4834263462  0.3631701495 -1.0974808733 #> [7051]  0.3568226540 -0.2636155557  0.2288818674 -0.6756488650  1.5803238670 #> [7056] -0.3235601447  1.1807741109  0.8761720495  0.4143484046  2.3396580888 #> [7061] -0.2154747467  0.8091419686  0.1165985846  0.0064202015  1.0549971985 #> [7066]  0.5790856942  0.8928173225  0.1915298061 -0.5292564352  0.1407482079 #> [7071]  0.0765907569 -0.5189217928  0.6638740016 -0.3348887795  0.5529442509 #> [7076] -1.0397902037 -0.1036107882 -0.0576122400  0.2421607112 -0.5182574402 #> [7081]  0.2964970282  0.1863250300 -0.5000410330 -0.2560781809  0.3399666466 #> [7086] -0.2636424227 -1.4863814301 -0.0329117354  0.0259025816 -0.6455437492 #> [7091]  0.7035149742 -0.0870395671 -1.4755581488 -0.6784565309 -1.5861692644 #> [7096]  0.4249818084  0.1102816679 -0.6339768994  0.3842246460  2.8749046232 #> [7101] -0.2904292733  1.4801756941  0.6305253292 -0.3596882434  0.1540917608 #> [7106]  0.9400246160  0.0747091139 -0.6102459451  0.4569318884 -1.3405916371 #> [7111]  0.3287878396  0.2628259288 -0.6070528864  0.1158341537  1.5800418685 #> [7116]  1.1406330205 -1.3690834171 -0.5582257369 -0.6556726217  1.0718818938 #> [7121]  1.0006474141  0.0476937139 -0.3437319654  0.6225042433 -0.3939956044 #> [7126]  0.8534298763 -1.8103389257  0.2122704330 -1.5639171690 -0.2264366729 #> [7131] -0.0244847464 -0.3498870451  0.6420323223 -0.5286871272 -0.5886110145 #> [7136] -0.5659600365 -0.3295399950 -0.6368047644 -0.3165297606  0.4109554755 #> [7141]  0.5873627661  0.4366380403  0.4851693571  0.7358728374 -0.8266335439 #> [7146] -0.3188726981  0.1063606880  0.1241634766 -0.2202125131  1.1173548879 #> [7151]  0.8156904210  0.6727665329 -3.7043185289  0.2447054562  0.0816092671 #> [7156]  2.2429421972 -1.5241253052  0.1092105313  0.2724079953  0.1603670607 #> [7161] -0.1753603620  1.2883895153  0.0885942868  0.2476793244  0.7481743173 #> [7166]  0.2123349807 -1.1053914310  0.7220028817 -0.3764940693 -2.9875223244 #> [7171] -0.4824893560  0.5309052565 -0.1328804836  1.1583528373 -2.4390197929 #> [7176]  1.4196001291  1.8248537431  0.8265225490 -0.6961057402 -0.7694199242 #> [7181] -0.7524928458  0.1024672205 -0.2077141978 -0.6801837993 -0.4371631697 #> [7186] -2.4487547699  0.7207196549  2.0781790621 -1.3927525221  0.5417360941 #> [7191] -1.0171005610  0.1358048209  0.4351667858  0.7653019365  0.8439741355 #> [7196]  0.7308966014  2.1765872044  0.3585810311 -0.6741056113  0.0408601368 #> [7201]  0.0801352192 -1.3485821485  0.5443172850 -0.6346718815 -0.1021288196 #> [7206]  0.2769157715 -0.8420257861 -0.5046250619  0.3198143992 -0.8587130912 #> [7211] -0.0388527805  0.3307479840  0.3224469203  2.1557917453 -1.0011771772 #> [7216]  0.0923021007  0.5264503617 -0.2423834563 -2.3189588747  0.7692095128 #> [7221]  0.0500459736  2.7789462671  0.7950334849 -1.1895438520 -1.1059320799 #> [7226] -0.2133015796 -0.3615736417 -0.4834220471 -0.0924134064  0.3958804921 #> [7231]  1.6633970046  0.2806280912 -0.3320026554 -0.5600066547 -0.3779532901 #> [7236]  0.3537474386  1.3143784279 -0.3399617109  0.1575807322 -0.3822651788 #> [7241] -0.2882280260  0.8573703504  1.5549994414 -1.5966186668  1.3682369214 #> [7246]  1.6416829309  1.4253930285  0.2474470083  0.2578971735  2.0207318361 #> [7251] -1.1737517734  0.5131787130 -0.1860615470  0.2817167371  0.6356919143 #> [7256] -0.8534580215 -0.3412952322  0.2860908143  1.1390903180 -1.4863658067 #> [7261] -0.1590221796  0.7485312429  0.2089388044 -0.0572409676 -2.4732942745 #> [7266] -0.8354932589  0.2038806337  0.3723101103  0.0638590114  0.2296521189 #> [7271]  1.8726437622 -0.0216133449  1.1527173500 -0.7082170038  0.4348089220 #> [7276] -1.9531085710  1.2019938997  0.3470871589  1.0603782465 -0.4668740970 #> [7281] -0.9354382059  1.7007377130 -0.7866521673 -0.0191770844  0.7338061804 #> [7286]  0.9781503996 -0.0675149611 -1.1609786109  0.7548827146  0.8591935790 #> [7291]  0.2284906105  0.5504175401 -0.8250425197 -0.2974514328 -0.5319769434 #> [7296]  0.8079390438  1.8869561278 -1.6186049247 -0.9412023961 -0.7439433294 #> [7301] -0.1097149694  1.8807726257 -1.5244814024 -0.9033002990 -0.4851820235 #> [7306] -1.6554076968 -0.3285786409  1.0780775009  0.4474507414 -0.5860066966 #> [7311] -0.7341200133  1.5464072772 -0.7434693630 -0.4712299136  1.0594250757 #> [7316]  0.3344325260  1.2846580418  1.2284109366 -0.5435453635 -0.7874615325 #> [7321] -1.9569531468  1.5502646604  1.0451698455 -1.9137680314 -0.8841339660 #> [7326]  0.0711455761  0.9128855728  0.1501542179 -1.1166794833  0.5118106168 #> [7331]  1.0662559063 -0.0883959355  0.5466806693 -0.7779972006 -0.4845709962 #> [7336] -2.4161377419 -0.6423361172  0.5303022701 -1.2581616504  0.4375326413 #> [7341] -1.0338318765  0.0556730865 -0.3133475783 -1.0073580980 -0.2203019415 #> [7346]  0.3253477453 -0.0465843695 -0.0740803097  0.5299728771  0.1983454687 #> [7351] -0.6501353569  0.5544714297 -1.0049058054  0.7605239376 -3.1976723249 #> [7356] -0.5486757126  0.1209064321  0.6766596738  0.1310089804 -0.6051509974 #> [7361] -1.0376615224  0.6126052282 -0.2046471274 -1.1250646643  0.4716029231 #> [7366] -0.8966849242  2.1407504396 -0.9948532633 -0.1260521416  0.8452170296 #> [7371] -0.1622833410 -0.7218930897  0.9357734970  2.7828404103  0.7676384979 #> [7376] -0.2171989537  0.4360871937 -0.0422681695  0.1798782694  0.5651199974 #> [7381]  0.0901042462  1.3359481584 -0.5346965990 -0.6785514155  0.1101601259 #> [7386]  0.7414356350  0.4041294898  1.4940423323  0.0131692974  0.4633820525 #> [7391]  0.1553038173  1.1402892199  1.7702259525  2.2870857644 -0.1660270373 #> [7396]  0.8239606239  1.4327696691  1.3838309509 -0.1742205936  0.9430676745 #> [7401] -2.1039713242 -0.8729519669 -1.9162999506  0.8849806853 -0.7493262921 #> [7406] -1.2056172994 -0.9150771607 -0.6053666393  0.3463696182  0.0682326893 #> [7411] -0.9956044377  0.1570780568  1.1859935565 -1.0024164640 -1.4611181143 #> [7416]  0.4785600117  1.5777199143  0.2344505403  2.6512103899 -0.3905218700 #> [7421] -0.1966045480  0.7221090645  0.7365559845 -0.0880939970  0.6203747352 #> [7426] -0.7465474749 -0.5693853294 -0.3485151627  0.5360533588 -0.0848398677 #> [7431]  0.0088622513 -1.0682983484  0.5445603148  0.3881862584 -0.2934367174 #> [7436]  0.0773602876 -0.9486052430 -0.8393260186 -1.4927885662  1.5733583602 #> [7441]  0.5103136242  0.8341385608  1.3099795512  0.8352275586  0.8391061559 #> [7446] -1.5333533408  1.6590897409 -0.3370331689 -0.7645949741  0.6372508130 #> [7451] -1.2300217865 -0.2423074454 -0.6954120729  0.2013540919  1.4370022348 #> [7456]  1.1138518076  0.1553790187  0.3942324785  0.5756165426  0.6936771416 #> [7461] -0.3257836635  1.1029441626  0.6186101465 -0.2236945468  0.7029216582 #> [7466]  0.4700632397  0.6951089198 -1.7046024666  0.4123407089  1.0633890528 #> [7471] -0.0389855659  1.6989836904 -0.4922044983  0.9556443732 -1.5252118832 #> [7476]  1.1785690483  0.3655300435 -0.9361907505 -0.0599652031 -0.7709335580 #> [7481]  0.3655760349 -1.5746150759 -0.1326471997 -0.8206681471  0.0140395174 #> [7486] -0.6875379558 -0.0398224566  1.5163448489  0.5411826914  0.8595663619 #> [7491] -0.7785226189 -0.8201790938  0.0083856793  1.2202990161  0.0545174460 #> [7496]  2.9994986946  0.0867723278 -0.6717873047 -1.0821954134 -0.3417488229 #> [7501]  1.5681855694 -0.2335125145  1.4199818119  0.1780705341 -0.0277491957 #> [7506]  3.1450289470 -0.7482236235 -1.1927214476  0.2627131688 -0.7009619840 #> [7511] -0.9407917003 -0.1356416836  2.6029060393  0.8914905275  0.6929622546 #> [7516] -0.3713979348 -0.4810374491 -0.5052881797  1.2344865165 -0.2797767670 #> [7521] -0.4582531971  0.4903305105  0.2540867287  0.2024541480  0.2016550854 #> [7526]  1.1571237035  0.6265098930 -0.5637561269 -0.8022284718  1.9936053654 #> [7531]  0.3042677174  0.6971021568  0.4798916109 -2.7304635320 -0.0552322945 #> [7536] -1.9486906202 -2.0980108997  0.4128848171 -0.2702385840  2.5991880188 #> [7541]  1.4355217125 -1.7217107390 -1.8199141459  0.5273349739 -1.8912380225 #> [7546] -2.1797732915 -0.8507860946  0.1080119072 -0.2055402288  0.3874532278 #> [7551] -0.3286802815  0.8843979108 -0.6069217131  1.0817373632  0.5203462011 #> [7556]  0.5978549860 -0.5144882081 -0.9440077883 -0.8839269985 -0.1687011606 #> [7561]  0.2514499874  1.4880403543  0.3295290619 -0.5306971760 -0.1114945550 #> [7566]  0.9009979773 -0.2131134003  0.3951267589  0.5828038937 -0.0460879346 #> [7571] -1.0731076676 -0.3836607638  0.5083260076  0.3561573072 -0.5385886954 #> [7576]  0.9428183761 -0.9633222934 -0.6338000798 -0.0551378721  0.7914441800 #> [7581] -1.7377023304  0.2688720337  0.0136013757  2.5650624745  0.2524818163 #> [7586]  0.1193671201  1.5892942476  0.3637315581  0.6116027380 -0.4873463494 #> [7591]  0.3321651626 -1.8065016488  0.9202315379  0.9483142832  1.2954180366 #> [7596] -0.0406304468  1.1478973514  1.0828930784 -2.0891976482  0.8670644961 #> [7601]  0.8878135071  0.5962710668 -1.1173917993 -0.9571628932  0.9946878347 #> [7606] -0.2280486138 -1.7580806102  0.6944976800 -0.1535494260  0.1258850278 #> [7611]  0.1813998916  0.5163937368  0.0316221105  0.6099948515  1.2941971392 #> [7616]  0.0878823968 -0.7260769151 -0.5131217605  0.6175140486 -2.2490085761 #> [7621] -0.7327555034 -1.4705853769 -3.6137807306 -1.0150658593  0.8536919136 #> [7626]  0.9751375404 -1.4858792401  0.7688414208  0.8469335176 -0.2378945310 #> [7631] -1.3187692771  1.1287412520 -1.2732843919 -0.2933700403 -0.8725671264 #> [7636]  1.9050658840 -0.6929378750  2.7567684176  0.5787484531  0.7243643601 #> [7641]  0.5761011196 -0.4782378902  0.2623614016  0.8025490949 -1.0752678882 #> [7646]  1.3532545994 -1.8892185578 -0.5432254468  0.1507855378  1.4208414645 #> [7651] -1.5039157050  0.3468881217 -0.7279525036 -0.8024352824 -0.5189539268 #> [7656] -1.4784920100 -1.8820439860 -0.1721567155  0.3894806902 -0.5811419663 #> [7661]  0.8350825147  0.3447901762 -0.7145217220 -1.3836937892 -0.8188308661 #> [7666] -1.5158696016  1.8311373350  0.8009804841 -0.5817330599  1.7754909518 #> [7671] -1.4193892012  0.0271162720 -0.4634205468 -0.7519631841 -0.0630950646 #> [7676] -1.5058538226 -0.4922583487 -0.5189144703  0.5070117345 -1.4918633066 #> [7681]  0.4384084015  1.6495046933 -0.3542223411  1.4198385115 -0.8986620844 #> [7686]  0.5318896584  1.7432889544 -0.5514036624  1.3628599089  0.3640461731 #> [7691] -0.3272428934  1.7222686406  0.6039199261  0.0858591958  0.8231120851 #> [7696]  0.0855989888  1.8117426762 -2.0517431208 -0.4980855938 -1.0359704393 #> [7701]  0.2268746157 -0.6576314979  0.2210944126 -0.4801827927 -0.5938237025 #> [7706] -1.0005823087 -0.2181215314  1.4364211946  0.9009986726  0.9057391622 #> [7711] -0.1091356393  1.2922362835 -0.1711287347 -1.3811202321  0.7696291152 #> [7716]  2.3975309341  0.4179092782 -0.7275939796  0.6443745269 -0.3841632506 #> [7721] -0.1701541586 -0.1610607642  0.1346774397 -3.4458389268 -0.3618553994 #> [7726] -1.7085564975 -1.3753614687  2.2505520341  1.0061721235  0.4175004368 #> [7731]  0.2789883179 -0.6451787788 -1.1039272224  1.0159753385  0.5251064425 #> [7736] -1.2084228541 -0.6497539393  1.2334846188 -1.8356631435 -0.4595042220 #> [7741]  1.0418401342  3.2804481848  1.1071296412  1.2915000940 -0.5633994441 #> [7746]  0.5773369654  0.0881978494 -0.3421548943  0.4248548297 -0.3818807504 #> [7751]  2.1442383724  0.2526691938  0.8888371437  0.6532323871  1.2821956435 #> [7756]  1.2715441624  0.0890028053  0.7311982583 -1.8890869047  0.0552869977 #> [7761]  0.6094895005 -0.9488114271  0.2772339740 -0.7446824807 -0.2182092805 #> [7766] -0.8529348619  0.3917528739 -1.1004386686  0.2617157700 -0.4571372680 #> [7771] -0.0184664638 -0.0982220512  0.4050394932  0.0105587655 -0.6487145871 #> [7776]  0.9986771266  0.1478095676  0.0613032345 -0.1972470716  0.4181036929 #> [7781]  1.9503556713  0.8401209168 -1.6733453518 -1.4751598316 -0.2611474671 #> [7786]  0.4691182678 -1.3934813219 -0.5998960122  0.0925483986 -0.0202028991 #> [7791] -1.0785648206 -1.8716381436  0.0921474465  0.9980272124  0.3084738073 #> [7796] -0.6978535500 -1.0586727130  0.4254555559 -0.9818860368 -0.2839103396 #> [7801] -1.0810194569  0.7163815325 -0.8198253579  0.7297771519 -0.9005441813 #> [7806] -0.4927879438  0.8217824017 -0.2616254651  0.0716262836  0.2671442828 #> [7811]  1.5558381130 -0.9105900579  0.7753947478  0.6411688682 -2.5188664732 #> [7816] -0.6394722883  0.7819084006 -1.6608912671 -0.2767171472 -0.2147941835 #> [7821] -1.9206661552  0.1530156308 -0.3286908253  0.5691726916 -0.3152274329 #> [7826] -1.3335998071  0.4958049025 -0.9917072438  0.9836399649 -0.2299827788 #> [7831] -1.0543658880  0.6200960937 -1.2565311449 -0.9825101203  0.0907429971 #> [7836]  0.8406986382  1.6425609590  0.7936500154 -0.3351698414  0.0633066355 #> [7841] -0.5556198439  1.2049814244 -0.1499906234 -0.9875723453  0.7327960731 #> [7846] -0.1280262370  0.3028517405 -0.4131823149  0.8160299466 -0.1918900574 #> [7851]  0.0930059133 -0.9652537339 -0.7058141713  0.9173139230 -0.0488401404 #> [7856]  0.0505194439  2.2327254318  0.2283334891 -0.0352817363 -0.4945540537 #> [7861] -0.5113341108 -2.2152775111  0.6647938659 -0.1496954853  0.2054213569 #> [7866]  0.2810849913 -0.0585152627 -0.2721256069  0.0258026724  0.1360860194 #> [7871] -0.0387890421 -0.2954244214  0.5057251601  0.3751176948  1.2646778151 #> [7876]  0.5389694880 -1.3478624621 -0.1400170546  0.8140181092  1.4536162523 #> [7881]  1.8062218684 -0.8396335248 -0.3084788797 -0.2369807725 -0.6048795723 #> [7886] -0.7552248776 -0.3850742294 -0.2270972867 -0.2146564112 -0.1342813624 #> [7891] -1.9485880266  3.2963933242  0.1133602062 -1.5417204575 -0.9742697011 #> [7896] -0.2888554566 -0.7692020804  0.6539892697  0.4463556151 -0.2386666016 #> [7901]  0.2286264204  1.0700846319 -0.9476792690  0.9139127092 -0.3456775062 #> [7906] -0.6422652130  0.0899591009  0.7493275842  0.9528792421  0.0723240546 #> [7911] -0.1471435795  1.3328607586  0.8204543292 -0.9879132850 -0.3338874342 #> [7916] -0.6453499387  0.6993850133 -1.0594593334 -0.0659560233  1.3922002814 #> [7921] -0.3493336215 -2.1500429571  1.6755198053  0.6599413033 -0.6901790339 #> [7926]  1.4257594116 -1.2116818635  0.0982072675 -1.0059656345 -0.2989593185 #> [7931] -0.3356798309 -0.9847248738  1.8807771633  0.7987573761 -1.1082395032 #> [7936]  0.7401570400 -1.0631451920  0.1646214338  0.6853923260 -1.1899688828 #> [7941]  0.8166144790  1.4940817386 -0.4353700296 -0.2492592691  1.4526648168 #> [7946] -0.5273381884  0.1087699039 -1.2316455043 -0.3876552831 -0.2776716678 #> [7951] -1.3971849119 -0.4031019999 -0.2217315568  0.1618625541 -0.9246128946 #> [7956] -0.3245247859  0.9003056782  0.3845658285  0.1044511655  0.7699139763 #> [7961]  1.7138339369 -0.0562519894 -0.3152334009  0.1266816184 -0.0529750589 #> [7966]  0.3522277857 -1.0712050536 -1.6151714915  1.5171520206  0.8812282086 #> [7971] -1.9869245510 -0.1951283943  0.5242711249  0.9831132808  1.0103505920 #> [7976]  0.2684984843  0.1133948504 -2.0261466743  0.5004559113 -1.9159544284 #> [7981]  0.2760042747 -1.5104575206 -2.0402152745 -1.4534932774 -0.0597268973 #> [7986]  0.2151886773 -0.1728968021 -1.6733992220 -0.8297466279 -0.0897566778 #> [7991]  0.0460815056 -0.3164298168  0.0367218482 -1.3457037521 -0.3018146465 #> [7996] -0.0616454243  2.0710740056  0.8335620308 -0.9344311034  1.4047020474 #> [8001] -0.1089787640 -1.6932328224  1.3229203477  1.3787376584 -0.6553043420 #> [8006] -0.6388995599 -0.9607457899 -1.6490147037 -1.0158300583 -0.3881062469 #> [8011]  1.3570746289  0.1274811171  0.1040489848 -0.0946394513 -0.8039003123 #> [8016] -1.5952017686  0.4539546890  0.2292224614  1.4560436563  1.1059973713 #> [8021]  1.2262713499  0.1767302196  0.5848337864  0.9136960171  0.0781479201 #> [8026] -1.5376548854  1.3811202641 -0.4862615920  0.5885293891 -0.1334759419 #> [8031] -0.1413469891 -0.6512001434 -0.5578728071 -0.6772751528  0.5257385085 #> [8036] -0.0186332276  0.1118821084 -0.3520482715  0.5712563168  0.8443834684 #> [8041] -0.6122407770 -1.0848712298  1.1938316164 -0.9857691994  0.5780967005 #> [8046] -1.5673315679  1.1497990144 -0.1226030033 -0.0842141799 -1.5516009800 #> [8051]  0.9435586370 -0.1684330045 -0.2848813062 -1.3681635291  0.5793015886 #> [8056]  2.1347458976  0.6221074668 -1.7932602475  3.0388839214 -2.3633175738 #> [8061] -1.5474602313  0.5872413864  0.3254319826  0.9166795987 -0.6846022755 #> [8066]  0.5563028847 -1.3051912563 -1.4124154102 -0.0713750118 -1.2591030404 #> [8071]  1.6523918099  0.4685755652  1.1972147478 -0.4228795734 -0.7128271089 #> [8076] -0.2259870167  0.3449601090  0.1011957710 -0.3283134810  0.8849374352 #> [8081]  0.3462057417 -0.4814206854 -0.0844658570  0.7358825991  0.2983013496 #> [8086] -0.1930991881 -0.8758796683 -0.3027018755  1.3155338393 -0.2642386811 #> [8091] -0.6385570674 -0.0249689697  0.8608051063  0.0305095498 -0.6832999033 #> [8096]  0.4699411802 -1.3229827551 -1.5175981363  0.7309953043 -0.5442176619 #> [8101] -1.5253469774  1.0581916197 -0.4582617519  2.9033260319 -0.3420257540 #> [8106] -0.6445270031  0.7435736469  0.2790104848 -0.1290628881  1.4366837293 #> [8111] -1.1330384539 -2.1414980840 -0.9096745070  0.1164264299 -0.8273810943 #> [8116] -0.9948859134  1.0440988243  0.7718733132  0.8644369883  1.2847127355 #> [8121]  1.6690049251 -0.1271801906  1.5130029421 -0.4805498891  0.8096498780 #> [8126]  0.4492172292 -0.2068690536 -0.2703596481  0.0126173661  0.0862563136 #> [8131]  0.0909836809  1.3556621946 -0.1945512580 -0.3661339344  0.1234411480 #> [8136]  0.6052166235 -1.4473729849  2.1337519710  1.0789883174 -1.8290175486 #> [8141] -0.1902439262 -1.3014619334  0.2863716838 -1.5305974168  2.2973329703 #> [8146]  1.1336200061  1.5760572151 -0.2520792632  0.5172010969  0.0637861011 #> [8151] -1.4761284021  0.0691400040 -0.9991888101  0.4856691785  0.9772271714 #> [8156]  1.3487801612 -0.6077066283 -1.4504288096 -1.6566344796  0.6299696449 #> [8161]  1.6445529535  1.1445453431  0.9875869496  0.5519548956 -0.3267296290 #> [8166] -1.3964732824  0.3098899872  0.2910882859  0.5528050204 -0.5443298269 #> [8171]  1.3715870595  0.1920427042 -0.2614893091  0.4978516347  0.5569119858 #> [8176] -1.0062466785 -1.8025890822 -0.6339020609 -1.4782376031  1.2477541027 #> [8181]  0.1364533068 -0.8424705105 -1.1028986346 -1.2447087772 -0.9835830990 #> [8186]  1.2534373223  1.4007329346 -0.3025432965  0.3579207999  1.3952965810 #> [8191] -0.1473007322 -0.3124037657 -0.3086485799  0.3883231473 -1.1526581234 #> [8196] -0.5946029227  0.2354249805  0.1259219504  1.4927957687  1.0853596956 #> [8201] -0.7879063137  0.1875443198 -1.1253407227  0.6777481619  0.6071672342 #> [8206]  1.6562223339 -0.5134220173  0.0696748135 -1.6847187168 -2.2101881682 #> [8211]  1.1194765771  1.2804892542  1.6614655544 -1.0742618377 -1.1332872939 #> [8216] -0.8158860025  1.0290459789  0.4088628031  0.1871274717 -0.2595536363 #> [8221] -0.1855817950 -1.0035524261 -0.7093738294 -0.2643522389  0.0092226323 #> [8226]  0.7377490532 -1.8132713875 -0.2594571632 -0.4344667202  4.4546742850 #> [8231] -1.9727154603 -0.5933672674 -0.1015151389 -0.2439976325 -0.9567173844 #> [8236]  2.0249279755 -1.0817819560 -0.1382845854  1.7619658416 -0.7341905493 #> [8241]  0.0227013438  0.1330761216 -1.0112465306  1.9701338853  0.1924412635 #> [8246]  0.4423060481 -0.9354093172 -0.6461534024  0.1333725409 -0.9084005165 #> [8251]  0.6196411829  0.1564990912  1.0713345231 -1.2886367269  0.4217025449 #> [8256] -0.6531945206 -0.1892147681 -0.6809928639  0.9809444041 -0.1904855942 #> [8261] -0.2359259425  1.6825354952  1.1028503771  0.1141270214  0.7925271671 #> [8266]  0.2853730025 -1.2576833709  0.5860131876 -0.6001135874  0.0917816411 #> [8271] -0.9666002863  0.4515714402 -0.1194262012 -0.8551934815 -0.4631636898 #> [8276]  0.7236157056 -1.3365358009 -0.4452444965 -0.8748147243 -0.9067155362 #> [8281] -0.8827253721 -0.3777670847 -1.6058812559 -0.9540433911 -0.8714184728 #> [8286] -0.7553761532 -0.4396288441 -0.4074602771 -0.5556445284 -0.2657799557 #> [8291]  0.1519846743  1.1194721742 -0.4762530628  0.8616951477  2.4102020163 #> [8296] -0.8787821061  0.9505317000 -1.8700309996  1.4105383892 -1.6979333204 #> [8301]  1.0523537793 -0.2668513142  0.2743050405  1.0846548019 -1.6307239138 #> [8306] -0.0085535614  0.0473010135  0.5885041831  0.7293673015  1.5736302592 #> [8311] -1.1598371260  0.7534007947 -0.6987012622  0.0834181319  0.4102863096 #> [8316] -2.3151380442  0.7891321157 -0.6164573722  0.5901498304 -0.3501309522 #> [8321]  1.3842130523 -0.8256672938  0.7578000617  1.5657961829 -0.4889874511 #> [8326]  0.1968437613  0.2939369201 -1.2168060897 -0.1419476085 -1.0480477494 #> [8331] -0.1197015404 -1.5137228054 -1.1452198439  2.2967908531  1.1143228240 #> [8336] -0.4018968056 -0.4815247446 -0.2791599406 -1.5576346385 -1.4858866224 #> [8341]  0.3220890290  0.2066416584  1.7645689085 -2.0202484793  0.0682013530 #> [8346]  0.3539758913  0.2418460166  0.2733269282 -0.1097872059  1.6203050169 #> [8351]  0.4293474856 -0.3229450434 -1.0137446805 -2.1201766516 -0.1516175194 #> [8356] -1.5650931321  0.5135562280  0.8745005344 -1.7034055865 -0.0487742617 #> [8361] -0.7467943687  0.3138414139 -1.3060981969  0.8066500953  0.0157850317 #> [8366] -1.0204486104  0.6129529456 -0.4034841077  0.4201075110  0.1778486727 #> [8371]  1.1877786397  1.2600925876 -1.2092691952 -0.0165498776 -0.8819351623 #> [8376] -0.2401608279  1.1981135247 -1.4812423067 -1.1542659047 -0.8384790951 #> [8381] -0.8033181645 -0.6406602205  0.3848764080  1.1329552467  0.7733479442 #> [8386] -1.5819397660  1.7378502501 -0.1223468140  0.6453714756  1.1824494554 #> [8391]  0.4466224759  0.3399433201 -0.1468350188  0.0194888928 -0.0609975968 #> [8396]  0.9053802428  0.0545105007  0.3790623227 -0.8220470191 -0.7722480594 #> [8401]  0.2376900647  1.9304971422  0.7108799143 -0.8724765891  0.6284899168 #> [8406]  1.5891690020  1.6750431668 -0.2176001508 -0.5650213508  1.0621783806 #> [8411] -0.2688922215 -1.2260542589  2.6551046171 -1.2605331913  0.4089914562 #> [8416] -0.0568534364  0.3939643155 -2.2093769220  1.5277205165  0.7887289316 #> [8421]  0.0520275700  0.2482287955 -1.1535882882 -1.9622720201 -0.6949118105 #> [8426]  0.5902150134  0.2121217814 -0.5959531315 -0.0413278013  1.5596859913 #> [8431] -0.3883581347 -0.0383426215 -1.7631642893 -0.4745414244 -0.5801566204 #> [8436]  0.0899319894  0.3898862309  1.8791690233  0.6799747822 -0.1587939846 #> [8441] -1.2035103500  1.2457803068 -0.0891459147  0.1472312077 -0.0808081101 #> [8446]  0.3941839713 -0.8645196877  1.3293780139  0.4976841219 -0.5996674726 #> [8451] -0.2332601925  2.1222359695 -1.4630081004 -1.1282868438  0.6153160699 #> [8456] -1.0154313531  0.1370191399  0.9045306881 -1.4679349062  0.4028725365 #> [8461] -0.2428608080 -1.4520337973  0.4569039837 -0.5538019155  0.6008593063 #> [8466] -0.2745062433 -1.5210616006  0.9752220596 -0.9597516721 -0.9029878464 #> [8471]  1.0902393899 -0.7781980279 -0.5308674617 -0.3535330151  0.2191686583 #> [8476]  0.1793869976  0.4751088914 -0.3559360192 -0.1230966926 -0.0670933917 #> [8481]  0.6547942623 -0.4350906570  0.3590694728  1.2260624421 -1.0390065243 #> [8486] -0.7979779858 -0.0486986952  0.6812661074 -0.2534438866 -0.3393047651 #> [8491] -0.1841413117 -0.5008175533  2.0011525700  1.8627286987  1.3033907835 #> [8496]  1.1297030370  0.1878022143  1.3516465188  1.8696626849 -1.0978497326 #> [8501]  0.7401943802  0.5707434692  0.2296702521  2.4146365426  1.4301266067 #> [8506]  0.4328701241  1.3497970033 -0.6956266505  0.4796018674 -1.2189306254 #> [8511]  0.7821019270  0.4274143651  2.3890720435  0.0614087492  0.8022111550 #> [8516]  1.0039432383 -0.5760035080 -0.9856524498 -0.1680860514  0.0115958854 #> [8521]  1.5350214801  0.0519801955  0.1064782954  0.4644619478  0.9753058497 #> [8526] -1.1813258096 -0.7605240810 -1.1086889775  1.4071848429  0.3548487972 #> [8531] -0.0590845129 -1.2636629700  0.3679475151  0.9966813588 -0.8664602238 #> [8536]  0.5263337104 -1.2444535835  1.4559235344 -1.4245242035  1.5298543963 #> [8541]  0.8539319686 -1.1054322276 -0.4081270937  1.7019163005 -0.2226137207 #> [8546] -0.7824792081  0.2910232162 -1.8068921467 -0.1359447351  2.3659986892 #> [8551] -0.9773997930 -0.9296434292 -0.3710526701 -0.5879141235  0.1203445077 #> [8556] -0.2591914339  0.3625686820 -0.4638949963  0.5537710468 -1.2902548167 #> [8561] -0.5750993364 -2.3731813236 -0.3313789501  0.1883618859  2.0967844537 #> [8566] -0.0137801814 -0.7578732749  0.3851819690  0.4554096408 -0.2558135955 #> [8571]  1.1130200092 -1.3371903625  0.0216275481 -0.8745613053 -0.9477455468 #> [8576]  1.5377507490  0.4952942968 -0.2487194158 -2.4862389772  0.5342457739 #> [8581] -0.3623114685  1.0028680537 -0.6922139753  1.7197989142  0.5591571235 #> [8586] -0.2730059077 -1.1617466302 -0.0975288612  3.7922095503  0.2677744492 #> [8591] -1.0128040026 -0.0405127747  1.4335991102 -0.9619407451 -1.5199376106 #> [8596] -0.3858505485 -0.6728063833 -0.6213040464  0.2831241852  0.2131472773 #> [8601] -0.7767383737  0.9615521643 -0.4471161742  0.0247523475 -0.0447440797 #> [8606]  0.0457584169  1.1555645246  0.5935908867 -1.1552832877  2.2346809243 #> [8611] -1.7985272484 -0.8135239889 -1.7066728807 -0.9325074847  0.2331957884 #> [8616]  0.5122467464 -0.8183908297  0.5335368099 -1.0176934163  0.8283463532 #> [8621]  0.7054022953  0.3744813041 -0.0310339804 -1.1473738086 -0.1415668874 #> [8626] -0.2444413391  1.2572507371 -0.5977381037  0.0975067213  0.1305933025 #> [8631]  0.6805461765 -0.8201131298 -0.0685780878 -0.3975866161 -0.0373090721 #> [8636]  0.0518318249 -0.4744082760  0.3814340964 -0.1699215718 -0.5749071687 #> [8641] -1.1041558059  0.4481769534  0.2246146619 -0.9789902769  0.2985701984 #> [8646]  0.0121166770  1.4634547171  1.0354998912 -0.2766494222  1.0637116389 #> [8651] -1.6673305268 -0.9820933967  0.3998090693  0.4010784505 -1.3059013621 #> [8656]  1.2589618557 -0.5618563700  0.1989970312 -0.5425839501  0.2786788051 #> [8661] -1.3243290650 -0.6444180454 -1.6584178616  0.1797379545 -0.4876353990 #> [8666]  0.1618499671 -1.4249959327 -1.0762549206 -0.4103000476  0.0666946882 #> [8671] -2.2301747167  0.0111028499  0.6114710601 -0.9853953521  1.0877811879 #> [8676]  1.3400628664  0.3492054693 -0.2778003713 -1.1349039757 -0.8664425563 #> [8681] -0.4529448442  1.0103925321 -1.2306892476  0.0694999934  0.2486598972 #> [8686] -2.2954543517 -0.7768594368 -1.6033890752  0.3532655785  0.5039347882 #> [8691]  1.1169446313 -0.1578885500  1.1034086979 -0.9219361691  0.6988694128 #> [8696]  2.2681445945  0.9079268603 -1.6420368933 -0.8864269331  0.6902167818 #> [8701]  0.9153914775  0.4841615187 -0.9963771665  0.4017560781  1.0672168563 #> [8706] -0.1953589446  0.4812713789 -1.0894334779 -0.2805802897 -1.8044562117 #> [8711]  0.1270905859 -0.0385608436 -0.1861520823 -0.6465387672 -0.3680234651 #> [8716] -1.0602008691  1.5737899317 -0.5955968826  0.1735994962 -0.5116577603 #> [8721]  1.7516225752 -0.1348447149  0.5507301287  0.6394970546  0.3227068687 #> [8726] -0.3006428212  4.2346269347  0.1634928888  1.2539899834 -0.2423886490 #> [8731] -0.5116600530 -1.2570988257  0.2488431517  1.5147284732 -0.3034441220 #> [8736] -2.0422179328  0.3198068195 -0.9095878054  0.9742249203 -0.4922050243 #> [8741]  1.3644387820 -0.4336095843  0.3960389665  0.6347364020  1.1071587440 #> [8746] -0.2455465267  0.5759967365 -1.5537631873  1.3638205164  0.0576346576 #> [8751]  0.6117446823  0.9847001550 -1.8142832381  0.1495055754  0.8608744764 #> [8756]  0.5140344427 -1.7178062991  0.0992854807  0.3130398591 -0.7307604117 #> [8761]  0.1730221154 -1.0064146058 -0.2912628468 -0.3024401559 -1.0030370823 #> [8766]  0.5916275624  0.5509663181  0.1450898658  1.0454687338  1.2242191044 #> [8771] -0.1769189152 -0.7443535590 -0.1655671113 -1.7073758565  0.2284795951 #> [8776]  1.4123407671 -0.8382109247  0.3702177507 -0.9907939220  0.6686892372 #> [8781]  0.0766360032 -1.1610572423  0.2676942634  0.8062076214 -1.6813778515 #> [8786]  0.2524117546  0.5379187294  0.4020309905 -0.8338494505  0.4344406435 #> [8791] -1.2886995689  0.2784624977 -0.2054553712  0.8660711466  1.1449301295 #> [8796]  0.1926428499 -0.7093699137  2.3459192689  0.7327511765  1.0499597017 #> [8801]  1.2286702076 -0.6789554369 -0.8341887540  0.8829130091 -0.0887487825 #> [8806] -0.1858779147  0.6963608036 -1.1012533750  0.0438082139 -0.5492984492 #> [8811]  0.9861061200  1.1658741505 -0.5436554685 -1.2322093141 -0.4586221592 #> [8816]  0.6043215668  0.1590962964  0.8492260912 -0.0263328322  1.2980039847 #> [8821]  2.2056558632  0.7930251779 -0.3360610810 -0.0676987535  0.0201601391 #> [8826] -0.0671750713 -1.5324673450  0.3433486574  0.4146359002  2.0019236291 #> [8831] -1.3093617758 -0.9776898293  0.8417159658 -0.8095725106 -1.1911259968 #> [8836]  0.8328863277  0.9624653565  1.0696897065  0.0248683221  0.8153529736 #> [8841]  0.3055920903 -0.3420026425  1.6520441303 -0.7536591224  0.7394057312 #> [8846] -1.4578819625  0.9781969916  0.7380464857 -0.0862638384 -1.4471360832 #> [8851]  0.8930292740 -0.7544943983  0.0061012703  1.4903324376 -1.0087218177 #> [8856] -1.2007289000 -1.0868762992 -0.0817389764 -0.3923484219  1.0038580948 #> [8861] -0.2200283014 -0.0001158678 -0.4206790241  0.5843396429  0.7852227587 #> [8866] -0.9128146442 -0.7372515059  0.3499399422  0.1758490571 -0.7051780891 #> [8871]  0.9160565812 -1.3433390009 -0.4527685302 -0.2466241461 -0.4843445333 #> [8876] -1.0963836101 -0.6766142831  0.8598942941  0.0053148313  0.6955977124 #> [8881] -0.9495590178 -0.8822119565  0.0542446755 -0.0779590122  1.4578728143 #> [8886]  0.6680118924  0.4647309120 -2.8371708599  0.9411093772 -0.4570445492 #> [8891] -0.7438304261 -0.3673052170 -1.6922219573 -1.4738291171  0.0991012153 #> [8896]  0.2861410847 -1.5150304990  1.4021718884 -0.9442944412 -0.4400467070 #> [8901] -0.8203417445 -2.8678717993 -0.2064184035 -0.2599199849 -0.1526200269 #> [8906]  0.7025028961  0.6342200072 -0.1355383487 -0.2645659158 -0.7629253913 #> [8911] -0.8434620466 -0.0742670321  1.1419199696  0.2656096078  0.5090320063 #> [8916] -1.7043845001 -0.4863362885 -0.3680795892 -0.1333697221 -0.6811952474 #> [8921]  1.7697442046  0.7354059701  1.1700309712 -0.3698639369  0.0850288818 #> [8926]  1.0580106958  0.9743584404  0.6763975053  0.9273314534  0.8516653856 #> [8931]  0.7538342672 -0.0230378219 -1.5490909656 -1.5542405459 -0.4572931045 #> [8936] -0.8537079739  1.1672168797  0.6261428116  0.0904900064  0.5773025939 #> [8941] -0.8884696874  0.6410972990  0.0368885222  0.4788473159 -0.7567804169 #> [8946]  0.7449251894 -1.9901532851 -0.2167916341 -0.5160724229 -1.6623636488 #> [8951] -0.3622952525  0.2449128485 -0.8995384867 -0.3955471713  1.5458455381 #> [8956]  1.1143301402 -0.1315085812 -1.2168370520  0.2726190822 -0.2049610245 #> [8961] -1.4164860737  0.2952877278 -0.7516640489  1.7042245744  0.3392979185 #> [8966] -0.3522438053  1.8186572535 -0.1164544415  0.9218141689  1.4442455913 #> [8971]  0.7778807901 -0.1812679137 -1.7261583572  1.0756386165  0.6519775035 #> [8976]  0.3234693311 -0.5155522911  0.8016577500 -1.0155261334  0.4653931551 #> [8981]  0.3295913040  0.3059680083  0.3125497677 -0.1371642339  0.0038413896 #> [8986] -0.9277630003 -0.0876849745 -1.0670226440  1.1459801432 -1.4645584912 #> [8991] -0.8985772980  1.2008627750 -1.1104861222  1.0805097585 -0.4015753065 #> [8996] -0.1544669714 -0.9793336536  0.0443238665 -0.7627902678 -0.3662745907 #> [9001]  1.1635653291 -1.6493026779  0.5126421315  0.8385375380  0.1123808174 #> [9006]  0.9542939214 -1.0815428822 -2.2825803299 -0.9008433285 -0.6651000553 #> [9011]  0.5470999140 -2.7024486189 -0.4821834326  0.8043028166  0.2322067052 #> [9016] -0.4079367696  0.8128878117 -0.0225775671 -0.6421830695  0.1776837648 #> [9021] -2.0694698700 -0.0519822530 -1.0047303178  0.2523514496 -0.3040360990 #> [9026] -1.5463461036  0.8296102549 -1.5427594102  1.1154006176  0.5734891058 #> [9031] -1.2379381204 -0.1580311085  0.5486484748  0.8636089949  0.7185139517 #> [9036] -2.5513735766 -0.1490261834  1.2409197322 -0.3371924577  0.6361430895 #> [9041] -0.6394389183  1.5544424020  1.5781132848  1.5012470538  0.5452668414 #> [9046]  0.9446951595 -0.4663033673 -0.7973381137  0.3803143222 -0.5587817524 #> [9051]  0.0382556585  0.3436281089  0.5669809850  0.5861099007  1.9688359111 #> [9056] -0.9688330262  0.8179150512 -1.1974474067 -0.2110426433 -1.1016793572 #> [9061]  1.3267178172 -0.6306123673 -0.3835203914 -1.6425077482 -0.7638798016 #> [9066] -0.8457990514 -0.6722243577  1.2847986316 -0.6927998870  0.6279883469 #> [9071]  0.3330579068 -0.3746690386  1.3175772414 -1.3978452657 -0.4859262043 #> [9076]  0.3806093829 -0.7273351866  3.1145881315 -0.4674392266 -0.2025056764 #> [9081]  0.9097976665  0.2343548704  0.9401989286 -0.3781425475  0.4757539481 #> [9086]  0.7446047323 -1.2323668184  0.4291179190 -1.0035612617 -0.7596234659 #> [9091]  0.4009471027 -0.0373450945 -0.1646674376 -0.5743403826 -1.4834623134 #> [9096]  1.0829712584  0.3567275186 -1.4068399366 -0.0031238695  2.8395622495 #> [9101] -0.8830339839 -0.0003486912 -1.0378997792  0.7126727923  1.8683785665 #> [9106]  0.2023529074 -0.5456007247 -0.1838765513 -0.5345619361 -1.6198887286 #> [9111]  1.0479989253 -0.2174689663 -0.0338756975 -0.3934173141 -1.4611544724 #> [9116]  0.0003897078  0.3271052364 -1.6075214674 -0.1339266167  0.0796222869 #> [9121] -0.3311924051 -2.3072616031 -0.5929194473  0.2929249122 -1.8342317528 #> [9126]  2.6413779928  0.4498955567 -0.2668717433 -0.5248461006  0.5849901645 #> [9131]  1.7533742129 -0.0352693041 -1.0832606994 -0.4035179436  1.2292355204 #> [9136] -1.1413423081 -2.5338372129 -1.2969289687 -0.0091243037  0.7033869422 #> [9141] -0.0913028464 -0.3503371104  1.0724976436  0.2437620147  0.3235506760 #> [9146]  0.4787732803 -0.3730845714 -0.0951307556 -0.7167441095 -0.5283838715 #> [9151] -1.6786550223  0.3411187920  0.4180666565 -0.8828588927 -0.2409594688 #> [9156]  1.1320331633  1.8685782071 -1.1399840337 -0.6951448997  1.5596992765 #> [9161]  0.7230932596 -0.5075105762  0.2888474334  0.0568689161  1.0082277426 #> [9166]  0.9454104898  0.7144519253 -1.0373384461  0.2321137425 -0.4098129769 #> [9171]  1.4229976340 -1.1498321050 -2.0747579931 -1.7693159811 -1.3118221496 #> [9176] -0.2654433657 -0.0756753994  1.2788504341 -0.2858036700  0.6075642888 #> [9181]  0.0981580478 -1.2887107915 -0.8674882632  0.6028461515 -0.1555853233 #> [9186] -0.8432919386 -0.2073134915 -0.8611807156 -1.3661710814  1.2282393337 #> [9191]  0.0879723623  1.5723937835  0.5415387103  1.0597635273  0.0153596405 #> [9196] -1.5455769013 -1.6750748831 -0.4540707626  0.6321151509 -0.3895560248 #> [9201] -0.4875263618 -2.0126809455  1.1296332658 -0.1109234571  0.4923022440 #> [9206] -0.4097602078  0.3118507119  0.6771270246 -0.0629175474  1.3736839097 #> [9211]  0.8406377639 -0.9829711519  0.3241590271 -0.1558250630  0.4651737984 #> [9216]  0.1815989103 -0.4425562752 -0.6443123564  0.1828284007  1.7800833740 #> [9221] -0.5539377012 -0.2769419347 -0.7948290802 -1.9537999505 -0.0292680117 #> [9226]  2.8811230778 -0.0741410671  0.0907847351 -0.6705398820 -1.2356102172 #> [9231]  0.2959896124  0.7234035050 -0.8017383247  0.6853612863  0.1528704692 #> [9236] -1.8722493480 -1.1827522498 -0.5668534169  0.1921683079  0.8226822010 #> [9241] -0.1487657287 -0.5349115025 -0.2524948011  2.2827715874 -1.5483255901 #> [9246]  0.5955874556  0.1650080606 -0.2538691380  0.7505959286  0.9689326797 #> [9251] -0.8123818275 -0.4844790218 -0.8581577729 -0.9439748578 -0.4296080136 #> [9256] -0.2867628449  0.9101684670  0.2741216404 -0.5780635092  1.3272945612 #> [9261]  0.5196812509 -2.3603378148  1.1693148445 -2.7258721265  0.7693597205 #> [9266]  1.0646718259 -0.1690964097 -0.1349282957 -0.1461195262  0.6958525769 #> [9271] -0.1973825977  1.6360978469 -0.0576475948  1.1759520906 -0.1013863933 #> [9276]  1.0738005044  1.7023596825 -1.7587529043 -1.8349675763  0.5634561310 #> [9281] -0.8663758430 -1.4067206321 -0.0139753482  0.4512832069  0.7794086683 #> [9286]  2.2882837524 -0.1596647613  1.4696159129 -0.0122892138 -0.0718096208 #> [9291] -0.0578687903  0.7914028883 -1.4239208923 -0.6965479455  1.0499582581 #> [9296]  1.7068498718  0.5938841353 -0.3465543694 -0.1316566497 -0.4475867158 #> [9301] -1.2419816108 -1.0724937305  0.3671389233 -0.7156921675  1.5454947183 #> [9306]  0.2570307679  1.6248121322  2.5609551906 -0.4216179011 -0.5288645051 #> [9311] -0.1402826197  0.0615711919  0.6133717923  0.1834492574  2.2457983218 #> [9316] -0.7740240124  0.7685234550 -0.7089547674 -0.1014990328  1.3592187600 #> [9321] -0.3709599513 -1.5648071731 -0.5348590333  0.2977878222 -0.1354084704 #> [9326] -1.7603874245 -0.0039509104  0.6745173221  0.4732398527  0.5713791516 #> [9331]  1.4249309321 -1.1336280497 -0.7026726126  0.2845981098  0.9509774547 #> [9336] -0.7913320789  0.0588158303  0.7778273320  0.9555639308 -0.1911482507 #> [9341] -0.0079360757 -1.8099233921 -0.1976589320 -1.3216011361 -1.0404024898 #> [9346]  1.5994436342  1.1395033255  0.5627735125 -0.6108701791  1.0109914085 #> [9351]  0.4610903367 -0.7564088060  0.3560155056 -2.0511055387 -0.6496776619 #> [9356] -0.3533908878 -0.7256544593  0.9146924282  1.1555690418  1.4064960495 #> [9361]  0.6037494126 -0.4028725229  0.1654073081  0.4416524481 -0.5223165974 #> [9366] -0.7703112331 -0.5439229555 -1.3052913999  0.8276508073 -1.5878903561 #> [9371] -0.6779551668 -0.3740006189  0.8522769763  0.6387788615  0.7138352408 #> [9376]  1.1055992458 -1.2496807215  0.7150839064 -0.4418388259  0.7346534171 #> [9381]  0.8552009112  0.4147185696  0.5868906177  0.7473426142  1.0501395895 #> [9386]  0.6063451418  0.9409083047  0.0147655604  0.1276108871 -0.0364005585 #> [9391] -0.3842264659  0.1906613133  0.8565386679 -1.1440538998 -0.7053259040 #> [9396] -0.0740424063  1.7218722908  1.2142819202  0.2750803628  0.6179238055 #> [9401]  0.0631970514  0.3901207656 -0.5375507019  0.8807559588  0.1283289271 #> [9406]  0.0519454376 -2.0118594713 -1.1621837052  0.2557475217  0.1161106885 #> [9411] -0.0842348926 -0.2605219349 -0.7164228932 -0.0025989291 -1.2933230245 #> [9416]  0.4665619408 -0.2422557393 -1.1574590386 -0.2269217479 -1.5594240255 #> [9421] -0.6462646535 -0.1346649869 -0.3245545306  0.3143394700  2.0489183745 #> [9426]  1.8341359941  0.6513706530  0.4150025408 -0.0619189739 -2.8104380009 #> [9431]  1.2072445431  0.1409252998  0.3346500038  0.3730912023  0.1302942055 #> [9436] -0.5345175696 -0.6118956091  1.5766539989 -0.3062404982 -0.6309420958 #> [9441]  1.0451691611 -0.7666010605  1.4072161921 -0.2438747030  0.2059715017 #> [9446]  0.4449082749 -0.2124281860 -1.0434873268  1.5608430935 -2.8410088936 #> [9451] -0.8333792360 -1.2132856207 -1.1265236229 -0.0653987749 -0.4243757525 #> [9456] -1.4092346551  1.1783328427  1.7352760682  0.2214279477 -2.4357303072 #> [9461] -0.3207501216  0.2587310721  0.9591348605  1.6360235824  0.9611595892 #> [9466] -1.9988484288  0.4440686290  0.8563307150 -1.0195624404  0.6181126390 #> [9471] -0.3527485147  0.8464463066  1.5631314916  0.3478894616 -1.9550736379 #> [9476] -1.5493342132 -0.4398408657 -0.1108682422  0.2058891673  0.5307968422 #> [9481] -1.0613140554  0.8504121528 -2.7733945158  0.2177412828 -0.5412495960 #> [9486] -1.8892395325  1.0041639935  0.4247796147  0.2129053218  1.3590764408 #> [9491] -1.4249102085 -0.3419213804 -0.3377677439 -0.5021354803 -2.5822916728 #> [9496] -1.1188241774 -1.5691627974  0.1243029256 -0.3553229267 -0.2803757324 #> [9501]  0.2849460990 -0.1741037472  1.0961326619  1.1341729678  0.1606518441 #> [9506]  0.2141896004  0.6420555194  1.1769764944 -1.6124379602 -0.3396373375 #> [9511] -0.3582878231 -0.0539673914  0.3452824120 -2.8164264627 -0.6153096335 #> [9516]  0.0851604397 -0.0198213018 -0.2429891683  0.1752992674  0.5887973765 #> [9521]  1.7716951231  0.4063167892  0.0618084823  0.2585386290  0.2618613421 #> [9526]  0.3456261170  0.1432209698 -2.3137776749  0.4764621204 -0.4674535577 #> [9531]  1.4121954829 -0.2316144487 -1.2381063730  1.9624973953  0.6331536304 #> [9536] -0.4723036388  2.1725552100  0.3045832747 -0.9105645205  0.3231278145 #> [9541] -0.3298787706  1.0738693843 -1.6304450147  0.6389742116 -0.2487788986 #> [9546]  1.1731908193 -0.9245826384 -0.4511706403  0.1106832349  1.5586465195 #> [9551]  0.5292128725  0.6228137873 -0.4831150986 -0.0071735995 -0.6780606352 #> [9556] -1.6700732010  0.2652018412 -1.4738414571  1.3027977598 -0.2436282587 #> [9561] -0.3403423576 -0.5488979583 -0.4908542750 -0.4866449089 -0.3790220903 #> [9566] -1.2841570286  1.4741946022  1.3511260694  0.2057298333  1.2113714298 #> [9571]  1.3587155138 -1.9920179239  1.9474816371  0.8723598807  0.6353969536 #> [9576]  0.8012782610 -0.6482347812  0.1230715691 -0.8398427645  2.5933520994 #> [9581]  0.1311665194 -0.7068893911 -0.6425527027  1.4014097058 -0.6121189080 #> [9586]  0.0939800270 -1.0440957824  0.6043041425 -0.7012198789 -1.0051394215 #> [9591] -0.9624415921  0.8119889394  1.1092338402  1.0166538736 -0.3650432486 #> [9596] -0.1034060910 -0.7975590483  0.9540625032  1.0615687179  1.2803802602 #> [9601]  0.5985284216 -0.2995284777 -0.5308501160  0.8090687363  1.3891490419 #> [9606] -1.4238390573 -1.6034744680 -0.4402801854 -0.2715581499  0.2158586250 #> [9611] -0.6343911265 -0.4903268175 -1.0790442857  1.2281667076  0.6596924894 #> [9616] -0.6542556367 -1.0329475798  0.0219055685 -1.3588391469 -0.6571764436 #> [9621]  3.0147135489  0.3392322954 -1.0827247603  0.4044224272 -0.1790706544 #> [9626] -0.5338458410  1.0910432589 -0.2023531179 -0.4582292103 -0.8999729270 #> [9631]  0.2760213218  0.9540669612  0.2436240597 -1.8407319213  2.4537749332 #> [9636] -2.1577592131 -0.9248793908 -0.6567465445  0.7475645040 -0.9375249320 #> [9641] -0.4801360658  0.4659852115  0.8910150159 -0.2570121296  0.6163367118 #> [9646]  1.5503141361 -0.1097910709 -0.6249748409 -0.1625481748  0.3167890870 #> [9651]  1.8844800427  0.2831895719  1.0645321363  1.4601645579 -0.5307263257 #> [9656] -1.1445551466  0.6197461261  1.1623550849  0.0574007707  0.2900447775 #> [9661] -0.5895147672 -0.6439222093  0.8626763902 -1.8682579324  0.9603552708 #> [9666]  0.9765323961  1.2414585860  1.0518583287  0.3656283178 -1.0445511744 #> [9671]  0.9484296486  0.9690679629  0.8163762249 -1.1442642246 -0.0543703573 #> [9676]  1.3379943086  1.5973934242 -0.0428130827  1.2848507490  0.5437688812 #> [9681]  0.5584614702 -0.4770649895 -1.0417532933 -0.9550987501 -1.2875628801 #> [9686]  0.6216219794 -1.6619587736  0.0146509401 -1.6575982755 -0.6373914444 #> [9691]  0.8127275677  0.0511840458  1.4329459506  0.7919714508  0.7083535674 #> [9696]  0.1506076711  2.1081611596  0.0297368843  1.9513598655 -1.1887926484 #> [9701] -1.4386278694  0.1960754793  2.7361026760 -0.4216648874  1.7684463335 #> [9706] -1.2671485495 -0.0206231190  0.2594539344  0.1726178601  0.1229073820 #> [9711] -0.7772200449 -2.0684961249 -1.5507151654  0.4475669133  0.1136540501 #> [9716] -0.3351693514  1.0582141115 -0.3738509633  1.4230232968 -1.0298598447 #> [9721] -0.2541926243 -1.1233210595 -0.1372597461 -0.4902282484  0.0666884525 #> [9726]  2.3469587573  2.4445350824 -0.9271396758  0.8123960954  1.2184258546 #> [9731]  0.2068081448 -0.3038466021 -0.1482950536 -1.1530408395  0.4525471328 #> [9736] -1.6348270702 -1.1863669540  1.5017953946  0.7943361821  0.0626664654 #> [9741]  0.1738222616 -0.9821829331  0.9101571969 -1.3422654230  2.9829544751 #> [9746]  0.2587946466  0.4199402966  1.9171740502 -0.6739797249  0.3499029522 #> [9751] -0.5193536473  0.0093599025 -0.7711368797  0.3481298394  0.4932562660 #> [9756] -0.2050329031  1.9936892439  1.0616876779  1.2443340621  0.0537391293 #> [9761]  0.1092060968 -0.1004430552  0.7472017459 -2.4090904311  1.7280208716 #> [9766]  0.0774901449  1.3218365482  0.7316504644  0.0269660431 -1.2919423501 #> [9771]  0.3854008477 -0.8853268875  0.8092492430  1.0911097668 -1.7834639802 #> [9776]  1.6677958279  0.3148720345 -0.9247719518 -0.4130671350 -1.1766949626 #> [9781]  0.8611389107 -0.4664237001 -0.5267616774  0.7839656097 -0.5779989295 #> [9786]  0.7134199767 -0.6020875498  0.0271527043  0.6457623226  0.3997105393 #> [9791]  0.2708446669 -0.3145149933  0.5990152673 -0.7350690995  0.0204889971 #> [9796] -0.0364518336  0.2461231878 -0.2063841276  0.9167017129 -0.0980602772 #> [9801]  1.9961306624 -1.7002002519 -0.3384005074  0.0450400650 -0.5825207777 #> [9806]  0.3537670735 -0.9272272961 -0.1171239203  0.8496330578  0.2022696729 #> [9811] -0.8789441796 -1.0960150716  0.1799415661 -0.0311208245  0.1891422960 #> [9816]  0.3247486031 -1.5611482534  0.9462264768  0.8579024660  1.1625024327 #> [9821]  0.1868542601 -0.4729750189  0.9608264552  0.3523343665  0.7147860287 #> [9826]  0.6181514076 -1.2368340406  0.8432693280 -0.8272318664 -0.3926009651 #> [9831] -0.2985092984  0.9462719896  0.0670651704  0.1637001575 -0.0810157584 #> [9836]  1.6532742989  0.0102814582  1.3310485716 -0.3792811516  0.5080796653 #> [9841] -0.5216589683 -2.7909829267  0.5106618455  0.7912030460 -0.8576357061 #> [9846]  0.2928329538 -2.0663349623  1.0613919637  0.3116005505  1.3118268495 #> [9851] -1.9959663386  0.9666451791  0.1608652838  0.4634016959 -0.1133784213 #> [9856]  0.1323030426 -0.1080619246  1.0438716156 -1.8573697870  0.1139631797 #> [9861]  0.8812240637  0.5740820700  0.1646313544  0.1484153389 -0.7407060875 #> [9866]  0.6802100110  0.1377447210  0.2086127196 -1.7023861255  1.7862772431 #> [9871] -0.7726511302  0.2748644191  1.7957474617  1.9835938403 -0.2974780471 #> [9876]  1.2329151829 -1.0216864305 -0.4176161340  1.0505165121 -1.3775603524 #> [9881] -0.3192386252  0.3143608793  1.3045687657  0.5051285703  2.5756736021 #> [9886]  0.1638548707  0.0157465161  0.7886513993  0.9289329440 -0.4080038727 #> [9891]  0.3623462907  0.6387375274 -0.6001607600 -0.2080816077  1.1082956912 #> [9896] -0.5128211150 -1.5489347506  0.4418089486 -0.3678647966 -0.4072906473 #> [9901]  0.5004833909 -0.3027823763 -0.3619454996 -2.3816062302 -0.9001633957 #> [9906]  0.3385847424  0.2541527582 -0.4986721200  0.2708609902 -0.7167163970 #> [9911] -0.1493974391 -1.1027848004 -1.2728450485  0.9640595175  0.6679722108 #> [9916] -1.6731797161 -2.6137625295  2.4515828388 -1.0200610017  0.4430630710 #> [9921]  0.9565485522  1.5574265210  0.4346297875  0.4369574200 -0.3542565003 #> [9926] -1.8839329910 -1.4927238618 -0.0722285947 -0.1304220847 -0.3456584577 #> [9931]  1.1135536959  1.1762262841  1.5974234307  0.6403725032  0.0778998706 #> [9936] -1.7453935699 -1.7558533105 -0.5684836754 -0.7058816834 -1.2420709057 #> [9941]  0.5065963134 -0.1553957403 -0.3576574087 -0.0070794422  0.4410339309 #> [9946]  0.5732047905  0.2329857228 -0.3500656926  1.7664160686  2.6459406453 #> [9951] -0.5361998557  0.5525967108 -1.6191379638 -0.3742448519 -1.3520591431 #> [9956] -0.1402906846 -0.9572414330 -0.6695635541 -1.2054108682  1.3815938501 #> [9961]  0.8697879448  0.2438780392 -0.5306515146  1.8589687872 -0.0847484348 #> [9966]  0.0572408872 -1.3917511664  0.4463722982 -0.6184548760 -1.1669413020 #> [9971] -0.8470938956 -0.8734986231  0.5753790901 -0.0256858518 -0.2201841924 #> [9976]  0.0614081927 -0.4973395843 -0.3344816333  0.2875311209 -0.0752288233 #> [9981]  1.6441823873  1.2957788208 -0.8682650431  0.0984148362  0.4531631435 #> [9986]  0.2649274571 -0.2245901670  1.4565228529 -0.3564018841  0.8204406796 #> [9991] -0.0020111444  0.8416825761 -1.4826499493  0.5700140422  0.3019909568 #> [9996] -0.9491942643 -1.4736899214 -1.1035219618  0.3687354945 #>  #> $param #> [1] \"treatment\" #>  #> $N #> [1] 300 #>  #> $boot_iter #> [1] 9999 #>  #> $clustid #> [1] \"group_id1\" #>  #> $N_G #> group_id1  #>        40  #>  #> $sign_level #> [1] 0.05 #>  #> $call #> boottest.lm(object = lm_fit, param = \"treatment\", B = 9999, clustid = \"group_id1\") #>  #> $type #> [1] \"rademacher\" #>  #> $impose_null #> [1] TRUE #>  #> $R #> [1] 1 #>  #> $r #> [1] 0 #>  #> $engine #> [1] \"R\" #>  #> $nthreads #> [1] 1 #>  #> attr(,\"class\") #> [1] \"boottest\" plot(boot)  nobs(boot) #> [1] 300 pval(boot) #> [1] 0.00080008 confint(boot) #> [1] 0.03304323 0.11310769 generics::tidy(boot) #>              term   estimate statistic    p.value   conf.low conf.high #> 1 1*treatment = 0 0.07290769  3.709435 0.00080008 0.03304323 0.1131077"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.ivreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast wild cluster bootstrap inference for object of class lm — boottest.ivreg","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.ivreg","text":"boottest.ivreg S3 method allows fast wild cluster bootstrap inference objects class ivreg  implementing fast wild bootstrap algorithm developed Roodman et al., 2019 instrumental variable models (WRE, Davidson & McKinnon, 2010)","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.ivreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.ivreg","text":"","code":"# S3 method for ivreg boottest(   object,   clustid,   param,   B,   bootcluster = \"max\",   conf_int = TRUE,   R = NULL,   r = 0,   sign_level = 0.05,   type = \"rademacher\",   impose_null = TRUE,   p_val_type = \"two-tailed\",   tol = 1e-06,   floattype = \"Float64\",   getauxweights = FALSE,   maxmatsize = NULL,   bootstrapc = FALSE,   liml = FALSE,   fuller = NULL,   kappa = NULL,   arubin = FALSE,   ssc = boot_ssc(adj = TRUE, fixef.K = \"none\", cluster.adj = TRUE, cluster.df =     \"conventional\"),   ... )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.ivreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.ivreg","text":"object object class lm clustid character vector rhs formula containing names cluster variables param character vector rhs formula length one. name regression coefficient hypothesis tested B Integer. number bootstrap iterations. number clusters low, increasing B adds little additional runtime bootcluster character vector rhs formula length 1. Specifies bootstrap clustering variable variables. one variable specified, bootstrapping clustered intersections clustering implied listed variables. mimic behavior stata's boottest command, default cluster intersection variables specified via clustid argument, even though necessarily recommended (see paper Roodman et al cited , section 4.2). options include \"min\", bootstrapping clustered cluster variable fewest clusters. , subcluster bootstrap (MacKinnon & Webb, 2018) supported - see vignette(\"fwildclusterboot\", package = \"fwildclusterboot\") details. conf_int logical vector. TRUE, boottest computes confidence intervals test inversion. FALSE, p-value returned. R Hypothesis Vector giving linear combinations coefficients. Must either NULL vector length param. NULL, vector ones length param. r numeric. Shifts null hypothesis H0: param = r vs H1: param != r sign_level numeric 0 1 sets significance level inference procedure. E.g. sign_level = 0.05 returns 0.95% confidence intervals. default, sign_level = 0.05. type character function. character string specifies type boostrap use: One \"rademacher\", \"mammen\", \"norm\", \"gamma\" \"webb\". Alternatively, type can function(n) drawing wild bootstrap factors. \"rademacher\" default. Rademacher Mammen distribution, number replications B exceeds number possible draw ombinations, 2^(#number clusters), boottest() use possible combination (enumeration). impose_null Logical. Controls null hypothesis imposed bootstrap dgp . Null imposed (WCR) default. FALSE, null imposed (WCU) p_val_type Character vector length 1. Type p-value. default \"two-tailed\". options include \"equal-tailed\", \">\" \"<\". tol Numeric vector length 1. desired accuracy (convergence tolerance) used root finding procedure find confidence interval. Relative tolerance 1e-6 default. floattype Float64 default. option: Float32. floating point numbers Julia represented 32 64 bit? getauxweights Logical. FALSE default. Whether save auxilliary weight matrix (v) maxmatsize NULL default = limit. Else numeric scalar set maximum size auxilliary weight matrix (v), gigabytes bootstrapc Logical scalar, FALSE default. TRUE  request bootstrap-c instead bootstrap-t liml Logical scalar. False default. TRUE liml fuller liml fuller NULL default. Numeric scalar. fuller liml factor kappa Null default. fixed <U+03BA> k-class estimation arubin False default. Logical scalar. TRUE Anderson-Rubin Test. ssc object class boot_ssc.type obtained function boot_ssc(). Represents small sample adjustments computed. defaults adj = TRUE, fixef.K = \"none\", cluster.adj = \"TRUE\", cluster.df = \"conventional\". can find details help file boot_ssc(). function purposefully designed mimic fixest's fixest::ssc() function. ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.ivreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.ivreg","text":"object class boottest p_val bootstrap p-value. conf_int bootstrap confidence interval. param tested parameter. N Sample size. Might differ regression sample size cluster variables contain NA values. boot_iter Number Bootstrap Iterations. clustid Names cluster Variables. N_G Dimension cluster variables used boottest. sign_level Significance level used boottest. type Distribution bootstrap weights. impose_null Whether null imposed bootstrap dgp . R vector \"R\" null hypothesis interest Rbeta = r. r scalar \"r\" null hypothesis interest Rbeta = r. point_estimate R'beta. scalar: constraints vector times regression coefficients. grid_vals t-statistics calculated calculating confidence interval. p_grid_vals p-values calculated calculating confidence interval. t_stat 'original' regression test statistics. t_boot bootstrap t-statistics. regression regression object used boottest. call Function call boottest. engine employed bootstrap algorithm. nthreads number threads employed.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.ivreg.html","id":"setting-seeds","dir":"Reference","previous_headings":"","what":"Setting Seeds","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.ivreg","text":"guarantee reproducibility, need set global random seed via set.seed()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.ivreg.html","id":"run-boottest-quietly","dir":"Reference","previous_headings":"","what":"Run boottest quietly","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.ivreg","text":"can suppress warning error messages setting following global options: options(rlib_warning_verbosity = \"quiet\") options(rlib_message_verbosity = \"quiet\") turn warnings (messages) produced via rlang::warn() rlang::inform(), might desirable use software build rlang, e.g. tidyverse.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.ivreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.ivreg","text":"Roodman et al., 2019, \"Fast wild: Bootstrap inference STATA using boottest\", STATA Journal. (https://ideas.repec.org/p/qed/wpaper/1406.html) Cameron, . Colin, Jonah B. Gelbach, Douglas L. Miller. \"Bootstrap-based improvements inference clustered errors.\" Review Economics Statistics 90.3 (2008): 414-427. Cameron, .Colin & Douglas L. Miller. \"practitioner's guide cluster-robust inference\" Journal Human Resources (2015) doi:10.3368/jhr.50.2.317 Davidson & MacKinnon. \"Wild Bootstrap Tests IV regression\" Journal Economics Business Statistics (2010) doi:10.1198/jbes.2009.07221 MacKinnon, James G., Matthew D. Webb. \"wild bootstrap (treated) clusters.\" Econometrics Journal 21.2 (2018): 114-135. MacKinnon, James G., Matthew D. Webb. \"Cluster-robust inference: guide empirical practice\" Journal Econometrics (2022) doi:10.1016/j.jeconom.2022.04.001 MacKinnon, James. \"Wild cluster bootstrap confidence intervals.\" L'Actualite economique 91.1-2 (2015): 11-33. Webb, Matthew D. Reworking wild bootstrap based inference clustered errors. . 1315. Queen's Economics Department Working Paper, 2013.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.ivreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.ivreg","text":"","code":"if (FALSE) { requireNamespace(\"ivreg\") requireNamespace(\"fwildclusterboot\")  # drop all NA values from SchoolingReturns SchoolingReturns <- na.omit(SchoolingReturns) ivreg_fit <- ivreg(log(wage) ~ education + age +   ethnicity + smsa + south + parents14 |   nearcollege + age + ethnicity + smsa     + south + parents14, data = SchoolingReturns )  boot_ivreg <- boottest(   object = ivreg_fit,   B = 999,   param = \"education\",   clustid = \"kww\",   type = \"mammen\",   impose_null = TRUE ) summary(boot_ivreg) print(boot_ivreg) plot(boot_ivreg) nobs(boot_ivreg) pval(boot_ivreg) confint(boot_ivreg) generics::tidy(boot_ivreg) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"boottest.lm S3 method allows fast wild cluster bootstrap inference objects class lm  implementing fast wild bootstrap algorithms developed Roodman et al., 2019 MacKinnon, Nielsen & Webb (2022).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"","code":"# S3 method for lm boottest(   object,   param,   B,   clustid = NULL,   bootcluster = \"max\",   conf_int = TRUE,   R = NULL,   r = 0,   beta0 = NULL,   sign_level = 0.05,   type = \"rademacher\",   impose_null = TRUE,   bootstrap_type = \"fnw11\",   p_val_type = \"two-tailed\",   tol = 1e-06,   maxiter = 10,   sampling = \"dqrng\",   nthreads = getBoottest_nthreads(),   ssc = boot_ssc(adj = TRUE, fixef.K = \"none\", cluster.adj = TRUE, cluster.df =     \"conventional\"),   engine = getBoottest_engine(),   floattype = \"Float64\",   maxmatsize = FALSE,   bootstrapc = FALSE,   getauxweights = FALSE,   ... )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"object object class lm param character vector rhs formula. name regression coefficient(s) hypothesis tested B Integer. number bootstrap iterations. number clusters low, increasing B adds little additional runtime. clustid character vector rhs formula containing names cluster variables. NULL, heteroskedasticity-robust (HC1) wild bootstrap run. bootcluster character vector rhs formula length 1. Specifies bootstrap clustering variable variables. one variable specified, bootstrapping clustered intersections clustering implied listed variables. mimic behavior stata's boottest command, default cluster intersection variables specified via clustid argument, even though necessarily recommended (see paper Roodman et al cited , section 4.2). options include \"min\", bootstrapping clustered cluster variable fewest clusters. , subcluster bootstrap (MacKinnon & Webb, 2018) supported - see vignette(\"fwildclusterboot\", package = \"fwildclusterboot\") details. conf_int logical vector. TRUE, boottest computes confidence intervals test inversion. FALSE, p-value returned. R Hypothesis Vector giving linear combinations coefficients. Must either NULL vector length param. NULL, vector ones length param. r numeric. Shifts null hypothesis H0: param = r vs H1: param != r beta0 Deprecated function argument. Replaced function argument 'r'. sign_level numeric 0 1 sets significance level inference procedure. E.g. sign_level = 0.05 returns 0.95% confidence intervals. default, sign_level = 0.05. type character function. character string specifies type boostrap use: One \"rademacher\", \"mammen\", \"norm\" \"webb\". Alternatively, type can function(n) drawing wild bootstrap factors. \"rademacher\" default. Rademacher distribution, number replications B exceeds number possible draw ombinations, 2^(#number clusters), boottest() use possible combination (enumeration). impose_null Logical. Controls null hypothesis imposed bootstrap dgp . Null imposed (WCR) default. FALSE, null imposed (WCU) bootstrap_type Determines wild cluster bootstrap type run. Options \"fnw11\",\"11\", \"13\", \"31\" \"33\" wild cluster bootstrap \"11\" \"31\" heteroskedastic bootstrap. information, see details section. \"fnw11\" default cluster bootstrap, runs \"11\" type wild cluster bootstrap via algorithm outlined \"fast wild\" (Roodman et al (2019)). \"11\" default heteroskedastic bootstrap. p_val_type Character vector length 1. Type p-value. default \"two-tailed\". options include \"equal-tailed\", \">\" \"<\". tol Numeric vector length 1. desired accuracy (convergence tolerance) used root finding procedure find confidence interval. 1e-6 default. maxiter Integer. Maximum number iterations used root finding procedure find confidence interval. 10 default. sampling 'dqrng' 'standard'. 'dqrng', 'dqrng' package used random number generation (available). 'standard', functions 'stats' package used available. argument mostly convenience control random number generation wrapper package around fwildclusterboot, wildrwolf. recommend use fast' option. nthreads number threads. Can : ) integer lower , equal , maximum number threads; b) 0: meaning available threads used; c) number strictly 0 1 represents fraction threads use. default use 1 core. ssc object class boot_ssc.type obtained function boot_ssc(). Represents small sample adjustments computed. defaults adj = TRUE, fixef.K = \"none\", cluster.adj = \"TRUE\", cluster.df = \"conventional\". can find details help file boot_ssc(). function purposefully designed mimic fixest's fixest::ssc() function. engine Character scalar. Either \"R\", \"R-lean\" \"WildBootTests.jl\". Controls boottest() run via native R implementation WildBootTests.jl. \"R\" default implements cluster bootstrap Roodman (2019). \"WildBootTests.jl\" executes wild cluster bootstrap via WildBootTests.jl package. run, Julia WildBootTests.jl need installed. \"R-lean\" algorithm memory friendly, less performant rcpp-armadillo based implementation wild cluster bootstrap. Note cluster provided, boottest() always defaults \"lean\" algorithm. can set employed algorithm globally using setBoottest_engine() function. floattype Float64 default. option: Float32. floating point numbers Julia represented 32 64 bit? relevant 'engine= \"WildBootTests.jl\"' maxmatsize NULL default = limit. Else numeric scalar set maximum size auxilliary weight matrix (v), gigabytes. relevant 'engine= \"WildBootTests.jl\"' bootstrapc Logical scalar, FALSE default. TRUE  request bootstrap-c instead bootstrap-t. relevant 'engine = \"WildBootTests.jl\"' getauxweights Logical. Whether save auxilliary weight matrix (v) ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"object class boottest p_val bootstrap p-value. conf_int bootstrap confidence interval. param tested parameter. N Sample size. Might differ regression sample size cluster variables contain NA values. boot_iter Number Bootstrap Iterations. clustid Names cluster Variables. N_G Dimension cluster variables used boottest. sign_level Significance level used boottest. type Distribution bootstrap weights. impose_null Whether null imposed bootstrap dgp . R vector \"R\" null hypothesis interest Rbeta = r. r scalar \"r\" null hypothesis interest Rbeta = r. point_estimate R'beta. scalar: constraints vector times regression coefficients. grid_vals t-statistics calculated calculating confidence interval. p_grid_vals p-values calculated calculating confidence interval. t_stat 'original' regression test statistics. t_boot bootstrap t-statistics. regression regression object used boottest. call Function call boottest. engine employed bootstrap algorithm. nthreads number threads employed.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"setting-seeds","dir":"Reference","previous_headings":"","what":"Setting Seeds","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"guarantee reproducibility, need set global random seed via set.seed() using lean algorithm (via engine = \"R-lean\") including heteroskedastic wild bootstrap wild cluster bootstrap via engine = \"R\" Mammen weights engine = \"WildBootTests.jl\" dqrng::dqset.seed() using engine = \"R\" Rademacher, Webb Normal weights Via engine function argument, possible specify different variants wild cluster bootstrap, algorithm run via R WildBootTests.jl.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"confidence-intervals","dir":"Reference","previous_headings":"","what":"Confidence Intervals","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"boottest computes confidence intervals inverting p-values. practice, following procedure used: Based initial guess starting values, calculate p-values 26 equal spaced points starting values. 26 calculated p-values, find two pairs values x corresponding p-values px cross significance level sign_level. Feed two pairs x numerical root finding procedure solve root. boottest currently relies stats::uniroot sets absolute tolerance 1e-06 stops procedure 10 iterations.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"standard-errors","dir":"Reference","previous_headings":"","what":"Standard Errors","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"boottest calculate standard errors.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"run-boottest-quietly","dir":"Reference","previous_headings":"","what":"Run boottest quietly","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"can suppress warning error messages setting following global options: options(rlib_warning_verbosity = \"quiet\") options(rlib_message_verbosity = \"quiet\") turn warnings (messages) produced via rlang::warn() rlang::inform(), might desirable use software build rlang, e.g. tidyverse.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"stata-julia-and-python-implementations","dir":"Reference","previous_headings":"","what":"Stata, Julia and Python Implementations","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"fast wild cluster bootstrap algorithms implemented following software packages: Stata:boottest Julia:WildBootTests.jl Python:wildboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"Roodman et al., 2019, \"Fast wild: Bootstrap inference STATA using boottest\", STATA Journal. (https://ideas.repec.org/p/qed/wpaper/1406.html) MacKinnon, James G., Morten Ørregaard Nielsen, Matthew D. Webb. Fast reliable jackknife bootstrap methods cluster-robust inference. . 1485. 2022. Cameron, . Colin, Jonah B. Gelbach, Douglas L. Miller. \"Bootstrap-based improvements inference clustered errors.\" Review Economics Statistics 90.3 (2008): 414-427. Cameron, .Colin & Douglas L. Miller. \"practitioner's guide cluster-robust inference\" Journal Human Resources (2015) doi:10.3368/jhr.50.2.317 Davidson & MacKinnon. \"Wild Bootstrap Tests IV regression\" Journal Economics Business Statistics (2010) doi:10.1198/jbes.2009.07221 MacKinnon, James G., Matthew D. Webb. \"wild bootstrap (treated) clusters.\" Econometrics Journal 21.2 (2018): 114-135. MacKinnon, James G., Matthew D. Webb. \"Cluster-robust inference: guide empirical practice\" Journal Econometrics (2022) doi:10.1016/j.jeconom.2022.04.001 MacKinnon, James. \"Wild cluster bootstrap confidence intervals.\" L'Actualite economique 91.1-2 (2015): 11-33. Webb, Matthew D. Reworking wild bootstrap based inference clustered errors. . 1315. Queen's Economics Department Working Paper, 2013.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boottest.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast wild cluster bootstrap inference for object of class lm — boottest.lm","text":"","code":"if (FALSE) { requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm(proposition_vote ~ treatment + ideology1 + log_income +   Q1_immigration, data = voters ) boot1 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) boot2 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = c(\"group_id1\", \"group_id2\") ) boot3 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = c(\"group_id1\", \"group_id2\"),   sign_level = 0.2,   r = 2 ) # test treatment + ideology1 = 2 boot4 <- boottest(lm_fit,   B = 9999,   clustid = c(\"group_id1\", \"group_id2\"),   param = c(\"treatment\", \"ideology1\"),   R = c(1, 1),   r = 2 ) summary(boot1) print(boot1) plot(boot1) nobs(boot1) pval(boot1) confint(boot1) generics::tidy(boot1)  # run different bootstrap types following MacKinnon, Nielsen & Webb (2022):  # default: the fnw algorithm boot_fnw11 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\",   bootstrap_type = \"fnw11\" )  # WCR 31 boot_WCR31 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\",   bootstrap_type = \"31\" )  # WCU33 boot_WCR31 <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\",   bootstrap_type = \"33\",   impose_null = FALSE )  }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple tool that aggregates the value of CATT coefficients in\r\nstaggered difference-in-difference setups with inference based on\r\na wild cluster bootstrap (see details) - similar to fixest::aggregate() — boot_aggregate","title":"Simple tool that aggregates the value of CATT coefficients in\r\nstaggered difference-in-difference setups with inference based on\r\na wild cluster bootstrap (see details) - similar to fixest::aggregate() — boot_aggregate","text":"function helping replicate estimator Sun Abraham (2021, Journal Econometrics). first need perform estimation cohort relative periods dummies (typically using function ), leads estimators cohort average treatment effect treated (CATT). can use function retrieve average treatment effect relative period,way wish aggregate CATT.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple tool that aggregates the value of CATT coefficients in\r\nstaggered difference-in-difference setups with inference based on\r\na wild cluster bootstrap (see details) - similar to fixest::aggregate() — boot_aggregate","text":"","code":"boot_aggregate(   x,   agg,   full = FALSE,   use_weights = TRUE,   clustid = NULL,   B,   bootstrap_type = \"fnw11\",   bootcluster = \"max\",   fe = NULL,   sign_level = 0.05,   beta0 = NULL,   type = \"rademacher\",   impose_null = TRUE,   p_val_type = \"two-tailed\",   nthreads = getBoottest_nthreads(),   tol = 1e-06,   maxiter = 10,   ssc = boot_ssc(adj = TRUE, fixef.K = \"none\", cluster.adj = TRUE, cluster.df =     \"conventional\"),   engine = getBoottest_engine(),   floattype = \"Float64\",   maxmatsize = FALSE,   bootstrapc = FALSE,   getauxweights = FALSE,   sampling = \"dqrng\",   ... )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple tool that aggregates the value of CATT coefficients in\r\nstaggered difference-in-difference setups with inference based on\r\na wild cluster bootstrap (see details) - similar to fixest::aggregate() — boot_aggregate","text":"x object type fixest estimated using sunab() agg character scalar describing variable names aggregated, pattern-based. variables match pattern aggregated. must form \"(root)\", parentheses must resulting variable name \"root\". can add another root parentheses: \"(root1)regex(root2)\", case resulting name \"root1::root2\". name resulting variable differently can pass named vector: c(\"name\" = \"pattern\") c(\"name\" = \"pattern(root2)\"). bit intricate sorry, please see examples. full Logical scalar, defaults FALSE. TRUE, coefficients returned, aggregated coefficients. use_weights Logical, default TRUE. estimation weighted, whether aggregation take account weights. Basically weights reflected frequency TRUE. clustid character vector rhs formula containing names cluster variables. NULL, heteroskedasticity-robust (HC1) wild bootstrap run. B Integer. number bootstrap iterations. number clusters low, increasing B adds little additional runtime. bootstrap_type Determines wild cluster bootstrap type run. Options \"fnw11\", runs \"11\" type wild cluster bootstrap via algorithm outlined \"fast wild\" (Roodman et al (2019)). bootcluster character vector rhs formula length 1. Specifies bootstrap clustering variable variables. one variable specified, bootstrapping clustered intersections clustering implied listed variables. mimic behavior stata's boottest command, default cluster intersection variables specified via clustid argument, even though necessarily recommended (see paper Roodman et al cited , section 4.2). options include \"min\", bootstrapping clustered cluster variable fewest clusters. , subcluster bootstrap (MacKinnon & Webb, 2018) supported - see vignette(\"fwildclusterboot\", package = \"fwildclusterboot\") details. fe character vector rhs formula length one contains name fixed effect projected bootstrap. Note: regression weights used, fe needs NULL. sign_level numeric 0 1 sets significance level inference procedure. E.g. sign_level = 0.05 returns 0.95% confidence intervals. default, sign_level = 0.05. beta0 Deprecated function argument. Replaced function argument 'r'. type character function. character string specifies type boostrap use: One \"rademacher\", \"mammen\", \"norm\" \"webb\". Alternatively, type can function(n) drawing wild bootstrap factors. \"rademacher\" default. Rademacher distribution, number replications B exceeds number possible draw ombinations, 2^(#number clusters), boottest() use possible combination (enumeration). impose_null Logical. Controls null hypothesis imposed bootstrap dgp . Null imposed (WCR) default. FALSE, null imposed (WCU) p_val_type Character vector length 1. Type p-value. default \"two-tailed\". options include \"equal-tailed\", \">\" \"<\". nthreads number threads. Can : ) integer lower , equal , maximum number threads; b) 0: meaning available threads used; c) number strictly 0 1 represents fraction threads use. default use 1 core. tol Numeric vector length 1. desired accuracy (convergence tolerance) used root finding procedure find confidence interval. 1e-6 default. maxiter Integer. Maximum number iterations used root finding procedure find confidence interval. 10 default. ssc object class boot_ssc.type obtained function boot_ssc(). Represents small sample adjustments computed. defaults adj = TRUE, fixef.K = \"none\", cluster.adj = \"TRUE\", cluster.df = \"conventional\". can find details help file boot_ssc(). function purposefully designed mimic fixest's fixest::ssc() function. engine Character scalar. Either \"R\", \"R-lean\" \"WildBootTests.jl\". Controls boottest() run via native R implementation WildBootTests.jl. \"R\" default implements cluster bootstrap Roodman (2019). \"WildBootTests.jl\" executes wild cluster bootstrap via WildBootTests.jl package. run, Julia WildBootTests.jl need installed. \"R-lean\" algorithm memory friendly, less performant rcpp-armadillo based implementation wild cluster bootstrap. Note cluster provided, boottest() always defaults \"lean\" algorithm. can set employed algorithm globally using setBoottest_engine() function. floattype Float64 default. option: Float32. floating point numbers Julia represented 32 64 bit? relevant 'engine = \"WildBootTests.jl\"' maxmatsize NULL default = limit. Else numeric scalar set maximum size auxilliary weight matrix (v), gigabytes. relevant 'engine = \"WildBootTests.jl\"' bootstrapc Logical scalar, FALSE default. TRUE  request bootstrap-c instead bootstrap-t. relevant 'engine = \"WildBootTests.jl\"' getauxweights Logical. Whether save auxilliary weight matrix (v) sampling 'dqrng' 'standard'. 'dqrng', 'dqrng' package used random number generation (available). 'standard', functions 'stats' package used available. argument mostly convenience control random number generation wrapper package around fwildclusterboot, wildrwolf. recommend use fast' option. ... misc function arguments","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple tool that aggregates the value of CATT coefficients in\r\nstaggered difference-in-difference setups with inference based on\r\na wild cluster bootstrap (see details) - similar to fixest::aggregate() — boot_aggregate","text":"data frame aggregated coefficients, p-values confidence intervals.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_aggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple tool that aggregates the value of CATT coefficients in\r\nstaggered difference-in-difference setups with inference based on\r\na wild cluster bootstrap (see details) - similar to fixest::aggregate() — boot_aggregate","text":"Note contrary SA article, cohort share sample considered perfect measure cohort share population. function written Laurent Bergé used fixest package published GPL-3, https://cran.r-project.org/web/packages/fixest/index.html minor changes Alexander Fischer","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple tool that aggregates the value of CATT coefficients in\r\nstaggered difference-in-difference setups with inference based on\r\na wild cluster bootstrap (see details) - similar to fixest::aggregate() — boot_aggregate","text":"","code":"if (FALSE) { if(requireNamespace(\"fixest\")){ library(fixest) data(base_stagg) # The DiD estimation res_sunab = feols(y ~ x1 + sunab(year_treated, year) | id + year, base_stagg) res_sunab_3ref = feols(y ~ x1 + sunab(  year_treated, year, ref.p = c(.F + 0:2, -1)) |                         id + year,                        cluster = \"id\",                       base_stagg,                        ssc = ssc(adj = FALSE, cluster.adj = FALSE))  aggregate(res_sunab, agg = \"ATT\") # test ATT equivalence boot_att <-   boot_aggregate(    res_sunab,     B = 9999,     agg = \"ATT\",     clustid = \"id\"   ) head(boot_att)  #'boot_agg2 <-   boot_aggregate(    res_sunab,     B = 99999,     agg = TRUE,    ssc = boot_ssc(adj = FALSE, cluster.adj = FALSE)  )  } }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_ssc.html","id":null,"dir":"Reference","previous_headings":"","what":"set the small sample correction factor applied in boottest() — boot_ssc","title":"set the small sample correction factor applied in boottest() — boot_ssc","text":"set small sample correction factor applied boottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_ssc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the small sample correction factor applied in boottest() — boot_ssc","text":"","code":"boot_ssc(   adj = TRUE,   fixef.K = \"none\",   cluster.adj = TRUE,   cluster.df = \"conventional\" )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_ssc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the small sample correction factor applied in boottest() — boot_ssc","text":"adj Logical scalar, defaults TRUE. TRUE, applies small sample correction (N-1) / (N-k) N number observations k number estimated coefficients excluding fixed effects projected either fixest::feols() lfe::felm(). fixef.K Character scalar, equal 'none': fixed effects parameters discarded calculating k (N-1) / (N-k). cluster.adj Logical scalar, defaults TRUE. TRUE, cluster correction G/(G-1) performed, G number clusters. cluster.df Either \"conventional\"(default) \"min\". Controls \"G\" computed multiway clustering cluster.adj = TRUE. Note covariance matrix multiway clustering case form V = V_1 + V_2 - V_12. \"conventional\", summand G_i multiplied small sample adjustment G_i / (G_i - 1). \"min\", summands multiplied value, min(G) / (min(G) - 1)","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_ssc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set the small sample correction factor applied in boottest() — boot_ssc","text":"list encoded info form small sample corrections","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/boot_ssc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"set the small sample correction factor applied in boottest() — boot_ssc","text":"","code":"boot_ssc(adj = TRUE, cluster.adj = TRUE) #> $adj #> [1] TRUE #>  #> $fixef.K #> [1] \"none\" #>  #> $cluster.adj #> [1] TRUE #>  #> $cluster.df #> [1] \"conventional\" #>  #> attr(,\"class\") #> [1] \"boot_ssc.type\" boot_ssc(adj = TRUE, cluster.adj = TRUE, cluster.df = \"min\") #> $adj #> [1] TRUE #>  #> $fixef.K #> [1] \"none\" #>  #> $cluster.adj #> [1] TRUE #>  #> $cluster.df #> [1] \"min\" #>  #> attr(,\"class\") #> [1] \"boot_ssc.type\""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/confint.boottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to obtain wild cluster bootstrapped confidence intervals — confint.boottest","title":"S3 method to obtain wild cluster bootstrapped confidence intervals — confint.boottest","text":"S3 method obtain wild cluster bootstrapped confidence intervals","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/confint.boottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to obtain wild cluster bootstrapped confidence intervals — confint.boottest","text":"","code":"# S3 method for boottest confint(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/confint.boottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to obtain wild cluster bootstrapped confidence intervals — confint.boottest","text":"object object type boottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/confint.boottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to obtain wild cluster bootstrapped confidence intervals — confint.boottest","text":"vector containing boundaries wild cluster bootstrapped confidence interval","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/confint.boottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to obtain wild cluster bootstrapped confidence intervals — confint.boottest","text":"","code":"requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm(   proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) teststat(boot) #> [1] 3.709435"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/find_proglang.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if julia or python are installed /\r\ncan be found on the PATH. — find_proglang","title":"Check if julia or python are installed /\r\ncan be found on the PATH. — find_proglang","text":"Based Mauro Lepore's great suggestion https://github.com/ropensci/software-review/issues/546#issuecomment-1416728843","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/find_proglang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if julia or python are installed /\r\ncan be found on the PATH. — find_proglang","text":"","code":"find_proglang(lang)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/find_proglang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if julia or python are installed /\r\ncan be found on the PATH. — find_proglang","text":"lang language check. Either 'julia' 'python'","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/find_proglang.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if julia or python are installed /\r\ncan be found on the PATH. — find_proglang","text":"logical. TRUE lang found path, FALSE ","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/find_proglang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if julia or python are installed /\r\ncan be found on the PATH. — find_proglang","text":"","code":"if (FALSE) { find_proglang(lang = \"julia\") }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.boottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to glance at objects of class boottest — glance.boottest","title":"S3 method to glance at objects of class boottest — glance.boottest","text":"S3 method glance objects class boottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.boottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to glance at objects of class boottest — glance.boottest","text":"","code":"# S3 method for boottest glance(x, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.boottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to glance at objects of class boottest — glance.boottest","text":"x object type boottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.boottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to glance at objects of class boottest — glance.boottest","text":"single row summary \"glance\" object type boottest - lists characteristics input regression model","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.boottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to glance at objects of class boottest — glance.boottest","text":"","code":"if (FALSE) { requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm( proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) generics::glance(boot) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.mboottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to glance at objects of class boottest — glance.mboottest","title":"S3 method to glance at objects of class boottest — glance.mboottest","text":"S3 method glance objects class boottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.mboottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to glance at objects of class boottest — glance.mboottest","text":"","code":"# S3 method for mboottest glance(x, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.mboottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to glance at objects of class boottest — glance.mboottest","text":"x object type mboottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.mboottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to glance at objects of class boottest — glance.mboottest","text":"single row summary \"glance\" object type boottest - lists characteristics input regression model","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/glance.mboottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to glance at objects of class boottest — glance.mboottest","text":"","code":"if (FALSE) { requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm( proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) mboot <- mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R ) generics::glance(mboot) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.felm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","title":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","text":"mboottest.felm S3 method allows fast wild cluster bootstrap inference multivariate hypotheses objects class felm implementing fast wild bootstrap algorithm developed Roodman et al., 2019.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.felm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","text":"","code":"# S3 method for felm mboottest(   object,   clustid,   B,   R,   r = rep(0, nrow(R)),   bootcluster = \"max\",   fe = NULL,   type = \"rademacher\",   impose_null = TRUE,   p_val_type = \"two-tailed\",   tol = 1e-06,   floattype = \"Float64\",   getauxweights = FALSE,   maxmatsize = NULL,   bootstrapc = FALSE,   ssc = boot_ssc(adj = TRUE, fixef.K = \"none\", cluster.adj = TRUE, cluster.df =     \"conventional\"),   ... )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.felm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","text":"object object class felm clustid character vector rhs formula containing names cluster variables B Integer. number bootstrap iterations. number clusters low, increasing B adds little additional runtime. R Hypothesis Vector Matrix giving linear combinations coefficients. Must either vector length k matrix dimension q x k, q number joint hypotheses k number estimated coefficients. r vector length q, q number tested hypotheses. Shifts null hypothesis H0: param = r vs H1: param != r. provided, vector zeros length q. bootcluster character vector rhs formula length 1. Specifies bootstrap clustering variable variables. one variable specified, bootstrapping clustered intersections clustering implied listed variables. mimic behavior stata's boottest command, default cluster intersection variables specified via clustid argument, even though necessarily recommended (see paper Roodman et al cited , section 4.2). options include \"min\", bootstrapping clustered cluster variable fewest clusters. , subcluster bootstrap (MacKinnon & Webb, 2018) supported - see vignette(\"fwildclusterboot\", package = \"fwildclusterboot\") details. fe character vector rhs formula length one contains name fixed effect projected bootstrap. Note: regression weights used, fe needs NULL. type character function. character string specifies type boostrap use: One \"rademacher\", \"mammen\", \"norm\", \"gamma\" \"webb\". Alternatively, type can function(n) drawing wild bootstrap factors. \"rademacher\" default. Rademacher Mammen distribution, number replications B exceeds number possible draw ombinations, 2^(#number clusters), boottest() use possible combination (enumeration). impose_null Logical. Controls null hypothesis imposed bootstrap dgp . Null imposed (WCR) default. FALSE, null imposed (WCU) p_val_type Character vector length 1. Type p-value. default \"two-tailed\". options include \"equal-tailed\", \">\" \"<\". tol Numeric vector length 1. desired accuracy (convergence tolerance) used root finding procedure find confidence interval. Relative tolerance 1e-6 default. floattype Float64 default. option: Float32. floating point numbers Julia represented 32 64 bit? getauxweights Logical. FALSE default. Whether save auxilliary weight matrix (v) maxmatsize NULL default = limit. Else numeric scalar set maximum size auxilliary weight matrix (v), gigabytes bootstrapc Logical scalar, FALSE default. TRUE  request bootstrap-c instead bootstrap-t ssc object class boot_ssc.type obtained function boot_ssc(). Represents small sample adjustments computed. defaults adj = TRUE, fixef.K = \"none\", cluster.adj = \"TRUE\", cluster.df = \"conventional\". can find details help file boot_ssc(). function purposefully designed mimic fixest's fixest::ssc() function. ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.felm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","text":"object class mboottest p_val bootstrap p-value. N Sample size. Might differ regression sample size cluster variables contain NA values. boot_iter Number Bootstrap Iterations. clustid Names cluster Variables. N_G Dimension cluster variables used boottest. sign_level Significance level used boottest. type Distribution bootstrap weights. impose_null Whether null imposed bootstrap dgp . R vector \"R\" null hypothesis interest Rbeta = r. r scalar \"r\" null hypothesis interest Rbeta = r. point_estimate R'beta. scalar: constraints vector times regression coefficients. teststat_stat 'original' regression test statistics. teststat_boot bootstrap t-statistics. regression regression object used boottest. call Function call boottest.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.felm.html","id":"setting-seeds","dir":"Reference","previous_headings":"","what":"Setting Seeds","title":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","text":"guarantee reproducibility, need set global random seed via set.seed() using","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.felm.html","id":"multiple-fixed-effects","dir":"Reference","previous_headings":"","what":"Multiple Fixed Effects","title":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","text":"felm() model contains fixed effects, boottest() internally convert fixed effects one specified via fe argument dummy variables.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.felm.html","id":"run-boottest-quietly","dir":"Reference","previous_headings":"","what":"Run boottest quietly","title":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","text":"can suppress warning error messages setting following global options: options(rlib_warning_verbosity = \"quiet\") options(rlib_message_verbosity = \"quiet\") turn warnings (messages) produced via rlang::warn() rlang::inform(), might desirable use software build rlang, e.g. tidyverse.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.felm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","text":"Roodman et al., 2019, \"Fast wild: Bootstrap inference STATA using boottest\", STATA Journal. (https://ideas.repec.org/p/qed/wpaper/1406.html) Cameron, . Colin, Jonah B. Gelbach, Douglas L. Miller. \"Bootstrap-based improvements inference clustered errors.\" Review Economics Statistics 90.3 (2008): 414-427. Cameron, .Colin & Douglas L. Miller. \"practitioner's guide cluster-robust inference\" Journal Human Resources (2015) doi:10.3368/jhr.50.2.317 Davidson & MacKinnon. \"Wild Bootstrap Tests IV regression\" Journal Economics Business Statistics (2010) doi:10.1198/jbes.2009.07221 MacKinnon, James G., Matthew D. Webb. \"wild bootstrap (treated) clusters.\" Econometrics Journal 21.2 (2018): 114-135. MacKinnon, James G., Matthew D. Webb. \"Cluster-robust inference: guide empirical practice\" Journal Econometrics (2022) doi:10.1016/j.jeconom.2022.04.001 MacKinnon, James. \"Wild cluster bootstrap confidence intervals.\" L'Actualite economique 91.1-2 (2015): 11-33. Webb, Matthew D. \"Reworking wild bootstrap based inference clustered errors\" . . 1315. Queen's Economics Department Working Paper, 2013.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.felm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast wild cluster bootstrap inference for joint hypotheses for object of\r\nclass felm — mboottest.felm","text":"","code":"if (FALSE) { requireNamespace(\"lfe\") requireNamespace(\"clubSandwich\") R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-   mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R   ) summary(wboottest) print(wboottest) nobs(wboottest) pval(wboottest) generics::tidy(wboottest) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.fixest.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","title":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","text":"mboottest.fixest S3 method allows fast wild cluster bootstrap inference multivariate hypotheses objects class fixest implementing fast wild bootstrap algorithm developed Roodman et al., 2019.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.fixest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","text":"","code":"# S3 method for fixest mboottest(   object,   clustid,   B,   R,   r = rep(0, nrow(R)),   bootcluster = \"max\",   fe = NULL,   type = \"rademacher\",   impose_null = TRUE,   p_val_type = \"two-tailed\",   tol = 1e-06,   floattype = \"Float64\",   getauxweights = FALSE,   maxmatsize = NULL,   bootstrapc = FALSE,   ssc = boot_ssc(adj = TRUE, fixef.K = \"none\", cluster.adj = TRUE, cluster.df =     \"conventional\"),   ... )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.fixest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","text":"object object class feols clustid character vector rhs formula containing names cluster variables B Integer. number bootstrap iterations. number clusters low, increasing B adds little additional runtime. R Hypothesis Vector Matrix giving linear combinations coefficients. Must either vector length k matrix dimension q x k, q number joint hypotheses k number estimated coefficients. r vector length q, q number tested hypotheses. Shifts null hypothesis H0: param = r vs H1: param != r. provided, vector zeros length q. bootcluster character vector rhs formula length 1. Specifies bootstrap clustering variable variables. one variable specified, bootstrapping clustered intersections clustering implied listed variables. mimic behavior stata's boottest command, default cluster intersection variables specified via clustid argument, even though necessarily recommended (see paper Roodman et al cited , section 4.2). options include \"min\", bootstrapping clustered cluster variable fewest clusters. , subcluster bootstrap (MacKinnon & Webb, 2018) supported - see vignette(\"fwildclusterboot\", package = \"fwildclusterboot\") details. fe character vector rhs formula length one contains name fixed effect projected bootstrap. Note: regression weights used, fe needs NULL. type character function. character string specifies type boostrap use: One \"rademacher\", \"mammen\", \"norm\", \"gamma\" \"webb\". Alternatively, type can function(n) drawing wild bootstrap factors. \"rademacher\" default. Rademacher Mammen distribution, number replications B exceeds number possible draw ombinations, 2^(#number clusters), boottest() use possible combination (enumeration). impose_null Logical. Controls null hypothesis imposed bootstrap dgp . Null imposed (WCR) default. FALSE, null imposed (WCU) p_val_type Character vector length 1. Type p-value. default \"two-tailed\". options include \"equal-tailed\", \">\" \"<\". tol Numeric vector length 1. desired accuracy (convergence tolerance) used root finding procedure find confidence interval. Relative tolerance 1e-6 default. floattype Float64 default. option: Float32. floating point numbers Julia represented 32 64 bit? getauxweights Logical. FALSE default. Whether save auxilliary weight matrix (v) maxmatsize NULL default = limit. Else numeric scalar set maximum size auxilliary weight matrix (v), gigabytes bootstrapc Logical scalar, FALSE default. TRUE  request bootstrap-c instead bootstrap-t ssc object class boot_ssc.type obtained function boot_ssc(). Represents small sample adjustments computed. defaults adj = TRUE, fixef.K = \"none\", cluster.adj = \"TRUE\", cluster.df = \"conventional\". can find details help file boot_ssc(). function purposefully designed mimic fixest's fixest::ssc() function. ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.fixest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","text":"object class mboottest p_val bootstrap p-value. N Sample size. Might differ regression sample size cluster variables contain NA values. boot_iter Number Bootstrap Iterations. clustid Names cluster Variables. N_G Dimension cluster variables used boottest. sign_level Significance level used boottest. type Distribution bootstrap weights. impose_null Whether null imposed bootstrap dgp . R vector \"R\" null hypothesis interest Rbeta = r. r scalar \"r\" null hypothesis interest Rbeta = r. point_estimate R'beta. scalar: constraints vector times regression coefficients. teststat_stat 'original' regression test statistics. teststat_boot bootstrap t-statistics. regression regression object used boottest. call Function call boottest.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.fixest.html","id":"setting-seeds","dir":"Reference","previous_headings":"","what":"Setting Seeds","title":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","text":"guarantee reproducibility, need set global random seed viaset.seed()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.fixest.html","id":"multiple-fixed-effects","dir":"Reference","previous_headings":"","what":"Multiple Fixed Effects","title":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","text":"feols() model contains fixed effects, boottest() internally convert fixed effects one specified via fe argument dummy variables.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.fixest.html","id":"run-boottest-quietly","dir":"Reference","previous_headings":"","what":"Run boottest quietly","title":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","text":"can suppress warning error messages setting following global options: options(rlib_warning_verbosity = \"quiet\") options(rlib_message_verbosity = \"quiet\") turn warnings (messages) produced via rlang::warn() rlang::inform(), might desirable use software build rlang, e.g. tidyverse.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.fixest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","text":"Roodman et al., 2019, \"Fast wild: Bootstrap inference STATA using boottest\", STATA Journal. (https://ideas.repec.org/p/qed/wpaper/1406.html) Cameron, . Colin, Jonah B. Gelbach, Douglas L. Miller. \"Bootstrap-based improvements inference clustered errors.\" Review Economics Statistics 90.3 (2008): 414-427. Cameron, .Colin & Douglas L. Miller. \"practitioner's guide cluster-robust inference\" Journal Human Resources (2015) doi:10.3368/jhr.50.2.317 Davidson & MacKinnon. \"Wild Bootstrap Tests IV regression\" Journal Economics Business Statistics (2010) doi:10.1198/jbes.2009.07221 MacKinnon, James G., Matthew D. Webb. \"wild bootstrap (treated) clusters.\" Econometrics Journal 21.2 (2018): 114-135. MacKinnon, James G., Matthew D. Webb. \"Cluster-robust inference: guide empirical practice\" Journal Econometrics (2022) doi:10.1016/j.jeconom.2022.04.001 MacKinnon, James. \"Wild cluster bootstrap confidence intervals.\" L'Actualite economique 91.1-2 (2015): 11-33. Webb, Matthew D. \"Reworking wild bootstrap based inference clustered errors\" . . 1315. Queen's Economics Department Working Paper, 2013.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.fixest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast wild cluster bootstrap inference for joint hypotheses for object\r\nof class fixest — mboottest.fixest","text":"","code":"if (FALSE) { requireNamespace(\"fwildclusterboot\") requireNamespace(\"clubSandwich\") R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-   mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R   ) summary(wboottest) print(wboottest) nobs(wboottest) pval(wboottest) generics::tidy(wboottest) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.html","id":null,"dir":"Reference","previous_headings":"","what":"Arbitrary Linear Hypothesis Testing for Regression Models via Wald-Tests — mboottest","title":"Arbitrary Linear Hypothesis Testing for Regression Models via Wald-Tests — mboottest","text":"mboottest S3 method allows arbitrary linear hypothesis testing objects class lm, fixest, felm","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arbitrary Linear Hypothesis Testing for Regression Models via Wald-Tests — mboottest","text":"","code":"mboottest(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arbitrary Linear Hypothesis Testing for Regression Models via Wald-Tests — mboottest","text":"object object type lm, fixest felm ... arguments","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arbitrary Linear Hypothesis Testing for Regression Models via Wald-Tests — mboottest","text":"object class mboottest.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.html","id":"setting-seeds","dir":"Reference","previous_headings":"","what":"Setting Seeds","title":"Arbitrary Linear Hypothesis Testing for Regression Models via Wald-Tests — mboottest","text":"guarantee reproducibility, can either use boottest()'s seed function argument, set global random seed via set.seed() using lean algorithm (via engine = \"R-lean\"), heteroskedastic wild bootstrap wild cluster bootstrap via engine = \"R\" Mammen weights engine = \"WildBootTests.jl\" dqrng::dqset.seed() using engine = \"R\" Rademacher, Webb Normal weights","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Arbitrary Linear Hypothesis Testing for Regression Models via Wald-Tests — mboottest","text":"Roodman et al., 2019, \"Fast wild: Bootstrap inference STATA using boottest\", STATA Journal. (https://ideas.repec.org/p/qed/wpaper/1406.html) Cameron, . Colin, Jonah B. Gelbach, Douglas L. Miller. \"Bootstrap-based improvements inference clustered errors.\" Review Economics Statistics 90.3 (2008): 414-427. Cameron, .Colin & Douglas L. Miller. \"practitioner's guide cluster-robust inference\" Journal Human Resources (2015) doi:10.3368/jhr.50.2.317 Davidson & MacKinnon. \"Wild Bootstrap Tests IV regression\" Journal Economics Business Statistics (2010) doi:10.1198/jbes.2009.07221 MacKinnon, James G., Matthew D. Webb. \"wild bootstrap (treated) clusters.\" Econometrics Journal 21.2 (2018): 114-135. MacKinnon, James G., Matthew D. Webb. \"Cluster-robust inference: guide empirical practice\" Journal Econometrics (2022) doi:10.1016/j.jeconom.2022.04.001 MacKinnon, James. \"Wild cluster bootstrap confidence intervals.\" L'Actualite economique 91.1-2 (2015): 11-33. Webb, Matthew D. \"Reworking wild bootstrap based inference clustered errors\" . . 1315. Queen's Economics Department Working Paper, 2013.","code":""},{"path":[]},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arbitrary Linear Hypothesis Testing for Regression Models via Wald-Tests — mboottest","text":"","code":"if (FALSE) { requireNamespace(\"clubSandwich\") R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-   mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R   ) summary(wboottest) print(wboottest) nobs(wboottest) pval(wboottest) generics::tidy(wboottest) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast wild cluster bootstrap inference of joint hypotheses for object of\r\nclass lm — mboottest.lm","title":"Fast wild cluster bootstrap inference of joint hypotheses for object of\r\nclass lm — mboottest.lm","text":"mboottest.lm S3 method allows fast wild cluster bootstrap inference multivariate hypotheses objects class lm implementing fast wild bootstrap algorithm developed Roodman et al., 2019.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast wild cluster bootstrap inference of joint hypotheses for object of\r\nclass lm — mboottest.lm","text":"","code":"# S3 method for lm mboottest(   object,   clustid,   B,   R,   r = rep(0, nrow(R)),   bootcluster = \"max\",   type = \"rademacher\",   impose_null = TRUE,   p_val_type = \"two-tailed\",   tol = 1e-06,   floattype = \"Float64\",   getauxweights = FALSE,   maxmatsize = NULL,   bootstrapc = FALSE,   ssc = boot_ssc(adj = TRUE, fixef.K = \"none\", cluster.adj = TRUE, cluster.df =     \"conventional\"),   ... )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast wild cluster bootstrap inference of joint hypotheses for object of\r\nclass lm — mboottest.lm","text":"object object class lm clustid character vector rhs formula containing names cluster variables B Integer. number bootstrap iterations. number clusters low, increasing B adds little additional runtime. R Hypothesis Vector Matrix giving linear combinations coefficients. Must either vector length k matrix dimension q x k, q number joint hypotheses k number estimated coefficients. r vector length q, q number tested hypotheses. Shifts null hypothesis H0: param = r vs H1: param != r. provided, vector zeros length q. bootcluster character vector rhs formula length 1. Specifies bootstrap clustering variable variables. one variable specified, bootstrapping clustered intersections clustering implied listed variables. mimic behavior stata's boottest command, default cluster intersection variables specified via clustid argument, even though necessarily recommended (see paper Roodman et al cited , section 4.2). options include \"min\", bootstrapping clustered cluster variable fewest clusters. , subcluster bootstrap (MacKinnon & Webb, 2018) supported - see vignette(\"fwildclusterboot\", package = \"fwildclusterboot\") details. type character function. character string specifies type boostrap use: One \"rademacher\", \"mammen\", \"norm\", \"gamma\" \"webb\". Alternatively, type can function(n) drawing wild bootstrap factors. \"rademacher\" default. Rademacher Mammen distribution, number replications B exceeds number possible draw ombinations, 2^(#number clusters), boottest() use possible combination (enumeration). impose_null Logical. Controls null hypothesis imposed bootstrap dgp . Null imposed (WCR) default. FALSE, null imposed (WCU) p_val_type Character vector length 1. Type p-value. default \"two-tailed\". options include \"equal-tailed\", \">\" \"<\". tol Numeric vector length 1. desired accuracy (convergence tolerance) used root finding procedure find confidence interval. Relative tolerance 1e-6 default. floattype Float64 default. option: Float32. floating point numbers Julia represented 32 64 bit? getauxweights Logical. FALSE default. Whether save auxilliary weight matrix (v) maxmatsize NULL default = limit. Else numeric scalar set maximum size auxilliary weight matrix (v), gigabytes bootstrapc Logical scalar, FALSE default. TRUE  request bootstrap-c instead bootstrap-t ssc object class boot_ssc.type obtained function boot_ssc(). Represents small sample adjustments computed. defaults adj = TRUE, fixef.K = \"none\", cluster.adj = \"TRUE\", cluster.df = \"conventional\". can find details help file boot_ssc(). function purposefully designed mimic fixest's fixest::ssc() function. ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast wild cluster bootstrap inference of joint hypotheses for object of\r\nclass lm — mboottest.lm","text":"object class mboottest p_val bootstrap p-value. N Sample size. Might differ regression sample size cluster variables contain NA values. boot_iter Number Bootstrap Iterations. clustid Names cluster Variables. N_G Dimension cluster variables used boottest. sign_level Significance level used boottest. type Distribution bootstrap weights. impose_null Whether null imposed bootstrap dgp . R vector \"R\" null hypothesis interest Rbeta = r. r scalar \"r\" null hypothesis interest Rbeta = r. point_estimate R'beta. scalar: constraints vector times regression coefficients. teststat_stat 'original' regression test statistics. teststat_boot bootstrap t-statistics. regression regression object used boottest. call Function call boottest.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.lm.html","id":"setting-seeds","dir":"Reference","previous_headings":"","what":"Setting Seeds","title":"Fast wild cluster bootstrap inference of joint hypotheses for object of\r\nclass lm — mboottest.lm","text":"guarantee reproducibility, need set global random seed via set.seed()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.lm.html","id":"run-boottest-quietly","dir":"Reference","previous_headings":"","what":"Run boottest quietly","title":"Fast wild cluster bootstrap inference of joint hypotheses for object of\r\nclass lm — mboottest.lm","text":"can suppress warning error messages setting following global options: options(rlib_warning_verbosity = \"quiet\") options(rlib_message_verbosity = \"quiet\") Note turn warnings (messages) produced via rlang::warn() rlang::inform(), might desirable use software build rlang, e.g. tidyverse.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.lm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fast wild cluster bootstrap inference of joint hypotheses for object of\r\nclass lm — mboottest.lm","text":"Roodman et al., 2019, \"Fast wild: Bootstrap inference STATA using boottest\", STATA Journal. (https://ideas.repec.org/p/qed/wpaper/1406.html) Cameron, . Colin, Jonah B. Gelbach, Douglas L. Miller. \"Bootstrap-based improvements inference clustered errors.\" Review Economics Statistics 90.3 (2008): 414-427. Cameron, .Colin & Douglas L. Miller. \"practitioner's guide cluster-robust inference\" Journal Human Resources (2015) doi:10.3368/jhr.50.2.317 Davidson & MacKinnon. \"Wild Bootstrap Tests IV regression\" Journal Economics Business Statistics (2010) doi:10.1198/jbes.2009.07221 MacKinnon, James G., Matthew D. Webb. \"wild bootstrap (treated) clusters.\" Econometrics Journal 21.2 (2018): 114-135. MacKinnon, James G., Matthew D. Webb. \"Cluster-robust inference: guide empirical practice\" Journal Econometrics (2022) doi:10.1016/j.jeconom.2022.04.001 MacKinnon, James. \"Wild cluster bootstrap confidence intervals.\" L'Actualite economique 91.1-2 (2015): 11-33. Webb, Matthew D. \"Reworking wild bootstrap based inference clustered errors\" . . 1315. Queen's Economics Department Working Paper, 2013.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/mboottest.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast wild cluster bootstrap inference of joint hypotheses for object of\r\nclass lm — mboottest.lm","text":"","code":"if (FALSE) { requireNamespace(\"clubSandwich\") requireNamespace(\"fwildclusterboot\") R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-   mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R   ) summary(wboottest) print(wboottest) nobs(wboottest) pval(wboottest) generics::tidy(wboottest) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.boottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to obtain the effective number of observation used in boottest() — nobs.boottest","title":"S3 method to obtain the effective number of observation used in boottest() — nobs.boottest","text":"S3 method obtain effective number observation used boottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.boottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to obtain the effective number of observation used in boottest() — nobs.boottest","text":"","code":"# S3 method for boottest nobs(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.boottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to obtain the effective number of observation used in boottest() — nobs.boottest","text":"object object type boottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.boottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to obtain the effective number of observation used in boottest() — nobs.boottest","text":"scalar containing effective number observations used boottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.boottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to obtain the effective number of observation used in boottest() — nobs.boottest","text":"","code":"requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm( proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) nobs(boot) #> [1] 300"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.mboottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to obtain the effective number of observation used\r\nin mboottest() — nobs.mboottest","title":"S3 method to obtain the effective number of observation used\r\nin mboottest() — nobs.mboottest","text":"S3 method obtain effective number observation used mboottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.mboottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to obtain the effective number of observation used\r\nin mboottest() — nobs.mboottest","text":"","code":"# S3 method for mboottest nobs(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.mboottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to obtain the effective number of observation used\r\nin mboottest() — nobs.mboottest","text":"object object type mboottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.mboottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to obtain the effective number of observation used\r\nin mboottest() — nobs.mboottest","text":"scalar containing effective number observations used mboottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/nobs.mboottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to obtain the effective number of observation used\r\nin mboottest() — nobs.mboottest","text":"","code":"if (FALSE) { requireNamespace(\"clubSandwich\") R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-   mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R   ) nobs(wboottest) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/plot.boottest.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots bootstrapped p-values as a function of the hypothesized effect size r for\r\na hypothesis test of the form R beta = r.The points where the p-values are 0.05\r\nare the boundaries of the bootstrapped confidence interval. — plot.boottest","title":"Plots bootstrapped p-values as a function of the hypothesized effect size r for\r\na hypothesis test of the form R beta = r.The points where the p-values are 0.05\r\nare the boundaries of the bootstrapped confidence interval. — plot.boottest","text":"Plots bootstrapped p-values function hypothesized effect size r hypothesis test form R beta = r.points p-values 0.05 boundaries bootstrapped confidence interval.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/plot.boottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots bootstrapped p-values as a function of the hypothesized effect size r for\r\na hypothesis test of the form R beta = r.The points where the p-values are 0.05\r\nare the boundaries of the bootstrapped confidence interval. — plot.boottest","text":"","code":"# S3 method for boottest plot(x, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/plot.boottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots bootstrapped p-values as a function of the hypothesized effect size r for\r\na hypothesis test of the form R beta = r.The points where the p-values are 0.05\r\nare the boundaries of the bootstrapped confidence interval. — plot.boottest","text":"x object type boottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/plot.boottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots bootstrapped p-values as a function of the hypothesized effect size r for\r\na hypothesis test of the form R beta = r.The points where the p-values are 0.05\r\nare the boundaries of the bootstrapped confidence interval. — plot.boottest","text":"plot bootstrap t-statistics different null hypotheses","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/plot.boottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots bootstrapped p-values as a function of the hypothesized effect size r for\r\na hypothesis test of the form R beta = r.The points where the p-values are 0.05\r\nare the boundaries of the bootstrapped confidence interval. — plot.boottest","text":"","code":"requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm( proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) plot(boot)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.boottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type boottest — pval.boottest","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type boottest — pval.boottest","text":"S3 method obtain wild cluster bootstrapped p-value object type boottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.boottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type boottest — pval.boottest","text":"","code":"# S3 method for boottest pval(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.boottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type boottest — pval.boottest","text":"object object type boottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.boottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type boottest — pval.boottest","text":"vector containing boundaries wild cluster bootstrapped p-value","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.boottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type boottest — pval.boottest","text":"","code":"#' requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm(   proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) confint(boot) #> [1] 0.03296405 0.11269973"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.html","id":null,"dir":"Reference","previous_headings":"","what":"pval is a S3 method to collect pvalues for objects\r\nof type boottest and mboottest — pval","title":"pval is a S3 method to collect pvalues for objects\r\nof type boottest and mboottest — pval","text":"pval S3 method collect pvalues objects type boottest mboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pval is a S3 method to collect pvalues for objects\r\nof type boottest and mboottest — pval","text":"","code":"pval(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pval is a S3 method to collect pvalues for objects\r\nof type boottest and mboottest — pval","text":"object object type lm, fixest, felm ivreg ... arguments","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pval is a S3 method to collect pvalues for objects\r\nof type boottest and mboottest — pval","text":"scalar bootstrapped p-value.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pval is a S3 method to collect pvalues for objects\r\nof type boottest and mboottest — pval","text":"","code":"requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm( proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) pval(boot) #> [1] 0.00050005"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.mboottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type mboottest — pval.mboottest","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type mboottest — pval.mboottest","text":"S3 method obtain wild cluster bootstrapped p-value object type mboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.mboottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type mboottest — pval.mboottest","text":"","code":"# S3 method for mboottest pval(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.mboottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type mboottest — pval.mboottest","text":"object object type mboottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.mboottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type mboottest — pval.mboottest","text":"vector containing boundaries wild cluster bootstrapped p-value","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/pval.mboottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to obtain the wild cluster bootstrapped p-value of an object\r\nof type mboottest — pval.mboottest","text":"","code":"if (FALSE) { requireNamespace(\"clubSandwich\") R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-   mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R   ) pval(wboottest) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics glance, tidy","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/setBoottest_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the default bootstrap algo for the current R session\r\nto be run via boottest() and mboottest() — setBoottest_engine","title":"Sets the default bootstrap algo for the current R session\r\nto be run via boottest() and mboottest() — setBoottest_engine","text":"Sets default bootstrap algo current R session run via boottest() mboottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/setBoottest_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the default bootstrap algo for the current R session\r\nto be run via boottest() and mboottest() — setBoottest_engine","text":"","code":"setBoottest_engine(engine)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/setBoottest_engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the default bootstrap algo for the current R session\r\nto be run via boottest() and mboottest() — setBoottest_engine","text":"engine Character scalar. Either 'R' 'WildBootTests.jl'. Default 'R'","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/setBoottest_engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the default bootstrap algo for the current R session\r\nto be run via boottest() and mboottest() — setBoottest_engine","text":"return value","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/setBoottest_engine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the default bootstrap algo for the current R session\r\nto be run via boottest() and mboottest() — setBoottest_engine","text":"","code":"if (FALSE) { setBoottest_engine(engine = \"R\") setBoottest_engine(engine = \"WildBootTests.jl\") }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.boottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to summarize objects of class boottest — summary.boottest","title":"S3 method to summarize objects of class boottest — summary.boottest","text":"S3 method summarize objects class boottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.boottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to summarize objects of class boottest — summary.boottest","text":"","code":"# S3 method for boottest summary(object, digits = 3, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.boottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to summarize objects of class boottest — summary.boottest","text":"object object type boottest digits rounding output. 3 default ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.boottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to summarize objects of class boottest — summary.boottest","text":"Returns result summaries objects type boottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.boottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to summarize objects of class boottest — summary.boottest","text":"","code":"requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm( proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) summary(boot) #> boottest.lm(object = lm_fit, param = \"treatment\", B = 9999, clustid = \"group_id1\") #> \t #>  Hypothesis: 1*treatment = 0 #>  Observations: 300 #>   Bootstr. Type: rademacher #>  Clustering: 1-way #>  Confidence Sets: 95% #>  Number of Clusters: 40 #>   #>              term estimate statistic p.value conf.low conf.high #> 1 1*treatment = 0    0.073     3.709   0.001    0.033     0.113"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.mboottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to summarize objects of class mboottest — summary.mboottest","title":"S3 method to summarize objects of class mboottest — summary.mboottest","text":"S3 method summarize objects class mboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.mboottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to summarize objects of class mboottest — summary.mboottest","text":"","code":"# S3 method for mboottest summary(object, digits = 3, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.mboottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to summarize objects of class mboottest — summary.mboottest","text":"object object type mboottest digits rounding output. 3 default ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.mboottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to summarize objects of class mboottest — summary.mboottest","text":"Returns result summaries objects type mboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/summary.mboottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to summarize objects of class mboottest — summary.mboottest","text":"","code":"if (FALSE) { requireNamespace(\"clubSandwich\") R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-   mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R   ) summary(wboottest) print(wboottest) nobs(wboottest) pval(wboottest) generics::tidy(wboottest) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.boottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to obtain the non-bootstrapped t-statistic calculated\r\nvia boottest() — teststat.boottest","title":"S3 method to obtain the non-bootstrapped t-statistic calculated\r\nvia boottest() — teststat.boottest","text":"S3 method obtain non-bootstrapped t-statistic calculated via boottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.boottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to obtain the non-bootstrapped t-statistic calculated\r\nvia boottest() — teststat.boottest","text":"","code":"# S3 method for boottest teststat(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.boottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to obtain the non-bootstrapped t-statistic calculated\r\nvia boottest() — teststat.boottest","text":"object object type boottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.boottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to obtain the non-bootstrapped t-statistic calculated\r\nvia boottest() — teststat.boottest","text":"vector containing non-bootstrapped t-statistic calculated boottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.boottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to obtain the non-bootstrapped t-statistic calculated\r\nvia boottest() — teststat.boottest","text":"","code":"requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm(   proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) teststat(boot) #> [1] 3.709435"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.html","id":null,"dir":"Reference","previous_headings":"","what":"teststat is a S3 method to collect teststats for objects\r\nof type boottest and mboottest — teststat","title":"teststat is a S3 method to collect teststats for objects\r\nof type boottest and mboottest — teststat","text":"teststat S3 method collect teststats objects type boottest mboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"teststat is a S3 method to collect teststats for objects\r\nof type boottest and mboottest — teststat","text":"","code":"teststat(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"teststat is a S3 method to collect teststats for objects\r\nof type boottest and mboottest — teststat","text":"object object type lm, fixest, felm ivreg ... arguments","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"teststat is a S3 method to collect teststats for objects\r\nof type boottest and mboottest — teststat","text":"scalar containing non-bootstrapped test statistic interest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"teststat is a S3 method to collect teststats for objects\r\nof type boottest and mboottest — teststat","text":"","code":"requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm(   proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) teststat(boot) #> [1] 3.709435"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.mboottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to obtain the non-bootstrapped test statistic calculated\r\nvia mboottest() — teststat.mboottest","title":"S3 method to obtain the non-bootstrapped test statistic calculated\r\nvia mboottest() — teststat.mboottest","text":"S3 method obtain non-bootstrapped test statistic calculated via mboottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.mboottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to obtain the non-bootstrapped test statistic calculated\r\nvia mboottest() — teststat.mboottest","text":"","code":"# S3 method for mboottest teststat(object, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.mboottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to obtain the non-bootstrapped test statistic calculated\r\nvia mboottest() — teststat.mboottest","text":"object object type 'mboottest' ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.mboottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to obtain the non-bootstrapped test statistic calculated\r\nvia mboottest() — teststat.mboottest","text":"vector containing non-bootstrapped t-statistic calculated mboottest()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/teststat.mboottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to obtain the non-bootstrapped test statistic calculated\r\nvia mboottest() — teststat.mboottest","text":"","code":"if (FALSE) { requireNamespace(\"clubSandwich\") R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-   mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R   ) teststat(wboottest) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.boottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to summarize objects of class boottest into tidy data.frame — tidy.boottest","title":"S3 method to summarize objects of class boottest into tidy data.frame — tidy.boottest","text":"S3 method summarize objects class boottest tidy data.frame","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.boottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to summarize objects of class boottest into tidy data.frame — tidy.boottest","text":"","code":"# S3 method for boottest tidy(x, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.boottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to summarize objects of class boottest into tidy data.frame — tidy.boottest","text":"x object type boottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.boottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to summarize objects of class boottest into tidy data.frame — tidy.boottest","text":"tidy data.frame estimation results objects type boottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.boottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to summarize objects of class boottest into tidy data.frame — tidy.boottest","text":"","code":"requireNamespace(\"fwildclusterboot\") data(voters) lm_fit <- lm( proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration,   data = voters ) boot <- boottest(lm_fit,   B = 9999,   param = \"treatment\",   clustid = \"group_id1\" ) generics::tidy(boot) #>              term   estimate statistic    p.value   conf.low conf.high #> 1 1*treatment = 0 0.07290769  3.709435 0.00110011 0.03349974 0.1117171"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.mboottest.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method to summarize objects of class mboottest into tidy data.frame — tidy.mboottest","title":"S3 method to summarize objects of class mboottest into tidy data.frame — tidy.mboottest","text":"S3 method summarize objects class mboottest tidy data.frame","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.mboottest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method to summarize objects of class mboottest into tidy data.frame — tidy.mboottest","text":"","code":"# S3 method for mboottest tidy(x, ...)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.mboottest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method to summarize objects of class mboottest into tidy data.frame — tidy.mboottest","text":"x object type mboottest ... arguments passed methods.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.mboottest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method to summarize objects of class mboottest into tidy data.frame — tidy.mboottest","text":"tidy data.frame estimation results objects type mboottest","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/tidy.mboottest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method to summarize objects of class mboottest into tidy data.frame — tidy.mboottest","text":"","code":"if (FALSE) { requireNamespace(\"clubSandwich\") R <- clubSandwich::constrain_zero(2:3, coef(lm_fit)) wboottest <-   mboottest(     object = lm_fit,     clustid = \"group_id1\",     B = 999,     R = R   ) summary(wboottest) print(wboottest) nobs(wboottest) pval(wboottest) generics::tidy(wboottest) }"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/voters.html","id":null,"dir":"Reference","previous_headings":"","what":"Random example data set — voters","title":"Random example data set — voters","text":"Random example data set","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/voters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random example data set — voters","text":"","code":"data(voters)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/voters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Random example data set — voters","text":"object class data.frame 300 rows 13 columns.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/reference/voters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random example data set — voters","text":"","code":"data(voters)"},{"path":[]},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"breaking-changes-0-14","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"fwildclusterboot 0.14","text":"print.boottest() print.mboottest() method deprecated, distinct use case. Bugfix: boottest() never run fixest::feols() varying slopes syntax via var1[var2]. Unfortunately heteroskedastic bootstrap - ’s bug. sorry affected ! version adds error message case.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"performance-0-14","dir":"Changelog","previous_headings":"","what":"Performance","title":"fwildclusterboot 0.14","text":"Version 0.14 … sparsifies “fast reliable” bootstraps - bootstrap types 31, 33, 13 (leads good speed gains problems high dimensional fixed effects) allows project cluster fixed effects running “fast reliable” algorithms “11” “31” computes generalized inverse pinv via rcpp eigen instead MASS::ginv() whenever Matrix::solve() fails unlocks parallelization (nthreads internally set 1 reason)","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"ropensci-review-feedback-0-14","dir":"Changelog","previous_headings":"","what":"rOpenSci Review feedback","title":"fwildclusterboot 0.14","text":"add vignette wild bootstrap concepts (wild bootstrap 101) better explanation plot method docs vignette guidelines turn messages warnings reorganization ropensci ssr tags code now possible interrupt rcpp loops","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"misc-0-14","dir":"Changelog","previous_headings":"","what":"Misc","title":"fwildclusterboot 0.14","text":"throws clear error message subcluster bootstrap tried fast reliable algos (currently supported) bumps required WildBootTests.jl version 0.9.7","code":""},{"path":[]},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"potentially-breaking-changes-0-13","dir":"Changelog","previous_headings":"","what":"Potentially Breaking Changes:","title":"fwildclusterboot 0.13","text":"boottest(), mboottest() boot_aggregate()longer dedicated seed argument. version 0.13, reproducibility results can controlled setting global seed via drqng::dqset.seed() set.seed(). context, see discussion . consequence, results produced via old versions fwildlcusterboot longer exactly reproducible. bootstrap run via engine = \"WildBootTests.jl\", bootstrapped t-statistics original t-statistic now returned vectors (align results enginges). Previously, returned matrices.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"other-changes-0-13","dir":"Changelog","previous_headings":"","what":"Other Changes:","title":"fwildclusterboot 0.13","text":"boottest() receives new argument, sampling, controls random numbers drawn via functions base dqrng package. code refactoring. bootstrap algorithms associated files renamed (e.g. boot_algo2.R called boot_algo_fastnwild.R, etc.). Much nicer error message formatting, via rlang::abort(), warn() inform(). rlang added dependency.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"background-on-the-change-to-seeding-0-13","dir":"Changelog","previous_headings":"","what":"Background on the Change to Seeding","title":"fwildclusterboot 0.13","text":"Prior changes introduced v0.13, boottest() always call set.seed() dqrng::dqset.seed() internally, regardless whether seed argument specified (ladder case, create internal seed randomly drawing large set integers). consider harmless, setting seeds inside boottest() way affect reproducibility scripts run end--end. However, learned generally considered bad practice overwrite global variables without notification - example, authors numpy deprecated np.random.seed() function reason. quick example happens function “reseeds”: affects future chain random draws. two ‘second’ calls rnorm(1) based different global seed states. result, decided deprecate seed' function argument. Random number generation must now **** set outside ofboottest()usingset.seed()anddqrng::dqset.seed()`. means bootstrap results generated via versions < 0.13 longer exactly replicable new version, sufficiently large number bootstrap iterations, change affect conclusions.","code":"fn_reseed <- function(x){set.seed(x)}  set.seed(123) rnorm(1) # [1] -0.5604756 fn_reseed(1) rnorm(1) # [1] -0.6264538  set.seed(123) rnorm(1); rnorm(1) # [1] -0.5604756 # [1] -0.2301775"},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-0121","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.12.1","title":"fwildclusterboot 0.12.1","text":"CRAN release: 2023-01-23 hot-fix release turns tests CRAN fail non-standard CRAN test environments.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-012","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.12","title":"fwildclusterboot 0.12","text":"CRAN release: 2022-10-15 first CRAN release since version 0.9. comes set new features, also potentially breaking changes. section summarizes developments since version 0.9.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"potentially-breaking-changes-0-12","dir":"Changelog","previous_headings":"","what":"Potentially breaking changes:","title":"fwildclusterboot 0.12","text":"boottest()'s function argument boot_algo renamed engine setBoottest_boot_algo() function renamed setBoottest_engine()","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"bug-fixes-and-internal-changes-0-12","dir":"Changelog","previous_headings":"","what":"Bug fixes and internal changes","title":"fwildclusterboot 0.12","text":"multi-parameter hypothesis form R beta = r tested, heteroskedastic wild bootstrap nevertheless always test “beta_k = 0” vs “beta_k != 0”, “beta_k = param”. sorry bug! Matrix.utils package danger CRAN removal - replaced custom functions internal use.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"new-features-and-improvements-0-12","dir":"Changelog","previous_headings":"","what":"New features and Improvements","title":"fwildclusterboot 0.12","text":"new function argument added - bootstrap_type. combination impose_null function argument, allows choose different cluster bootstrap types - WCx11, WCx13, WCx31, WCx33. details methods, see working paper MacKinnon, Nielsen & Webb (2022). Currently, new bootstrap types compute p-values. Adding support confidence intervals work progress. boot_aggregate() method now supports aggregation coefficients staggered difference--differences following methods Sun & Abraham (2021, Journal Econometrics) combination sunab() function fixesthas added. Essentially, boot_aggregate() copy aggregate.fixest: difference inference powered wild bootstrap. heteroskedastic bootstrap now significantly faster, WCR21 WCR31 versions now supported (.e. HC2 HC3 ‘imposed’ bootstrap dgp.)","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-0113","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.11.3","title":"fwildclusterboot 0.11.3","text":"significant speed improvements heteroskedastic bootstrap","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-0112","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.11.2","title":"fwildclusterboot 0.11.2","text":"significant speed improvements x1 bootstrap algorithms, bootstrap_type %% c(\"11\", \"31\"), WCR WCU","code":""},{"path":[]},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"new-bootstrap-algorithms-following-mnw-0-11-1","dir":"Changelog","previous_headings":"","what":"New bootstrap algorithms following MNW (2022)","title":"fwildclusterboot 0.11.1","text":"new function argument added - bootstrap_type. combination impose_null function argument, allows choose different cluster bootstrap types - WCx11, WCx13, WCx31, WCx33. details methods, see working paper MacKinnon, Nielsen & Webb (2022).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"boot_aggregate-method-for-sun-abrahams-event-studies-0-11-1","dir":"Changelog","previous_headings":"","what":"boot_aggregate() method for Sun-Abrahams Event Studies","title":"fwildclusterboot 0.11.1","text":"boot_aggregate() method supports aggregation coefficients staggered difference--differences following methods Sun & Abraham (2021, Journal Econometrics) combination sunab() function fixesthas added. Essentially, boot_aggregate() copy aggregate.fixest: difference inference powered wild bootstrap.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"other-syntax-changes-potentially-breaking-0-11-1","dir":"Changelog","previous_headings":"","what":"Other syntax changes, potentially breaking!","title":"fwildclusterboot 0.11.1","text":"boot_algo function argument renamed engine. setBoottest_boot_algo() function renamed setBoottest_engine(). consequence, syntax introduced 0.11 changes run everything WildBootTests.jl, specify","code":"boottest(   lm_fit,    param = ~treatment,    clustid = ~group_id1,   B = 9999,    impose_null = TRUE,   engine = \"R\",    bootstrap_type = \"11\" ) boottest(   lm_fit,    param = ~treatment,    clustid = ~group_id1,   B = 9999,    impose_null = TRUE,   engine = \"WildBootTests.jl\",    bootstrap_type = \"11\" )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-011","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.11","title":"fwildclusterboot 0.11","text":"release introduces new wild cluster bootstrap variants described MacKinnon, Nielsen & Webb (2022). implementation still quite bare-bone: allows test hypotheses form βk = 0 vs βk ≠ 0, allow regression weights fixed effects, compute confidence intervals. can run one ‘new’ variants - e.g. “WCR13”, specifying bootstrap_type function argument accordingly:","code":"boottest(   lm_fit,    param = ~treatment,    clustid = ~group_id1,   B = 9999,    impose_null = TRUE,   engine = \"R\",    bootstrap_type = \"31\" )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-010","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.10","title":"fwildclusterboot 0.10","text":"introduces range new methods: nobs(), pval(), teststat(), confint() print() multiple (internal) changes ropensci standards alignment drop t_boot (teststat_boot) function arguments -> now TRUE default fix bug lean algorithms - always tested hypotheses form beta = 0 instead R’beta = r, even R != 1 r != 0 enable full enumeration R-lean tests enable deterministic ‘full enumeration tests’ - exact","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-09","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.9","title":"fwildclusterboot 0.9","text":"CRAN release: 2022-06-10 v0.9 moves data pre-processing model.frame methods model_matrix methods. wanted , issue #42, raised Michael Topper, finally convinced start working project. Moving model_matrix methods unlocks new functionality boottest() plays fixest objects - now possible run boottest() feols() models use syntactic sugar: formula sugar still leads errors, e.g.  release fixes multicollinearity bug occured lm() fixest() silently deleted multicollinar variable(s). Thanks Kurt Schmidheiny reporting! na_omit function argument dropped. cluster variable included regression model, now allowed contain NA values. Several function arguments can now fed boottest() formulas (param, clustid, bootcluster, fe).","code":"library(fwildclusterboot) library(fixest)  data(voters) feols_fit <- feols(proposition_vote ~ i(treatment, ideology1) ,     data = voters ) boot1 <- boottest(feols_fit,     B = 9999,     param = \"treatment::0:ideology1\",     clustid = \"group_id1\" )  feols_fits <- fixest::feols(proposition_vote ~ treatment | sw(Q1_immigration, Q2_defense), data = voters) res <- lapply(feols_fits, \\(x) boottest(x, B = 999, param = \"treatment\", clustid = \"group_id1\"))    voters$split <- sample(1:2, nrow(voters), TRUE) feols_fits <- fixest::feols(proposition_vote ~ treatment, split = ~split, data = voters)  res <- lapply(feols_fits, \\(x) boottest(x, B = 999, param = \"treatment\", clustid = \"group_id1\")) feols_fit2 <- feols(proposition_vote ~ treatment | Q1_immigration^Q2_defense,     data = voters )  boot1 <- boottest(feols_fit2,     B = 9999,     param = \"treatment\",     clustid = \"group_id1\" ) data(voters) feols_fit <- feols(proposition_vote ~ treatment ,     data = voters ) boot <- boottest(feols_fit,     B = 9999,     param = ~ treatment,     clustid = ~ group_id1 )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-08","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.8","title":"fwildclusterboot 0.8","text":"CRAN release: 2022-04-18","code":""},{"path":[]},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"boot_algo--wildboottestsjl-0-8","dir":"Changelog","previous_headings":"Two new bootstrap algorithms: ‘WildBootTests.jl’ and ‘R-lean’","what":"boot_algo = ‘WildBootTests.jl’","title":"fwildclusterboot 0.8","text":"fwildclusterboot now supports calling WildBootTests.jl, fast Julia implementation wild cluster bootstrap algorithm. , new function argument introduced, boot_algo, possible control executed bootstrap algorithm. WildBootTests.jl (compilation) orders magnitudes faster fwildclusterboot's native R implementation, speed gains particularly pronounced large problems large number clusters many bootstrap iterations. Furthermore, WildBootTests.jl supports range models tests previously supported fwildclusterboot: importantly ) wild cluster bootstrap tests multiple joint hypotheses b) WRE bootstrap Davidson & MacKinnon instrumental variables estimation. top cake … WRE really fast. guidance install run WildBooTests.jl, look associated article. Also, note running wild cluster bootstrap WildBootTests.jl often memory-efficient.","code":"# load data set voters included in fwildclusterboot data(voters) # estimate the regression model via lm lm_fit <- lm(proposition_vote ~ treatment + ideology1 + log_income + Q1_immigration , data = voters) boot_lm <- boottest(   lm_fit,    clustid = \"group_id1\",    param = \"treatment\",    B = 9999,    boot_algo = \"WildBootTests.jl\" ) library(ivreg) data(\"SchoolingReturns\", package = \"ivreg\") # drop all NA values from SchoolingReturns SchoolingReturns <- na.omit(SchoolingReturns) ivreg_fit <- ivreg(log(wage) ~ education + age + ethnicity + smsa + south + parents14 |                            nearcollege + age  + ethnicity + smsa + south + parents14, data = SchoolingReturns)  boot_ivreg <- boottest(   object = ivreg_fit,   B = 999,   param = \"education\",   clustid = \"kww\",   type = \"mammen\",   impose_null = TRUE ) generics::tidy(boot_ivreg) #              term  estimate statistic   p.value    conf.low conf.high # 1 1*education = 0 0.0638822  1.043969 0.2482482 -0.03152655 0.2128746"},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"boot_algo--r-lean-0-8","dir":"Changelog","previous_headings":"Two new bootstrap algorithms: ‘WildBootTests.jl’ and ‘R-lean’","what":"boot_algo = ‘R-lean’","title":"fwildclusterboot 0.8","text":"key limitation vectorized ‘fast’ cluster bootstrap algorithm implemented fwildclusterboot memory-demanding. ‘larger’ problems, running boottest() might lead --memory errors. offer alternative, boottest() now ships ‘new’ rcpp- loop-based implementation wild cluster bootstrap (‘wild2’ algorithm Roodman et al).","code":"boot_lm <- boottest(   lm_fit,    clustid = \"group_id1\",    param = \"treatment\",    B = 9999,    boot_algo = \"R-lean\" )"},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"heteroskeadstic-wild-bootstrap-0-8","dir":"Changelog","previous_headings":"","what":"Heteroskeadstic Wild Bootstrap","title":"fwildclusterboot 0.8","text":"now possible run boottest() without specifying clustid function argument. case, boottest() runs heteroskedasticity-robust wild bootstrap (HC1), implemented c++.","code":"boot_hc1 <- boottest(lm_fit, param = \"treatment\", B = 9999) summary(boot_hc1)"},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"boottest-function-argument-beta0-deprecated-0-8","dir":"Changelog","previous_headings":"","what":"boottest() function argument beta0 deprecated","title":"fwildclusterboot 0.8","text":"consistency WildBootTests.jl, boottest() function argument beta0 now replaced new function argument, r.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"frühjahrsputz-0-8","dir":"Changelog","previous_headings":"","what":"Frühjahrsputz","title":"fwildclusterboot 0.8","text":"spent time clean fwildclusterboot's internals, now hopefully readable easier maintain.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"testing-0-8","dir":"Changelog","previous_headings":"","what":"Testing","title":"fwildclusterboot 0.8","text":"fwildclusterboot now pre-dominantly tested WildBootTests.jl. Tests depend Julia default run CRAN, regularly run Mac, Windows Linux via github actions.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-07","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.7","title":"fwildclusterboot 0.7","text":"CRAN release: 2022-01-03 Bug fixes, see issues #26 #27 regarding preprocessing fixest weights passed feols() formula cluster specified fixest column vector.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-06","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.6","title":"fwildclusterboot 0.6","text":"Bug fix: one-sided hypotheses WRU bootstrap (impose_null = FALSE), returned p-values incorrect - reported ‘p’, ‘1-p’. E.g. reported p-values reported 0.4, reported 0.6. new function argument ssc gives control small sample adjustments made within boottest(). closely mirrors ssc argument fixest. difference fwildclusterboot::boot_ssc()'s fixef.K argument currently one option, 'none', means fixed effect parameters discarded calculating number estimated parameters k. default argument boot_ssc() adj = TRUE, fixef.K = \"none\", cluster.adj = TRUE cluster.df = \"conventional\". fixest, cluster.df argument \"min\" default. Prior v 0.6, default, small sample adjustments regarding sample size N number estimated parameters k applied. changes v0.6 may slightly affect output boottest(). exact reproducibility previous results, set adj = FALSE. Setting adj = TRUE affect p-values confidence intervals oneway clustering, internally calculated t-stat, divided sqrt(N-k)/(N-1). twoway clustering, might affect number order invalid bootstrapped t-statistics (due non-positive definite covariance matrices) , channel, affect bootstrapped inferential parameters. Testing: unit tests now run github actions wildboottestjlr, JuliaConnectoR based wrapper around WildBootTests.jl, Julia implementation fast wild cluster bootstrap algorithm. Additionally, minor speed tweaks.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-051","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.5.1","title":"fwildclusterboot 0.5.1","text":"CRAN release: 2021-11-06 Fixes bug Mammen weights introduced version 0.5 -> switch back sample() function. guarantee reproducibilty Mammen weights, either seed needs specified boottest() global seed needs set via set.seed(). Deletes unnecessary computations boot_algo2() -> speed improvements B = 2^(#number clusters), Rademacher weights enumerated - instead, drawn randomly enumeration occured B > 2^(#number clusters). Now, enumeration occurs B >= 2^(#number clusters).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-05","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.5","title":"fwildclusterboot 0.5","text":"CRAN release: 2021-11-03 Version 0.5 fixes error bootstrap weighted least squares introduced version 0.4. unit tests compare fwildclusterboot weighted least squares results boottest.stata pass. particular, enumerated cases pass exact equality (cases, bootstrap weights matrices exactly identical R Stata). boottest() now stops fixest::feols() deletes non-NA values (e.g. singleton fixed effects deletion) asks user delete rows prior estimation via feols() & boottest(). Currently, boottest()'s pre-processing handle deletions - remains future work. align fwildclusterboot Stata’s boottest command (Roodman et al, 2019), Mammen weights longer enumerated fwildclusterboot::boottest(). boottest() longer sets internal seed (previously set.seed(1)) seed provided function argument. Sampling bootstrap weights now powered dqrng package, speeds creation bootstrap weights matrix. set “global” seed, one now use dqset.seed() function dqrng package, added dependency.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-037","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.3.7","title":"fwildclusterboot 0.3.7","text":"CRAN release: 2021-09-14 Bug fix: output boottest() varied depending class input fixed effects regressions via lfe::felm() fixest::feols(). bug occurred boottest() work pre-processed model.frame object either felm() feols() works original input data. felm() feols() change non-factor fixed effects variables factors internally, boottest() check implicitely assumed fixed effects used regression models indeed factors original data set. consequence, one fixed effects e.g. numeric, boottest() produce incorrect results without throwing error. version 0.3.7, boottest() checks internally variables original data set used fixed effects factor variables , changes factors. Thanks timotheedotc raising issue github, can found : https://github.com/s3alfisc/fwildclusterboot/issues/14. tests added compare output boottest() wild cluster bootstrap implemented via clusterSEs.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-036","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.3.6","title":"fwildclusterboot 0.3.6","text":"CRAN release: 2021-08-01 Bug fix regarding suggested packages CRAN: see github issue #12. Added (requireNamespace(\"pkgname\")) statements suggested packages vignettes, examples tests. Note unit tests now execute CRAN fixest lfe can installed OS.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-035","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.3.5","title":"fwildclusterboot 0.3.5","text":"CRAN release: 2021-06-20 Bug fix: Rademacher Mammen weights cases (2^ number clusters) < # boostrap iterations, (deterministic ) full enumeration employed sampling bootstrap weights. Full enumeration means following: e.g. 6 numbers clusters, 2^6 = 64 unique draws either Rademacher Mammen distributions exists. Therefore, boottest() overwrites user-provided number bootstrap iterations B = (2^ number clusters) larger number chosen. bug now occured bootstrap weights drawn randomly replacement instead using full enumeration. Note: full enumeration introduced version 0.3.3. Thanks fschoner finding bug! see github issue #11 Bug fix: small bug fixed related missing values cluster variables. default, boottest() now sets internal seed seed provided user via seed function argument. Several improvements documentation.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-034","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.3.4","title":"fwildclusterboot 0.3.4","text":"CRAN release: 2021-05-01 Fix CRAN errors caused small bug vignette","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-033","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.3.3","title":"fwildclusterboot 0.3.3","text":"CRAN release: 2021-04-12 implements full enumeration Rademacher Mammen Weights 2k < B, k number clusters B number bootstrap iterations","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-032","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.3.2","title":"fwildclusterboot 0.3.2","text":"CRAN release: 2021-02-26 Fixes CRAN test error message Oracle Solaris.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-031","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.3.1","title":"fwildclusterboot 0.3.1","text":"CRAN release: 2021-02-16 glance.boottest() method added, enables use modelsummary package fwildclusterboot. tidy.boottest() method longer exported. can still access via fwildclusterboot:::tidy.boottest() loading generics package via library(generics).","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-030","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.3.0","title":"fwildclusterboot 0.3.0","text":"Additional performance improvements parallelization. default, boottest() uses half available threads parallel execution. number threads can set via nthreads function argument. Additional function arguments boottest() - user can now set tolerance maximum number iterations calculation confidence intervals. default, tol = 1e-6 maxiter = 10. package longer depends data.table fabricatr - now suggested. , package now comes example data set ‘voters’.","code":""},{"path":"https://s3alfisc.github.io/fwildclusterboot/news/index.html","id":"fwildclusterboot-020","dir":"Changelog","previous_headings":"","what":"fwildclusterboot 0.2.0","title":"fwildclusterboot 0.2.0","text":"Add support tests two-sided, univariate hypotheses regression weights subcluster bootstrap restricted (WCR) unrestricted (WCU) bootstrap","code":""}]
